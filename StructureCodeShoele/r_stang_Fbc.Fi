!=======================================================================
!                   F A B R I C   S T R U C T U R E
!=======================================================================
             ibdy=Iglbloc_fbc(ibdyg)
             in_fbc=ibdy
           if(ndim .eq. 2) then
            Print*, 'NO Fabric model for two dimensional simulation'
            Print*, 'Please change input file!'
            STOP    
           endif

      if(Genalpha_timesolver(ibdyg) .eq. 0) then
      np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      if(FabricMeshFlag_fbc(in_fbc)) np=np+FabricMesh_numrecord(ibdy)
      if(FabricLineFlag_fbc(in_fbc)) np=np+FabricLine_numrecord(ibdy)


      allocate(
     &       aamat_fbc(np,np)
     &      ,kkb_fbc(np,np)
     &      ,mms_fbc(1,np) )

! for free boundary condition
      jq=1
      do np=1,ns_ibm_i_fbc(ibdy)  
         npg=ns_ibm_r_fbc(ibdy)+np
         bodypoint(1)=boundrylist_fbc(ibdy,np,1)
         bodypoint(2)=boundrylist_fbc(ibdy,np,2)
         bodypoint(3)=boundrylist_fbc(ibdy,np,3)
         gx_ibm_massive_fbc(ibdy,npg)=
     &                            gx_ibm_massive_fbc(ibdy,bodypoint(1))
     &                           +gx_ibm_massive_fbc(ibdy,bodypoint(2))       
     &                           -gx_ibm_massive_fbc(ibdy,bodypoint(3))       

         gy_ibm_massive_fbc(ibdy,npg)=
     &                            gy_ibm_massive_fbc(ibdy,bodypoint(1))
     &                           +gy_ibm_massive_fbc(ibdy,bodypoint(2))       
     &                           -gy_ibm_massive_fbc(ibdy,bodypoint(3))       
    
         gz_ibm_massive_fbc(ibdy,npg)=
     &                            gz_ibm_massive_fbc(ibdy,bodypoint(1))
     &                           +gz_ibm_massive_fbc(ibdy,bodypoint(2))       
     &                           -gz_ibm_massive_fbc(ibdy,bodypoint(3))

      end do       

      aamat_fbc=0.0
      mms_fbc=0.0
      kkb_fbc=0.0

      fibm1pres_fbc=0.0
      fibm2pres_fbc=0.0
      fibm3pres_fbc=0.0

      fibm1cont_fbc=0.0
      fibm2cont_fbc=0.0
      fibm3cont_fbc=0.0

      ntypeMAx_loc=-1000

!update edge length
               do j=1,numedge(in_fbc)
                  iv0=EdgeList_fbc(in_fbc,j,1) 
                  iv1=EdgeList_fbc(in_fbc,j,2)
                  maxtmpx= sqrt(
     &             (gx_ibm_massive_fbc(in_fbc,iv0)
     &              -gx_ibm_massive_fbc(in_fbc,iv1))**2                 
     &            +(gy_ibm_massive_fbc(in_fbc,iv0)
     &              -gy_ibm_massive_fbc(in_fbc,iv1))**2                     
     &            +(gz_ibm_massive_fbc(in_fbc,iv0)
     &              -gz_ibm_massive_fbc(in_fbc,iv1))**2)  
                  EdgeLength_fbc(in_fbc,j)=maxtmpx                     
               enddo
!update center of elements
               do j=1,numelr(i2g)   
                  EleCenter_fbc(in_fbc,j,1:3)=0.0           
                  do j2=1,3  !nodes
                     k=nea_fbc(in_fbc,j,j2)
                     EleCenter_fbc(in_fbc,j,1)=
     &                   EleCenter_fbc(in_fbc,j,1)
     &                   +gx_ibm_massive_fbc(in_fbc,k)/3.0
                     EleCenter_fbc(in_fbc,j,2)=
     &                   EleCenter_fbc(in_fbc,j,2)
     &                   +gy_ibm_massive_fbc(in_fbc,k)/3.0
                     EleCenter_fbc(in_fbc,j,3)=
     &                   EleCenter_fbc(in_fbc,j,3)
     &                   +gz_ibm_massive_fbc(in_fbc,k)/3.0
                  enddo
!update area of element
                 iv0=nea_fbc(in_fbc,j,1)
                 iv1=nea_fbc(in_fbc,j,2)
                 iv2=nea_fbc(in_fbc,j,3)
                 axtmp_fbc=gx_ibm_massive_fbc(in_fbc,iv1)
     &                    -gx_ibm_massive_fbc(in_fbc,iv0)
                 aytmp_fbc=gy_ibm_massive_fbc(in_fbc,iv1)
     &                    -gy_ibm_massive_fbc(in_fbc,iv0) 
                 aztmp_fbc=gz_ibm_massive_fbc(in_fbc,iv1)
     &                    -gz_ibm_massive_fbc(in_fbc,iv0) 
                 bxtmp_fbc=gx_ibm_massive_fbc(in_fbc,iv2)
     &                    -gx_ibm_massive_fbc(in_fbc,iv0)
                 bytmp_fbc=gy_ibm_massive_fbc(in_fbc,iv2)
     &                    -gy_ibm_massive_fbc(in_fbc,iv0) 
                 bztmp_fbc=gz_ibm_massive_fbc(in_fbc,iv2)
     &                    -gz_ibm_massive_fbc(in_fbc,iv0)
                 cxtmp_fbc=aytmp_fbc*bztmp_fbc-aztmp_fbc*bytmp_fbc
                 cytmp_fbc=aztmp_fbc*bxtmp_fbc-axtmp_fbc*bztmp_fbc
                 cztmp_fbc=axtmp_fbc*bytmp_fbc-aytmp_fbc*bxtmp_fbc
                 EleArea_fbc(in_fbc,j)=
     &                0.5*sqrt(cxtmp_fbc**2+cytmp_fbc**2+cztmp_fbc**2)
!compute the normal
                 axtmp_fbc=gx_ibm_massive_fbc(in_fbc,iv0)
     &                    -gx_ibm_massive_fbc(in_fbc,iv2)
                 aytmp_fbc=gy_ibm_massive_fbc(in_fbc,iv0)
     &                    -gy_ibm_massive_fbc(in_fbc,iv2) 
                 aztmp_fbc=gz_ibm_massive_fbc(in_fbc,iv0)
     &                    -gz_ibm_massive_fbc(in_fbc,iv2) 
                 bxtmp_fbc=gx_ibm_massive_fbc(in_fbc,iv0)
     &                    -gx_ibm_massive_fbc(in_fbc,iv1)
                 bytmp_fbc=gy_ibm_massive_fbc(in_fbc,iv0)
     &                    -gy_ibm_massive_fbc(in_fbc,iv1) 
                 bztmp_fbc=gz_ibm_massive_fbc(in_fbc,iv0)
     &                    -gz_ibm_massive_fbc(in_fbc,iv1)
                 tmpcoord(1)=aytmp_fbc*bztmp_fbc-aztmp_fbc*bytmp_fbc
                 tmpcoord(2)=aztmp_fbc*bxtmp_fbc-axtmp_fbc*bztmp_fbc
                 tmpcoord(3)=axtmp_fbc*bytmp_fbc-aytmp_fbc*bxtmp_fbc
                 cxtmp_fbc
     &                =sqrt(dot_product(tmpcoord(1:3),tmpcoord(1:3)))
                 tmpcoord(1)=tmpcoord(1)/cxtmp_fbc
                 tmpcoord(2)=tmpcoord(2)/cxtmp_fbc
                 tmpcoord(3)=tmpcoord(3)/cxtmp_fbc 
                 EleNormal_fbc(in_fbc,j,1:3)= tmpcoord(1:3) 

!compute the inner element angles and edge sizes
               tmpcoord(1)=gx_ibm_massive_fbc(in_fbc,iv2)
     &                    -gx_ibm_massive_fbc(in_fbc,iv1)
               tmpcoord(2)=gy_ibm_massive_fbc(in_fbc,iv2)
     &                    -gy_ibm_massive_fbc(in_fbc,iv1) 
               tmpcoord(3)=gz_ibm_massive_fbc(in_fbc,iv2)
     &                    -gz_ibm_massive_fbc(in_fbc,iv1)

                 EleEdge_fbc(in_fbc,j,1) 
     &                =sqrt(dot_product(tmpcoord(1:3),tmpcoord(1:3)))

              tmpcoord2(1)=gx_ibm_massive_fbc(in_fbc,iv2)
     &                    -gx_ibm_massive_fbc(in_fbc,iv0)
              tmpcoord2(2)=gy_ibm_massive_fbc(in_fbc,iv2)
     &                    -gy_ibm_massive_fbc(in_fbc,iv0) 
              tmpcoord2(3)=gz_ibm_massive_fbc(in_fbc,iv2)
     &                    -gz_ibm_massive_fbc(in_fbc,iv0)

                 EleEdge_fbc(in_fbc,j,2) 
     &                =sqrt(dot_product(tmpcoord2(1:3),tmpcoord2(1:3)))

              tmpcoord3(1)=gx_ibm_massive_fbc(in_fbc,iv1)
     &                    -gx_ibm_massive_fbc(in_fbc,iv0)
              tmpcoord3(2)=gy_ibm_massive_fbc(in_fbc,iv1)
     &                    -gy_ibm_massive_fbc(in_fbc,iv0) 
              tmpcoord3(3)=gz_ibm_massive_fbc(in_fbc,iv1)
     &                    -gz_ibm_massive_fbc(in_fbc,iv0)

                 EleEdge_fbc(in_fbc,j,3) 
     &                =sqrt(dot_product(tmpcoord3(1:3),tmpcoord3(1:3)))

               enddo


             if(volume_flag_fbc(in_fbc)) then
                total_volume_fbc(in_fbc)=0.0
!calculate total volume
                do j=1,numelr(i2g) 
                   total_volume_fbc(in_fbc)=total_volume_fbc(in_fbc)
     &                   +EleArea_fbc(in_fbc,j)*(
     &                            EleNormal_fbc(in_fbc,j,1)           
     &                           *EleCenter_fbc(in_fbc,j,1) 
     &                           +EleNormal_fbc(in_fbc,j,2)           
     &                           *EleCenter_fbc(in_fbc,j,2) 
     &                           +EleNormal_fbc(in_fbc,j,3)           
     &                           *EleCenter_fbc(in_fbc,j,3) 
     &                           )
               enddo
               total_volume_fbc(in_fbc)=total_volume_fbc(in_fbc)/3.0
            endif 
             if(Aera_flag_fbc(in_fbc)) then
                total_Area_fbc(in_fbc)=0.0
                do j=1,numelr(i2g)           
                   total_Area_fbc(in_fbc)=total_Area_fbc(in_fbc)
     &                   +EleArea_fbc(in_fbc,j)
               enddo
            endif 


      do ne=1,numelr(ibdyg)
            tmpv3(1:3)=EleNormal_fbc(in_fbc,ne,1:3)
            tmpv1x(1)=xpcenter_fbc(ibdy,ne,1)
            tmpv1x(2)=xpcenter_fbc(ibdy,ne,2)
            tmpv1x(3)=xpcenter_fbc(ibdy,ne,3)

             if (ExternalPressureFlag(ibdyg)) then
             
             fibm1cont_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm1cont_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(1)*tmpv1x(1)
             fibm1cont_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm1cont_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(1)*tmpv1x(2)
             fibm1cont_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm1cont_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(1)*tmpv1x(3)

             fibm1pres_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm1pres_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(1)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm1pres_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm1pres_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(1)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm1pres_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm1pres_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(1)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0

             fibm2cont_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm2cont_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(2)*tmpv1x(1)
             fibm2cont_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm2cont_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(2)*tmpv1x(2)
             fibm2cont_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm2cont_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(2)*tmpv1x(3)
             fibm2pres_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm2pres_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(2) 
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm2pres_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm2pres_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(2)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm2pres_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm2pres_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(2) 
     &                                 *EleArea_fbc(in_fbc,ne)/3.0

             fibm3cont_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm3cont_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(3)*tmpv1x(1)
             fibm3cont_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm3cont_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(3)*tmpv1x(2)
             fibm3cont_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm3cont_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(3)*tmpv1x(3)

             fibm3pres_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm3pres_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(3)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm3pres_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm3pres_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(3)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm3pres_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm3pres_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(3)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             endif
           end do  !element

        do j=1,ns_ibm_r_fbc(i)
             fibm1_fbc(i,j)=fibm1_fbc(i,j)
     &          *areapnt_fbc(i,j)
             fibm2_fbc(i,j)=fibm2_fbc(i,j)
     &          *areapnt_fbc(i,j)
             fibm3_fbc(i,j)=fibm3_fbc(i,j)
     &          *areapnt_fbc(i,j)
        end do


! calculate volume forces
             KtmpFlag=.false.
             if(volume_flag_fbc(in_fbc)) then
                 cf_coef=kappa_volume_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
     &                *(total_volume_fbc(in_fbc)-volume_eq_fbc(in_fbc))
     &                /volume_eq_fbc(in_fbc)
              do j=1,numelr(i2g) 
                 iv0=nea_fbc(in_fbc,j,1)
                 iv1=nea_fbc(in_fbc,j,2)
                 iv2=nea_fbc(in_fbc,j,3)

                 x0=gx_ibm_massive_fbc(in_fbc,iv0)
                 y0=gy_ibm_massive_fbc(in_fbc,iv0)                 
                 z0=gz_ibm_massive_fbc(in_fbc,iv0)
                 x1=gx_ibm_massive_fbc(in_fbc,iv1)
                 y1=gy_ibm_massive_fbc(in_fbc,iv1)                 
                 z1=gz_ibm_massive_fbc(in_fbc,iv1)
                 x2=gx_ibm_massive_fbc(in_fbc,iv2)
                 y2=gy_ibm_massive_fbc(in_fbc,iv2)                 
                 z2=gz_ibm_massive_fbc(in_fbc,iv2)
                 call VolumeForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)
                 
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)
              enddo
            endif 
             if(Aera_flag_fbc(in_fbc)) then
                 cf_coef=kappa_Area_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
     &                *(total_Area_fbc(in_fbc)-Area_eq_fbc(in_fbc))
     &                /4.0/Area_eq_fbc(in_fbc)
              do j=1,numelr(i2g)
                 cf_coef2=cf_coef/EleArea_fbc(in_fbc,j)
                 cf_coef1=kappa_Area_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
     &                *(EleArea_fbc(in_fbc,j)-EleArea0_fbc(in_fbc,j))
     &                /4.0/EleArea0_fbc(in_fbc,j)
                 cf_coef1=cf_coef1/EleArea_fbc(in_fbc,j)
                 iv0=nea_fbc(in_fbc,j,1)
                 iv1=nea_fbc(in_fbc,j,2)
                 iv2=nea_fbc(in_fbc,j,3)

                 x0=gx_ibm_massive_fbc(in_fbc,iv0)
                 y0=gy_ibm_massive_fbc(in_fbc,iv0)                 
                 z0=gz_ibm_massive_fbc(in_fbc,iv0)
                 x1=gx_ibm_massive_fbc(in_fbc,iv1)
                 y1=gy_ibm_massive_fbc(in_fbc,iv1)                 
                 z1=gz_ibm_massive_fbc(in_fbc,iv1)
                 x2=gx_ibm_massive_fbc(in_fbc,iv2)
                 y2=gy_ibm_massive_fbc(in_fbc,iv2)                 
                 z2=gz_ibm_massive_fbc(in_fbc,iv2)

                 call Total_AreaForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef2
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)
 
                 call Local_AreaForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef1
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)
              enddo
            endif
             if (inplane_flag_fbc(in_fbc)) then
              if(inplane_type_fbc(in_fbc) .eq. 1) then
               tmpcoord(1)=-kappa_inplane_fbc(in_fbc,1)
     &              *KBT_fbc(in_fbc)/edge_length_p_fbc(in_fbc)

               tmpcoord(2)=-kappa_inplane_fbc(in_fbc,2)

               tmpcoord(3)=-kappa_inplane_fbc(in_fbc,3)

                do j=1,numedge(in_fbc)
                  iv0=EdgeList_fbc(in_fbc,j,1) 
                  iv1=EdgeList_fbc(in_fbc,j,2)

                  x0=gx_ibm_massive_fbc(in_fbc,iv0)
                  x1=gx_ibm_massive_fbc(in_fbc,iv1)
                  y0=gy_ibm_massive_fbc(in_fbc,iv0)
                  y1=gy_ibm_massive_fbc(in_fbc,iv1)
                  z0=gz_ibm_massive_fbc(in_fbc,iv0)
                  z1=gz_ibm_massive_fbc(in_fbc,iv1)

                  if(edge_length_max_fbc(in_fbc) .lt. 0) then
                      z3=abs(edge_length_max_fbc(in_fbc))
     &                  *EdgeLength0_fbc(in_fbc,j)
                  else
                      z3=edge_length_max_fbc(in_fbc)
                  endif
                  L_over_Lmax=EdgeLength_fbc(in_fbc,j)/z3
                  if(L_over_Lmax .gt. 1) then
                     write(*,*) 'inplane force: x>=1!,' 
                     write(*,*) in_fbc,j,L_over_Lmax
                     stop
                  endif
                  do k=1,3
                     call Inplane_LineForce(Forcetmpfbc(1:2,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,L_over_Lmax,z3
     &                            ,InplaneLinemode_fbc(in_fbc,k)
     &                            ,InplaneLinem_fbc(in_fbc)           !InplaneLinemode,mcoef
     &                            ,tmpcoord(k)
     &                            ,Ktmp(1:2,1:3,1:2,1:3),KtmpFlag)

                      fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                      fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                      fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                      fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                      fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                      fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                  enddo
                enddo

                do j=1,numelr(i2g)
                  do k=1,2
                  cf_coef=-EleInplane_Cq_fbc(in_fbc,j,k)
     &                  *inplane_Cq_fbc(in_fbc,k+2)

                  cf_coef2=cf_coef
     &            /(
     &             4.0
     &            *EleArea0_fbc(in_fbc,j)
     &             **(inplane_Cq_fbc(in_fbc,k+2)+2)
     &            )
                  iv0=nea_fbc(in_fbc,j,1)
                  iv1=nea_fbc(in_fbc,j,2)
                  iv2=nea_fbc(in_fbc,j,3)

                  x0=gx_ibm_massive_fbc(in_fbc,iv0)
                  y0=gy_ibm_massive_fbc(in_fbc,iv0)                 
                  z0=gz_ibm_massive_fbc(in_fbc,iv0)
                  x1=gx_ibm_massive_fbc(in_fbc,iv1)
                  y1=gy_ibm_massive_fbc(in_fbc,iv1)                 
                  z1=gz_ibm_massive_fbc(in_fbc,iv1)
                  x2=gx_ibm_massive_fbc(in_fbc,iv2)
                  y2=gy_ibm_massive_fbc(in_fbc,iv2)                 
                  z2=gz_ibm_massive_fbc(in_fbc,iv2)
                  call inplane_Cq_fbcForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef2
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)
                 enddo
                enddo     
              else  !inplane_type_fbc(in_fbc) .ne. 1

                do j=1,numelr(i2g)
                  iv0=nea_fbc(in_fbc,j,1)
                  iv1=nea_fbc(in_fbc,j,2)
                  iv2=nea_fbc(in_fbc,j,3)

                  x0=gx_ibm_massive_fbc(in_fbc,iv0)
                  y0=gy_ibm_massive_fbc(in_fbc,iv0)                 
                  z0=gz_ibm_massive_fbc(in_fbc,iv0)
                  x1=gx_ibm_massive_fbc(in_fbc,iv1)
                  y1=gy_ibm_massive_fbc(in_fbc,iv1)                 
                  z1=gz_ibm_massive_fbc(in_fbc,iv1)
                  x2=gx_ibm_massive_fbc(in_fbc,iv2)
                  y2=gy_ibm_massive_fbc(in_fbc,iv2)                 
                  z2=gz_ibm_massive_fbc(in_fbc,iv2)

                  cf_coef2=kappa_inplane_fbc(in_fbc,1)

                  tmpcoord(1)=EleEdge_fbc(in_fbc,j,1)**2
     &                       -EleEdge0_fbc(in_fbc,j,1)**2
                  tmpcoord(2)=EleEdge_fbc(in_fbc,j,2)**2
     &                       -EleEdge0_fbc(in_fbc,j,2)**2
                  tmpcoord(3)=EleEdge_fbc(in_fbc,j,3)**2
     &                       -EleEdge0_fbc(in_fbc,j,3)**2

                     call Inplane_LineDelingette(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef2
     &                            ,tmpcoord(1:3)
     &                            ,EleEdge_fbc(in_fbc,j,1:3)
     &                            -EleEdge0_fbc(in_fbc,j,1:3)
     &                            ,EleEdge0_fbc(in_fbc,j,1:3)
     &                            ,EleEdge_fbc(in_fbc,j,1:3)
     &                            ,InplaneLinemode_fbc(in_fbc,1)
     &                            ,EleInplaneParaK_fbc(in_fbc,j,1:3)
     &                            ,EleInplaneParaC_fbc(in_fbc,j,1:3)
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)
                 enddo
              endif
            endif           
            if(Bending_flag_fbc(in_fbc)) then
              cf_coef=kappa_Bend_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
              do j=1,numeFacePair(i2)
                  ie1=facepairEle_fbc(in_fbc,j,1)
                  ie2=facepairEle_fbc(in_fbc,j,2) 
                  tmpcoord(1:3) =EleNormal_fbc(in_fbc,ie1,1:3) 
     &                          -EleNormal_fbc(in_fbc,ie2,1:3)
                  tmpcoord2(1:3)=EleCenter_fbc(in_fbc,ie1,1:3) 
     &                          -EleCenter_fbc(in_fbc,ie2,1:3)
                  axtmp_fbc=dot_product(tmpcoord(1:3),tmpcoord2(1:3))
                  if(axtmp_fbc>0) then
	                    sinsign=1.0
                  else
	                    sinsign=-1.0
                  endif 
                  iv0=facepairNode_fbc(in_fbc,j,1)
                  iv1=facepairNode_fbc(in_fbc,j,2)
                  iv2=facepairNode_fbc(in_fbc,j,3)
                  iv3=facepairNode_fbc(in_fbc,j,4)

                 x0=gx_ibm_massive_fbc(in_fbc,iv0)
                 y0=gy_ibm_massive_fbc(in_fbc,iv0)                 
                 z0=gz_ibm_massive_fbc(in_fbc,iv0)
                 x1=gx_ibm_massive_fbc(in_fbc,iv1)
                 y1=gy_ibm_massive_fbc(in_fbc,iv1)                 
                 z1=gz_ibm_massive_fbc(in_fbc,iv1)
                 x2=gx_ibm_massive_fbc(in_fbc,iv2)
                 y2=gy_ibm_massive_fbc(in_fbc,iv2)                 
                 z2=gz_ibm_massive_fbc(in_fbc,iv2)
                 x3=gx_ibm_massive_fbc(in_fbc,iv3)
                 y3=gy_ibm_massive_fbc(in_fbc,iv3)                 
                 z3=gz_ibm_massive_fbc(in_fbc,iv3)

                 costet0=cos(facepairtet0_fbc(in_fbc,j))
                 sintet0=sin(facepairtet0_fbc(in_fbc,j))

                 call Bending_ForceNEW(Forcetmpfbc(1:4,1:3)
     &                            ,costet0,sintet0,sinsign
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,x3,y3,z3
     &                            ,cf_coef)
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)
                 fibm1_fbc(i,iv3)=fibm1_fbc(i,iv3)+Forcetmpfbc(4,1)
                 fibm2_fbc(i,iv3)=fibm2_fbc(i,iv3)+Forcetmpfbc(4,2)
                 fibm3_fbc(i,iv3)=fibm3_fbc(i,iv3)+Forcetmpfbc(4,3)
              enddo
            endif
            mms_fbc=0.0 
            do j=1,ns_ibm_r_fbc(i)
               mms_fbc(1,j)=vertex_mass_fbc(i2l)
     &        +(
     &         density_coef(i2g)
     &        +density_coefp(i2g)
     &          )*areapnt_fbc(ibdy,j)
            enddo  

!+++++++++++++++++++++++++++++++++++++++++ 
! add mesh forces
        if(FabricMeshFlag_fbc(i)) then
            k=FabricMeshL_numatt(i)
            do j=1,FabricMeshL_numrecord(i)
                jq=FabricMeshL_con(i,j,1) 
                tmpcoord(1:3)=FabricMesh_coordMass(i,jq,1:3)                    
                jq2=FabricMeshL_con(i,j,2) 
                tmpcoord2(1:3)=FabricMesh_coordMass(i,jq2,1:3)
                FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
                FabricML_att(1:k)=FabricMeshL_attr(i,jq,1:k)
                tensionDerivFlag_fbc=.false.
                dncont=dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
                dncont=sqrt(dncont)
                   iDX0=iMl0
                   iKS0=iMks0
                   N_iPARA0=n_iMnpara0
                   iPARA0=iMnpara0(1:100)
                   i_FABRICLINE0=1
                   tensionDerivFlag_fbc=.FALSE.
                include "distIBM_FabricMeshLine_Tension.Fi" 
                outcount(1:3)=FabricML_dx(1:3)/(dncont+1d-9)

                outcount2(1:3)=FabricML_tension*outcount(1:3)

                FabricMesh_force(i,jq,1:3)=FabricMesh_force(i,jq,1:3)
     &                            +outcount2(1:3)

                FabricMesh_force(i,jq2,1:3)=FabricMesh_force(i,jq2,1:3)
     &                            -outcount2(1:3)
            enddo
            do j=1,FabricMesh_numrecord(i)
               if(FabricMesh_attr(i,j,iMcon0).gt. 0.1) then
               tmpcoord(1:3)=FabricMesh_coordMass(i,j,1:3)
               jq=FabricMesh_SurfElAddress(i,j)   
               dxcont(1:3)= FabricMesh_SurfElAttr(i,j,2:4)           
               dncont= FabricMesh_SurfElAttr(i,j,1) 

               iv0=nea_fbc(i,jq,1)
               iv1=nea_fbc(i,jq,2)
               iv2=nea_fbc(i,jq,3)

               outcount2(1:3)=(/gx_ibm_massive_fbc(i,iv0)
     &                         ,gx_ibm_massive_fbc(i,iv1)
     &                         ,gx_ibm_massive_fbc(i,iv2) /)
               tmpcoord2(1)=dot_product(outcount2(1:3),dxcont(1:3))

               outcount2(1:3)=(/gy_ibm_massive_fbc(i,iv0)
     &                         ,gy_ibm_massive_fbc(i,iv1)
     &                         ,gy_ibm_massive_fbc(i,iv2) /)
               tmpcoord2(2)=dot_product(outcount2(1:3),dxcont(1:3))

               outcount2(1:3)=(/gz_ibm_massive_fbc(i,iv0)
     &                         ,gz_ibm_massive_fbc(i,iv1)
     &                         ,gz_ibm_massive_fbc(i,iv2) /)
               tmpcoord2(3)=dot_product(outcount2(1:3),dxcont(1:3))

               FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
               temp_ibm1=dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
               temp_ibm1=sqrt(temp_ibm1)
               outcount(1:3)=FabricML_dx(1:3)/(temp_ibm1+1d-9)
               FabricML_tension
     &                    =FabricMesh_attr(i,j,iMs0)*(temp_ibm1-dncont)

               outcount2(1:3)=FabricML_tension*outcount(1:3)

               FabricMesh_force(i,j,1:3)=FabricMesh_force(i,j,1:3)
     &                            +outcount2(1:3)

               fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)-outcount2(1)*dxcont(1)
               fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)-outcount2(1)*dxcont(2)
               fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)-outcount2(1)*dxcont(3)

               fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)-outcount2(2)*dxcont(1)
               fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)-outcount2(2)*dxcont(2)
               fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)-outcount2(2)*dxcont(3)

               fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)-outcount2(3)*dxcont(1)
               fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)-outcount2(3)*dxcont(2)
               fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)-outcount2(3)*dxcont(3)
               endif
            enddo
        endif
! add line forces
        if(FabricLineFlag_fbc(i)) then
            do j=1,FabricLine_numrecord(i)
                i2=FabricLine_addressRev(i,j,1) 
                jq=FabricLine_addressRev(i,j,2) 
                if(jq .eq. FabricLine_npoint(i,i2)) then
                   outcount2(1:3)=0.0
                elseif(jq .eq. 1) then
                   outcount2(1:3)=0.0
                else
                   jq2=FabricLine_address(i,i2,jq+1)
                   k  =FabricLine_address(i,i2,jq-1)
                   tmpcoord(1:3) =FabricLine_coordMass(i,k,1:3) 
                   dxcont(1:3)   =FabricLine_coordMass(i,j,1:3)                    
                   tmpcoord2(1:3)=FabricLine_coordMass(i,jq2,1:3)

                   temp_ibm1=FabricLine_attr(i,k,iLl0)
                   temp_ibm2=FabricLine_attr(i,j,iLl0)
                   dncont=0.5*(temp_ibm1+temp_ibm1)

                   outcount2(1:3)
     &                   =( (dxcont(1:3)   -tmpcoord(1:3))/temp_ibm1
     &                     -(tmpcoord2(1:3)-dxcont(1:3)  )/temp_ibm2)
     &                    /(dncont+1d-9)
                 endif
                 FabricLine_curv(j,1:3)
     &                   =outcount2(1:3)-FabricLine_curv0(i,j,1:3)
            enddo


            k=FabricLine_numatt(i)
            do j=1,FabricLine_numrecord(i)
                i2=FabricLine_addressRev(i,j,1) 
                jq=FabricLine_addressRev(i,j,2) 
                if(jq .lt. FabricLine_npoint(i,i2)) then
                   jq2=FabricLine_address(i,i2,jq+1)
                   tmpcoord(1:3) =FabricLine_coordMass(i,j,1:3)                    
                   tmpcoord2(1:3)=FabricLine_coordMass(i,jq2,1:3)
                   FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
                   FabricML_att(1:k)=FabricLine_attr(i,jq,1:k)
                   tensionDerivFlag_fbc=.false.
                   dncont=dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
                   dncont=sqrt(dncont)
                   iDX0=iLl0
                   iKS0=iLks0
                   N_iPARA0=n_iLnpara0
                   iPARA0=iLnpara0(1:100)
                   i_FABRICLINE0=1
                   tensionDerivFlag_fbc=.false.
                   include "distIBM_FabricMeshLine_Tension.Fi" 
                   outcount(1:3)=FabricML_dx(1:3)/(dncont+1d-9)

                   outcount2(1:3)=FabricML_tension*outcount(1:3)

                   FabricLine_force(i,j ,1:3)
     &                            =FabricLine_force(i,jq,1:3)
     &                            +outcount2(1:3)

                   FabricLine_force(i,jq2,1:3)
     &                            =FabricLine_force(i,jq2,1:3)
     &                            -outcount2(1:3)
                endif
                if(jq .eq. FabricLine_npoint(i,i2)) then
                   iv0=FabricLine_address(i,i2,jq-1)
                   iv1=FabricLine_address(i,i2,jq-2)
                   outcount2(1:3)
     &              =(FabricLine_curv(iv1,1:3)
     &              *FabricLine_attr(i,iv1,iLkb0)
     &              -FabricLine_curv(iv0,1:3)
     &              *FabricLine_attr(i,iv0,iLkb0))
     &              /FabricLine_attr(i,iv0,iLl0)
     &               /FabricLine_attr(i,iv1,iLl0)  
                elseif(jq .eq. 1) then
                   iv0=FabricLine_address(i,i2,jq+1) 
                   iv1=FabricLine_address(i,i2,jq+2) 
                   outcount2(1:3)
     &              =(FabricLine_curv(iv1,1:3)
     &              *FabricLine_attr(i,iv1,iLkb0)
     &              -FabricLine_curv(iv0,1:3)
     &              *FabricLine_attr(i,iv0,iLkb0))
     &              /FabricLine_attr(i,j,iLl0)
     &               /FabricLine_attr(i,iv0,iLl0)  
                else
                   iv0=FabricLine_address(i,i2,jq-1)  
                   iv1=FabricLine_address(i,i2,jq+1)
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )
                   outcount2(1:3)
     &              =(FabricLine_curv(j,1:3)
     &              *FabricLine_attr(i,j,iLkb0)
     &              -FabricLine_curv(iv0,1:3)
     &              *FabricLine_attr(i,iv0,iLkb0))
     &              /FabricLine_attr(i,iv0,iLl0)
                          
                   iv1=FabricLine_address(i,i2,jq+1)
                   outcount2(1:3)
     &              =(
     &               outcount2(1:3)
     &             -(FabricLine_curv(iv1,1:3)
     &              *FabricLine_attr(i,iv1,iLkb0)
     &              -FabricLine_curv(j,1:3)
     &              *FabricLine_attr(i,j,iLkb0))
     &              /FabricLine_attr(i,j,iLl0))/ksh_tmp 
                endif
                   iv0=FabricLine_address(i,i2,jq-1)  
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )
                outcount(1:3)=-ksh_tmp*outcount2(1:3)
                FabricLine_force(i,j ,1:3)
     &                            =FabricLine_force(i,j,1:3)
     &                            +outcount(1:3)
                if(FabricLine_attr(i,jq,iLcon0) .gt. 0.1) then
                  jq=FabricLine_SurfElAddress(i,j)   
                  dxcont(1:3)= FabricLine_SurfElAttr(i,j,2:4)           
                  dncont= FabricLine_SurfElAttr(i,j,1) 

                  iv0=nea_fbc(i,jq,1)
                  iv1=nea_fbc(i,jq,2)
                  iv2=nea_fbc(i,jq,3)

                  outcount2(1:3)=(/gx_ibm_massive_fbc(i,iv0)
     &                            ,gx_ibm_massive_fbc(i,iv1)
     &                            ,gx_ibm_massive_fbc(i,iv2) /)
                  tmpcoord2(1)=dot_product(outcount2(1:3),dxcont(1:3))

                  outcount2(1:3)=(/gy_ibm_massive_fbc(i,iv0)
     &                            ,gy_ibm_massive_fbc(i,iv1)
     &                            ,gy_ibm_massive_fbc(i,iv2) /)
                  tmpcoord2(2)=dot_product(outcount2(1:3),dxcont(1:3))

                  outcount2(1:3)=(/gz_ibm_massive_fbc(i,iv0)
     &                            ,gz_ibm_massive_fbc(i,iv1)
     &                            ,gz_ibm_massive_fbc(i,iv2) /)
                  tmpcoord2(3)=dot_product(outcount2(1:3),dxcont(1:3))

                  FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
                  temp_ibm1
     &                  =dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
                  temp_ibm1=sqrt(temp_ibm1)
                  outcount(1:3)=FabricML_dx(1:3)/(temp_ibm1+1d-9)
                  FabricML_tension
     &                    =FabricLine_attr(i,j,iLs0)*(temp_ibm1-dncont)

                  outcount2(1:3)=FabricML_tension*outcount(1:3)

                  FabricMesh_force(i,j,1:3)=FabricMesh_force(i,j,1:3)
     &                            +outcount2(1:3)

                  fibm1_fbc(i,iv0)
     &                  =fibm1_fbc(i,iv0)-outcount2(1)*dxcont(1)
                  fibm2_fbc(i,iv0)
     &                  =fibm2_fbc(i,iv0)-outcount2(1)*dxcont(2)
                  fibm3_fbc(i,iv0)
     &                  =fibm3_fbc(i,iv0)-outcount2(1)*dxcont(3)

                  fibm1_fbc(i,iv1)
     &                  =fibm1_fbc(i,iv1)-outcount2(2)*dxcont(1)
                  fibm2_fbc(i,iv1)
     &                  =fibm2_fbc(i,iv1)-outcount2(2)*dxcont(2)
                  fibm3_fbc(i,iv1)
     &                  =fibm3_fbc(i,iv1)-outcount2(2)*dxcont(3)

                  fibm1_fbc(i,iv2)
     &                  =fibm1_fbc(i,iv2)-outcount2(3)*dxcont(1)
                  fibm2_fbc(i,iv2)
     &                  =fibm2_fbc(i,iv2)-outcount2(3)*dxcont(2)
                  fibm3_fbc(i,iv2)
     &                  =fibm3_fbc(i,iv2)-outcount2(3)*dxcont(3)
               endif
            enddo
        endif


        if (ExternalPressureFlag(ibdyg)) then

        i=ibdy  
        include "distIBM_normalPressure_fn.Fi" 
        temp_ibm1=temp_ibm2*p_inflation
        do j=1,ns_ibm_r_fbc(i)
             fibm1_fbc(i,j)=fibm1_fbc(i,j)
     &          -fibm1pres_fbc(j)  /areapnt_fbc(i,j)
     &          *temp_ibm1
             fibm2_fbc(i,j)=fibm2_fbc(i,j)
     &          -fibm2pres_fbc(j)  /areapnt_fbc(i,j)
     &          *temp_ibm1
             fibm3_fbc(i,j)=fibm3_fbc(i,j)
     &          -fibm3pres_fbc(j)  /areapnt_fbc(i,j)
     &          *temp_ibm1

        end do
        endif
        i=ibdy  
        if(contacttype .eq. -1) then
            do j=1,ns_ibm_r_fbc(i)
                dxcont(1)=fibm1cont_fbc(j)
                dxcont(2)=fibm2cont_fbc(j)
                dxcont(3)=fibm3cont_fbc(j)
                ddcont=sqrt(dxcont(1)**2+dxcont(2)**2+dxcont(3)**2)+eps
                normalpres_fbc(j,1)=dxcont(1)/ddcont
                normalpres_fbc(j,2)=dxcont(2)/ddcont
                normalpres_fbc(j,3)=dxcont(3)/ddcont
            enddo
        endif
         

!++++++++++++++++++++ FOR  TEST  OF  AIRBAGE INFLATION : END   ++++++++++++++++++++++++++++ 
! construct matrix and right hand side
        i=ibdy
        i2l=i      
        i2g=ibdyg    
        do j=1,ns_ibm_r_fbc(i)
           finer_1_ibm_fbc(i,j)= density_coefp(i2g) 
     &      *areapnt_fbc(ibdy,j)
     &    *( gx_ibmo1_fbc(i,j)-gx_ibm_massiveo_fbc(i,j) )/dt2
           finer_2_ibm_fbc(i,j)= density_coefp(i2g) *
     &      *areapnt_fbc(ibdy,j)
     &    *( gy_ibmo1_fbc(i,j)-gy_ibm_massiveo_fbc(i,j) )/dt2
           finer_3_ibm_fbc(i,j)= density_coefp(i2g) *
     &      *areapnt_fbc(ibdy,j)
     &    *( gz_ibmo1_fbc(i,j)-gz_ibm_massiveo_fbc(i,j) )/dt2
         end do

         aamat_fbc=0.d0
 
        do j=1,ns_ibm_r_fbc(i)
           aamat_fbc(j,j)=aamat_fbc(j,j)
     &     +mms_fbc(1,j)
     &     +cs_ibm(i2g)/2.0*sqrt(dt2)*areapnt_fbc(ibdy,j)
        enddo     

        np=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
        if(FabricMeshFlag_fbc(i)) then
         do jq=1,FabricMesh_numrecord(i)
            j=np+jq
           aamat_fbc(j,j)=aamat_fbc(j,j)
     &     +FabricMesh_attr(i,j,iMm0)
     &     +FabricMesh_attr(i,j,iMc0)/2.0*sqrt(dt2)
         enddo
         np=np+FabricMesh_numrecord(i)
        endif

        if(FabricLineFlag_fbc(i)) then
         do jq=1,FabricLine_numrecord(i)
            j=np+jq
           aamat_fbc(j,j)=aamat_fbc(j,j)
     &     +FabricLine_attr(i,j,iLm0)
     &     +FabricLine_attr(i,j,iLc0)/2.0*sqrt(dt2)
         enddo
         np=np+FabricLine_numrecord(i)
        endif              

        do j=1,target_num(i2g)
             k=target_point_num_fbc(i,j)
             temp_ibm1=
     &          (gx_ibm_massive_fbc(i,k)-target_points_fbc(i,j,1))
             temp_ibm2=
     &          (gy_ibm_massive_fbc(i,k)-target_points_fbc(i,j,2))
             temp_ibm3=
     &          (gz_ibm_massive_fbc(i,k)-target_points_fbc(i,j,3))

             include "distIBM_target_k_rampfn.Fi"               
             if(time2 .le. target_t_link_fbc(i,j)) then

                ksh_tmp=target_k_link_fbc(i,j)*target_timefn
             else
                ksh_tmp=0.0
             endif
             force_points_fbc(i,j,1)=k_link*temp_ibm1*ksh_tmp
             force_points_fbc(i,j,2)=k_link*temp_ibm2*ksh_tmp
             force_points_fbc(i,j,3)=k_link*temp_ibm3*ksh_tmp

             temp_ibm1=target_points_v_fbc(i,j,1)
             temp_ibm2=target_points_v_fbc(i,j,2)
             temp_ibm3=target_points_v_fbc(i,j,3)

             temp_ibm1=vibm1_pre_fbc(i,k)-temp_ibm1
             temp_ibm2=vibm2_pre_fbc(i,k)-temp_ibm2
             temp_ibm3=vibm3_pre_fbc(i,k)-temp_ibm3

             temp2_ibm= cs_ibm_target(i2g)*k_link*temp_ibm1*ksh_tmp
             force_points_fbc(i,j,1)=force_points_fbc(i,j,1)+temp2_ibm


             temp2_ibm= cs_ibm_target(i2g)*k_link*temp_ibm2*ksh_tmp
             force_points_fbc(i,j,2)=force_points_fbc(i,j,2)+temp2_ibm

             temp2_ibm= cs_ibm_target(i2g)*k_link*temp_ibm3*ksh_tmp
             force_points_fbc(i,j,3)=force_points_fbc(i,j,3)+temp2_ibm

             f_link1_fbc(i,k)=force_points_fbc(i,j,1)
             f_link2_fbc(i,k)=force_points_fbc(i,j,2)
             f_link3_fbc(i,k)=force_points_fbc(i,j,3)
       enddo

       if(FabricMeshFlag_fbc(i)) then
         do j=1,FabricMesh_target_num(i)
             k=FabricMesh_target_point_num(i,j)
             tmpcoord(1:3) =
     &          (FabricMesh_coordMass(i,k,1:3)
     &           -FabricMesh_target_points(i,j,1:3))

             include "distIBM_target_k_rampfn.Fi"               
             if(time2 .le. FabricMesh_target_k_link(i,j)) then
                ksh_tmp=FabricMesh_target_k_link(i,j)*target_timefn
             else
                ksh_tmp=0.0
             endif
             FabricMesh_force_points(j,1:3)
     &          =k_link*tmpcoord(1:3)*ksh_tmp

             tmpcoord(1:3) =FabricMesh_target_points_v(i,j,1:3)

             tmpcoord2(1:3)=(
     &                        FabricMesh_coordMass(i,k,1:3)
     &                       -FabricMesh_coordpre(i,k,1:3)
     &                       )/(2.0*dt2**0.5)
     &                      -tmpcoord(1:3)

             tmpcoord(1:3)
     &              = cs_ibm_target(i2g)*k_link*tmpcoord2(1:3)*ksh_tmp
             FabricMesh_force_points(j,1:3)
     &              =FabricMesh_force_points(j,1:3)+tmpcoord(1:3)

         enddo
      endif
       if(FabricLineFlag_fbc(i)) then
         do j=1,FabricLine_target_num(i)
             k=FabricLine_target_point_num(i,j)
             tmpcoord(1:3) =
     &          (FabricLine_coordMass(i,k,1:3)
     &           -FabricLine_target_points(i,j,1:3))

             include "distIBM_target_k_rampfn.Fi"               
             if(time2 .le. FabricLine_target_k_link(i,j)) then
                ksh_tmp=FabricLine_target_k_link(i,j)*target_timefn
             else
                ksh_tmp=0.0
             endif
             FabricLine_force_points(j,1:3)
     &          =k_link*tmpcoord(1:3)*ksh_tmp

             tmpcoord(1:3) =FabricLine_target_points_v(i,j,1:3)

             tmpcoord2(1:3)=(
     &                        FabricLine_coordMass(i,k,1:3)
     &                       -FabricLine_coordpre(i,k,1:3)
     &                       )/(2.0*dt2**0.5)
     &                      -tmpcoord(1:3)

             tmpcoord(1:3)
     &              = cs_ibm_target(i2g)*k_link*tmpcoord2(1:3)*ksh_tmp

             FabricLine_force_points(j,1:3)
     &              =FabricLine_force_points(j,1:3)+tmpcoord(1:3)
         enddo
      endif
       
        if(ndim .gt. 2) then
          ddcont=(min_grid_x*min_grid_y*min_grid_z)**(1.0/3.0)
        else
          ddcont=sqrt(min_grid_x*min_grid_y)
        endif

!+++++++++ Solve for the contact problem +++++++
       i=ibdy
       i2g=ibdyg
       if(ContactForceFlag(i2g))then

       include "distIBM_Contact_Coeffn.Fi"   

       do ibkt2=1,NBucketnum

             ibktmp1=mod(ibkt2,IBucketnum(1)*IBucketnum(2))
             if(ibktmp1 .eq. 0) ibktmp1=IBucketnum(1)*IBucketnum(2)

             ibktx=mod(ibktmp1,IBucketnum(1))
             if(ibktx .eq. 0) ibktx=IBucketnum(1)

             ibkty=int((ibktmp1-1)/IBucketnum(1))+1
             ibktz=int((ibkt2-1)/(IBucketnum(1)*IBucketnum(2)))+1

             ibktmin(1)=max(1,ibktx-1)
             ibktmax(1)=min(IBucketnum(1),ibktx+1)

             ibktmin(2)=max(1,ibkty-1)
             ibktmax(2)=min(IBucketnum(2),ibkty+1)

             ibktmin(3)=max(1,ibktz-1)
             ibktmax(3)=min(IBucketnum(3),ibktz+1)
             do ibkt_i=PBucket(i2g,ibkt2),PBucket(i2g,ibkt2+1)-1
                j2 =sBucket_fbc(i,ibkt2,ibkt_i)
                do i2=1,nFixcontact
                        if((
     &                     abs((gy_ibm_massive_fbc(i,j2)-
     &                          xFixcontact(i2,2))/min_grid_y)
     &                    .le.12.0) .and.
     &                    (abs((gx_ibm_massive_fbc(i,j2)-
     &                          xFixcontact(i2,1))/min_grid_x)
     &                    .le.12.0) .and.
     &                    (abs((gz_ibm_massive_fbc(i,j2)-
     &                          xFixcontact(i2,3))/min_grid_z)
     &                    .le.12.0) ) then
                              ksh_tmp=gx_ibm_massive_fbc(i,j2)

                              temp_ibm1= 
     &                              ((gy_ibm_massive_fbc(i,j2)
     &                               -xFixcontact(i2,2))
     &                           /(2.0*min_grid_y) )
                              call delta_fun(delta_typey,temp_ibm1,fn2)
                              temp_ibm2= 
     &                              ((ksh_tmp
     &                               -xFixcontact(i2,1))
     &                           /(2.0*min_grid_x) )
                              call delta_fun(delta_typex,temp_ibm2,fn1)
                              if(ndim .gt. 2)  then 
                                 temp_ibm3= 
     &                              ((gz_ibm_massive_fbc(i,j2)
     &                               -xFixcontact(i2,3))
     &                              /(2.0*min_grid_z) )
                                  call 
     &                              delta_fun(delta_typez,temp_ibm3,fn3)
                              else
                                   temp_ibm3=0.0
                                   fn3=1.0
                              endif
                              temp3_ibm=
     &                        sqrt((temp_ibm1*min_grid_y)**2
     &                            +(temp_ibm2*min_grid_x)**2
     &                            +(temp_ibm3*min_grid_z)**2)*2.00
     &                            +1.0d-9

                              f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                               *ds_ibm_fbc(i,j2)*impactpen(1)
     &                               /(min_grid_x*min_grid_y*min_grid_z)
     &                               *(ksh_tmp-xFixcontact(i2,1))
     &                               /temp3_ibm
                              f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                              *ds_ibm_fbc(i,j2)*impactpen(1)
     &                              /(min_grid_x*min_grid_y*min_grid_z)
     &                              *(gy_ibm_massive_fbc(i,j2)
     &                               -xFixcontact(i2,2))
     &                               /temp3_ibm
                              if(ndim .gt. 2)  
     &                           f_impuls3_fbc(i,j2)=
     &                              f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                              *ds_ibm_fbc(i,j2)*impactpen(1)
     &                              /(min_grid_x*min_grid_y*min_grid_z)
     &                              *(gz_ibm_massive_fbc(i,j2)
     &                               -xFixcontact(i2,3))
     &                               /temp3_ibm
                       endif
                 enddo
              enddo
       enddo

       if(contacttype .eq. 0) then
        if (i2g .le. nr_ibm_f) then
           do ibkt2=1,NBucketnum

             ibktmp1=mod(ibkt2,IBucketnum(1)*IBucketnum(2))
             if(ibktmp1 .eq. 0) ibktmp1=IBucketnum(1)*IBucketnum(2)

             ibktx=mod(ibktmp1,IBucketnum(1))
             if(ibktx .eq. 0) ibktx=IBucketnum(1)

             ibkty=int((ibktmp1-1)/IBucketnum(1))+1
             ibktz=int((ibkt2-1)/(IBucketnum(1)*IBucketnum(2)))+1

             ibktmin(1)=max(1,ibktx-1)
             ibktmax(1)=min(IBucketnum(1),ibktx+1)

             ibktmin(2)=max(1,ibkty-1)
             ibktmax(2)=min(IBucketnum(2),ibkty+1)

             ibktmin(3)=max(1,ibktz-1)
             ibktmax(3)=min(IBucketnum(3),ibktz+1)
             do ibkt_i=PBucket(i2g,ibkt2),PBucket(i2g,ibkt2+1)-1
                j2 =sBucket_fbc(i,ibkt2,ibkt_i)
               do i2=1,nr_ibm_fbc
                  i3g=Ilocglb_fbc(i2)
                  if(i3g .le. nr_ibm_fb) then
                  if(i2 .ne. i) then
                    do ibkts1=ibktmin(1),ibktmax(1)
                    do ibkts2=ibktmin(2),ibktmax(2)
                    do ibkts3=ibktmin(3),ibktmax(3)
                      ibkt=
     &                       ibkts1
     &                     +(ibkts2-1)*IBucketnum(1)
     &                     +(ibkts3-1)*IBucketnum(1)*IBucketnum(2)

                      do ibkt2_i=PBucket(i3g,ibkt),PBucket(i3g,ibkt+1)-1
                         j =sBucket_fbc(i2,ibkt,ibkt2_i) 
                        ksh_tmp=sqrt(
     &                    (gx_ibm_fbc(i,j2)-
     &                          gx_ibm_fbc(i2,j))**2+
     &                     (gy_ibm_fbc(i,j2)-
     &                          gy_ibm_fbc(i2,j))**2+
     &                    (gz_ibm_fbc(i,j2)-
     &                          gz_ibm_fbc(i2,j))**2)

                        temp_ibm2=time2  

                        if( (ksh_tmp/ddcont   .le. 6.0) 
     &                .and. (temp_ibm2 .gt. 0.05) ) then
                              temp_ibm1=max(ksh_tmp/ddcont-1.0,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)
                              temp3_ibm=ksh_tmp
                              dxcont(1)=temp3_ibm/ddcont
                              dxcont(2)=1.0/(1+exp(10*(dxcont(1)-1.0)))
                              dxcont(3)=impactpen(1)
     &                            +dxcont(2)*impactpen(2)


                              ksh_tmp=1.0 !max(ksh_tmp,1.0)

                              if(0 .eq. 1) then
                                fn1=1.0/4.0

                                if(temp3_ibm/ddcont>1.0)then
                                  dxcont(1)=ksh_tmp*
     &                             exp(-impactpen(1)*
     &                             (temp3_ibm/ddcont-1.0)/ksh_tmp)
                                else
                                  dxcont(1)=ksh_tmp
     &                             -impactpen(2)*(temp3_ibm/ddcont-1.0)
                                endif
                                dxcont(3)=dxcont(1)   
                              endif                              

                              f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                               *( gx_ibm_fbc(i,j2)
     &                                 -gx_ibm_fbc(i2,j))
     &                               /temp3_ibm


                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                              *(gy_ibm_fbc(i,j2)
     &                               -gy_ibm_fbc(i2,j))
     &                               /temp3_ibm
                              if(ndim .gt. 2) then
                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)*ksh_tmp
     &                              *(gz_ibm_fbc(i,j2)
     &                               -gz_ibm_fbc(i2,j))
     &                               /temp3_ibm

                              endif
                         endif
                     end do  !ibkt2_i
                     enddo   !ibkts1
                     enddo   !ibkts2
                     enddo   !ibkts3
                  endif
                  endif
               enddo   !i2i
               goto 4424
               i2=i
               i2g=ibdyg
               jq=1
                    do ibkts1=ibktmin(1),ibktmax(1)
                    do ibkts2=ibktmin(2),ibktmax(2)
                    do ibkts3=ibktmin(3),ibktmax(3)

                      ibkt=
     &                       ibkts1
     &                     +(ibkts2-1)*IBucketnum(1)
     &                     +(ibkts3-1)*IBucketnum(1)*IBucketnum(2)
                      do ibkt2_i=PBucket(i2g,ibkt),PBucket(i2g,ibkt+1)-1
                         j =sBucket_fbc(i,ibkt,ibkt2_i) 
                         noj=1
                     if(ContactShellFlag_fbc(i,j,j2) .ne. 1) then
                        ksh_tmp=sqrt(
     &                     (gy_ibm_massive_fbc(i,j2)-
     &                          gy_ibm_massive_fbc(i2,j))**2+
     &                    (gx_ibm_massive_fbc(i,j2)-
     &                          gx_ibm_massive_fbc(i2,j))**2+
     &                    (gz_ibm_massive_fbc(i,j2)-
     &                          gz_ibm_massive_fbc(i2,j))**2)

                        if(ksh_tmp/ddcont .le. 6.0 ) then

                               temp_ibm1=max(ksh_tmp/ddcont-1.0,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)
                              temp3_ibm=ksh_tmp
                              dxcont(1)=temp3_ibm/ddcont
                              dxcont(2)=1.0/(1+exp(10*(dxcont(1)-1.0)))
                              dxcont(3)=impactpen(1)
     &                            +dxcont(2)*impactpen(2)

                              ksh_tmp=1.0
                              f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                               *( gx_ibm_fbc(i,j2)
     &                                 -gx_ibm_fbc(i2,j))
     &                               /temp3_ibm


                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                              *(gy_ibm_fbc(i,j2)
     &                               -gy_ibm_fbc(i2,j))
     &                               /temp3_ibm
                              if(ndim .gt. 2) then
  

                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)*ksh_tmp
     &                              *(gz_ibm_fbc(i,j2)
     &                               -gz_ibm_fbc(i2,j))
     &                               /temp3_ibm

                              endif

                         endif  !gx... lt. gx ..
                     endif !ContactShellFlag
                     end do  !ibkt2_i
                     enddo   !ibkts1
                     enddo   !ibkts2
                     enddo   !ibkts3
 4424      continue
             enddo !ibkt_i
             enddo !ibkt2

             if(channelcontacty) then
             do j2=1,ns_ibm_r_fbc(i)
               do i2=1,2  !with channel bndry in y
                     if(i2 .eq. 1) then
                        h_channel=gy(nygrid_ibm)
                        if (gy_ibm_massive_fbc(i,j2) 
     &                      .lt. h_channel) then
                            ksh_tmp=gy_ibm_massive_fbc(i,j2)
                        else
                           ksh_tmp=h_channel-1.0d-9
                        endif
                     else
                        h_channel=gy(2)
                        if (gy_ibm_massive_fbc(i,j2) 
     &                      .gt. h_channel) then
                            ksh_tmp=gy_ibm_massive_fbc(i,j2)
                        else
                           ksh_tmp=h_channel+1.0d-9
                        endif
                     endif
                     do j=1,nxgrid_ibm
                       do k=1,nzgrid_ibm
                        if((
     &                  abs((gy_ibm_massive_fbc(i,j2)-h_channel)
     &                       /min_grid_y)
     &                 .le.12.0) .and.
     &                 (abs((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                       /min_grid_x)
     &                 .le.12.0) .and.
     &                 (abs((gz_ibm_massive_fbc(i,j2)-gz(k))
     &                       /min_grid_z)
     &                 .le.12.0) ) then

                         temp_ibm1= 
     &                         ((ksh_tmp-h_channel)
     &                     /(min_grid_y))

                           call delta_fun(delta_typey,temp_ibm1,fn2)

                          temp_ibm2= 
     &                        ((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                     /(min_grid_x))

                           call delta_fun(delta_typex,temp_ibm2,fn1)

                          if(ndim .gt. 2) then
                             temp_ibm3= 
     &                          ((gz_ibm_massive_fbc(i,j2)-gz(k))
     &                       /(min_grid_z) )
                           call delta_fun(delta_typez,temp_ibm3,fn3)
                          else
                             temp_ibm3=0.0
                             fn3=1.0
                          endif

                         temp3_ibm=
     &                   sqrt((temp_ibm1*min_grid_y)**2
     &                      +(temp_ibm2*min_grid_x)**2
     &                      +(temp_ibm3*min_grid_z)**2)+1.0d-9

                          f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                      *(gx_ibm_massive_fbc(i,j2)-gx(j))/temp3_ibm
                          f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(ksh_tmp-h_channel)/temp3_ibm
                          if(ndim .gt. 2) 
     &                    f_impuls3_fbc(i,j2)= f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                      *(gz_ibm_massive_fbc(i,j2)-gz(k))/temp3_ibm
                        endif
                    
                   end do !k=1,nz 
                 end do !j=1,nx
               enddo  !i2=1,2
             end do    !j2
             endif !channelcontacty

             if((channelcontactz) .and. (ndim .gt. 2)) then
             do j2=1,ns_ibm_r_fbc(i)

               do i2=1,2  !with channel bndry in z

                     if(i2 .eq. 1) then
                        h_channel=gz(nzgrid_ibm)
                        if (gz_ibm_massive_fbc(i,j2) 
     &                      .lt. h_channel) then
                            ksh_tmp=gz_ibm_massive_fbc(i,j2)
                        else
                            ksh_tmp=h_channel-1.0d-9
                        endif
                     else
                        h_channel=gz(2)
                        if (gz_ibm_massive_fbc(i,j2) 
     &                      .gt. h_channel) then
                            ksh_tmp=gz_ibm_massive_fbc(i,j2)
                        else
                           ksh_tmp=h_channel+1.0d-9
                        endif
                     endif
                     do j=1,nxgrid_ibm
                       do k=1,nygrid_ibm
                        if((
     &                  abs((gy_ibm_massive_fbc(i,j2)-gy(k))
     &                       /min_grid_y)
     &                 .le.12.0) .and.
     &                 (abs((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                       /min_grid_x)
     &                 .le.12.0) .and.
     &                 (abs((gz_ibm_massive_fbc(i,j2)-h_channel)
     &                       /min_grid_z)
     &                 .le.12.0) ) then

                        temp_ibm1= 
     &                         ((gy_ibm_massive_fbc(i,j2)-gy(k))
     &                       /(min_grid_y) )
                           call delta_fun(delta_typey,temp_ibm1,fn2)

                        temp_ibm2= 
     &                        ((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                     /(min_grid_x))
                           call delta_fun(delta_typex,temp_ibm2,fn1)

                        temp_ibm3= 
     &                          ((ksh_tmp-h_channel)
     &                       /(min_grid_z) )
                           call delta_fun(delta_typez,temp_ibm3,fn3)


                         temp3_ibm=
     &                   sqrt((temp_ibm1*min_grid_y)**2
     &                      +(temp_ibm2*min_grid_x)**2
     &                      +(temp_ibm3*min_grid_z)**2)+1.0d-9

                          f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(gx_ibm_massive_fbc(i,j2)-gx(j))
     &                       /temp3_ibm

                          f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(gy_ibm_massive_fbc(i,j2)-gy(k))
     &                       /temp3_ibm

                          f_impuls3_fbc(i,j2)= f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(ksh_tmp-h_channel)/temp3_ibm
                        endif
                    
                   end do !k=1,nz 
                 end do !j=1,nx
               enddo  !i2=1,2
             end do    !j2
             endif !channelcontactz
          endif   !for if ((i .le. nr_ibm_f).and.(i .ge. 1)) then
       elseif(contacttype .eq. -1) then
        if (i2g .le. nr_ibm_f) then
           do ibkt2=1,NBucketnum

             ibktmp1=mod(ibkt2,IBucketnum(1)*IBucketnum(2))
             if(ibktmp1 .eq. 0) ibktmp1=IBucketnum(1)*IBucketnum(2)

             ibktx=mod(ibktmp1,IBucketnum(1))
             if(ibktx .eq. 0) ibktx=IBucketnum(1)

             ibkty=int((ibktmp1-1)/IBucketnum(1))+1
             ibktz=int((ibkt2-1)/(IBucketnum(1)*IBucketnum(2)))+1

             ibktmin(1)=max(1,ibktx-1)
             ibktmax(1)=min(IBucketnum(1),ibktx+1)

             ibktmin(2)=max(1,ibkty-1)
             ibktmax(2)=min(IBucketnum(2),ibkty+1)

             ibktmin(3)=max(1,ibktz-1)
             ibktmax(3)=min(IBucketnum(3),ibktz+1)
             do ibkt_i=PBucket(i2g,ibkt2),PBucket(i2g,ibkt2+1)-1
                j2 =sBucket_fbc(i,ibkt2,ibkt_i)
               do i2=1,nr_ibm_fbc
                  i3g=Ilocglb_fbc(i2)
                  if(i3g .le. nr_ibm_fb) then
                  if(i2 .ne. i) then
                    do ibkts1=ibktmin(1),ibktmax(1)
                    do ibkts2=ibktmin(2),ibktmax(2)
                    do ibkts3=ibktmin(3),ibktmax(3)
                      ibkt=
     &                       ibkts1
     &                     +(ibkts2-1)*IBucketnum(1)
     &                     +(ibkts3-1)*IBucketnum(1)*IBucketnum(2)

                      do ibkt2_i=PBucket(i3g,ibkt),PBucket(i3g,ibkt+1)-1
                         j =sBucket_fbc(i2,ibkt,ibkt2_i) 

                           outcont(1)=gx_ibm_fbc(i,j2)-
     &                                gx_ibm_fbc(i2,j)
                           outcont(2)=gy_ibm_fbc(i,j2)-
     &                                gy_ibm_fbc(i2,j)
                           outcont(3)=gz_ibm_fbc(i,j2)-
     &                                gz_ibm_fbc(i2,j)                    
                           outcont2(1)=normalpres_fbc(j2,1)
                           outcont2(2)=normalpres_fbc(j2,2)
                           outcont2(3)=normalpres_fbc(j2,3)
                        ksh_tmp=sqrt(
     &                     outcont(1)**2+
     &                     outcont(2)**2+
     &                     outcont(3)**2)

                     dncont=dot_product(outcont(1:3),outcont2(1:3))
                     dncont=-dncont/(abs(dncont)+eps)
!                     write(1818,2321) i,j2,i2,j,
!     &              outcont(1:3),outcont2(1:3),dncont
2321       format(4i4,26(1x,f12.6)) 
                        temp_ibm2=time2  

!                      write(1819,2321) i,j2,i2,j
!     &              ,-9999.0,-9999.0,ksh_tmp,ddcont,ksh_tmp/ddcont
                        if( (ksh_tmp/ddcont   .le. 10.0) 
     &                .and. (temp_ibm2 .gt. 0.05) ) then
                              temp_ibm1= 
     &                            max(ksh_tmp*dncont/ddcont,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)

                              temp3_ibm=ksh_tmp
                              dxcont(1)=temp_ibm1 !max(ksh_tmp*dncont,0.0)/ddcont
                              dxcont(2)=1.0/(1+exp(10*(dxcont(1)-0.0)))
                              dxcont(3)=impactpen(1)
     &                            +dxcont(2)*impactpen(2)
                              dxcont(3)=dxcont(3)*dncont



                              if(0 .eq. 1) then
                                fn1=1.0/4.0

                                if(temp3_ibm/ddcont>1.0)then
                                  dxcont(1)=ksh_tmp*
     &                             exp(-impactpen(1)*
     &                             (temp3_ibm/ddcont-1.0)/ksh_tmp)
                                else
                                  dxcont(1)=ksh_tmp
     &                             -impactpen(2)*(temp3_ibm/ddcont-1.0)
                                endif
                                dxcont(3)=dxcont(1)   
                              endif                              
!                     write(1819,2321) i,j2,i2,j,
!     &                         fn1
!     &                         ,temp_ibm1
!     &                         ,ksh_tmp
!     &                         ,dncont
!     &                         ,ddcont
!     &                         ,ksh_tmp*dncont/ddcont
!     &                         ,dxcont(1)
!     &                         ,dxcont(2)
!     &                         ,dxcont(3)
!     &                         ,temp3_ibm

                              ksh_tmp=1.0 !max(ksh_tmp,1.0)

                              f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                               *( gx_ibm_fbc(i,j2)
     &                                 -gx_ibm_fbc(i2,j))
     &                               /temp3_ibm


                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                              *(gy_ibm_fbc(i,j2)
     &                               -gy_ibm_fbc(i2,j))
     &                               /temp3_ibm
                              if(ndim .gt. 2) then
                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)*ksh_tmp
     &                              *(gz_ibm_fbc(i,j2)
     &                               -gz_ibm_fbc(i2,j))
     &                               /temp3_ibm

                              endif
                         endif
                     end do  !ibkt2_i
                     enddo   !ibkts1
                     enddo   !ibkts2
                     enddo   !ibkts3
                  endif
                  endif
               enddo   !i2i
               goto 4434
               i2=i
               i2g=ibdyg
               jq=1
                    do ibkts1=ibktmin(1),ibktmax(1)
                    do ibkts2=ibktmin(2),ibktmax(2)
                    do ibkts3=ibktmin(3),ibktmax(3)

                      ibkt=
     &                       ibkts1
     &                     +(ibkts2-1)*IBucketnum(1)
     &                     +(ibkts3-1)*IBucketnum(1)*IBucketnum(2)
                      do ibkt2_i=PBucket(i2g,ibkt),PBucket(i2g,ibkt+1)-1
                         j =sBucket_fbc(i,ibkt,ibkt2_i) 
                         noj=1
                     if(ContactShellFlag_fbc(i,j,j2) .ne. 1) then
                        ksh_tmp=sqrt(
     &                     (gy_ibm_massive_fbc(i,j2)-
     &                          gy_ibm_massive_fbc(i2,j))**2+
     &                    (gx_ibm_massive_fbc(i,j2)-
     &                          gx_ibm_massive_fbc(i2,j))**2+
     &                    (gz_ibm_massive_fbc(i,j2)-
     &                          gz_ibm_massive_fbc(i2,j))**2)

                        if(ksh_tmp/ddcont .le. 6.0 ) then

                               temp_ibm1=max(ksh_tmp/ddcont-1.0,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)
                              temp3_ibm=ksh_tmp
                              dxcont(1)=temp3_ibm/ddcont
                              dxcont(2)=1.0/(1+exp(10*(dxcont(1)-1.0)))
                              dxcont(3)=impactpen(1)
     &                            +dxcont(2)*impactpen(2)

                              ksh_tmp=1.0
                              f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                               *( gx_ibm_fbc(i,j2)
     &                                 -gx_ibm_fbc(i2,j))
     &                               /temp3_ibm


                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                              *(gy_ibm_fbc(i,j2)
     &                               -gy_ibm_fbc(i2,j))
     &                               /temp3_ibm
                              if(ndim .gt. 2) then
  

                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*4.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)*ksh_tmp
     &                              *(gz_ibm_fbc(i,j2)
     &                               -gz_ibm_fbc(i2,j))
     &                               /temp3_ibm

                              endif

                         endif  !gx... lt. gx ..
                     endif !ContactShellFlag
                     end do  !ibkt2_i
                     enddo   !ibkts1
                     enddo   !ibkts2
                     enddo   !ibkts3
 4434      continue
             enddo !ibkt_i
             enddo !ibkt2

             if(contactplanesFlag(ibdyg)) then
               do ibkt2=1,Ncontactplanes(ibdyg) 
                contactplane_point(1:3)= 
     &                       contactplanesPara(ibdyg,ibkt2,1:3)
                contactplane_n(1:3)=
     &                       contactplanesPara(ibdyg,ibkt2,4:6)

                dncont=0.0
                do i2=1,3
                   dncont=dncont+contactplane_n(i2) 
     &                          *contactplane_point(i2)
                enddo
                contactplane_n(4)=-dncont  !plane defined as ax+by+cz+d=0, here we save d

               temp_ibm2=s_function((time2-contact_time_fbc(i,1))
     &                              /contact_time_fbc(i,2) )
                                
               temp_ibm2=time2

               do j2=1,ns_ibm_r_fbc(i)
                  ksh_tmp=contactplane_n(1) 
     &                   *gx_ibm_massive_fbc(i,j2) 
     &                   +contactplane_n(2) 
     &                   *gy_ibm_massive_fbc(i,j2) 
     &                   +contactplane_n(3) 
     &                   *gz_ibm_massive_fbc(i,j2) 
     &                   +contactplane_n(4)
                
                  if(ksh_tmp/ddcont   .le. 8.0) then

                              temp_ibm1= 
     &                            max(ksh_tmp/(2*ddcont)-0.5,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)
 

                              temp3_ibm=ksh_tmp/(2*ddcont)-0.5
                              dxcont(1)=temp3_ibm     !max(ksh_tmp*dncont,0.0)/ddcont

                              if(temp3_ibm .le.0.0) then 
                                dxcont(2)=2.0*(
     &                         1.0/(1+exp(6.0*(dxcont(1)-0.0)))-0.5)
                              else
                                dxcont(2)=0.0
                              endif
                              dxcont(3)=(impactpen(1)
     &                            +dxcont(2)*impactpen(2))
     &                            *contact_coef_fbc(i,1,j2)*temp_ibm2

                              f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)
     &                               *contactplane_n(1)

                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)
     &                              *contactplane_n(2)

                              if(ndim .gt. 2) then
                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)
     &                              *contactplane_n(3)
                              endif
                   endif
                enddo !j2
             enddo !ibkt2
             endif !contactplanesFlag

             if(channelcontacty) then
             do j2=1,ns_ibm_r_fbc(i)
               do i2=1,2  !with channel bndry in y
                     if(i2 .eq. 1) then
                        h_channel=gy(nygrid_ibm)
                        if (gy_ibm_massive_fbc(i,j2) 
     &                      .lt. h_channel) then
                            ksh_tmp=gy_ibm_massive_fbc(i,j2)
                        else
                           ksh_tmp=h_channel-1.0d-9
                        endif
                     else
                        h_channel=gy(2)
                        if (gy_ibm_massive_fbc(i,j2) 
     &                      .gt. h_channel) then
                            ksh_tmp=gy_ibm_massive_fbc(i,j2)
                        else
                           ksh_tmp=h_channel+1.0d-9
                        endif
                     endif
                     do j=1,nxgrid_ibm
                       do k=1,nzgrid_ibm
                        if((
     &                  abs((gy_ibm_massive_fbc(i,j2)-h_channel)
     &                       /min_grid_y)
     &                 .le.12.0) .and.
     &                 (abs((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                       /min_grid_x)
     &                 .le.12.0) .and.
     &                 (abs((gz_ibm_massive_fbc(i,j2)-gz(k))
     &                       /min_grid_z)
     &                 .le.12.0) ) then

                         temp_ibm1= 
     &                         ((ksh_tmp-h_channel)
     &                     /(min_grid_y))

                           call delta_fun(delta_typey,temp_ibm1,fn2)

                          temp_ibm2= 
     &                        ((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                     /(min_grid_x))

                           call delta_fun(delta_typex,temp_ibm2,fn1)

                          if(ndim .gt. 2) then
                             temp_ibm3= 
     &                          ((gz_ibm_massive_fbc(i,j2)-gz(k))
     &                       /(min_grid_z) )
                           call delta_fun(delta_typez,temp_ibm3,fn3)
                          else
                             temp_ibm3=0.0
                             fn3=1.0
                          endif

                         temp3_ibm=
     &                   sqrt((temp_ibm1*min_grid_y)**2
     &                      +(temp_ibm2*min_grid_x)**2
     &                      +(temp_ibm3*min_grid_z)**2)+1.0d-9

                          f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                      *(gx_ibm_massive_fbc(i,j2)-gx(j))/temp3_ibm
                          f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(ksh_tmp-h_channel)/temp3_ibm
                          if(ndim .gt. 2) 
     &                    f_impuls3_fbc(i,j2)= f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                      *(gz_ibm_massive_fbc(i,j2)-gz(k))/temp3_ibm
                        endif
                    
                   end do !k=1,nz 
                 end do !j=1,nx
               enddo  !i2=1,2
             end do    !j2
             endif !channelcontacty

             if((channelcontactz) .and. (ndim .gt. 2)) then
             do j2=1,ns_ibm_r_fbc(i)

               do i2=1,2  !with channel bndry in z

                     if(i2 .eq. 1) then
                        h_channel=gz(nzgrid_ibm)
                        if (gz_ibm_massive_fbc(i,j2) 
     &                      .lt. h_channel) then
                            ksh_tmp=gz_ibm_massive_fbc(i,j2)
                        else
                            ksh_tmp=h_channel-1.0d-9
                        endif
                     else
                        h_channel=gz(2)
                        if (gz_ibm_massive_fbc(i,j2) 
     &                      .gt. h_channel) then
                            ksh_tmp=gz_ibm_massive_fbc(i,j2)
                        else
                           ksh_tmp=h_channel+1.0d-9
                        endif
                     endif
                     do j=1,nxgrid_ibm
                       do k=1,nygrid_ibm
                        if((
     &                  abs((gy_ibm_massive_fbc(i,j2)-gy(k))
     &                       /min_grid_y)
     &                 .le.12.0) .and.
     &                 (abs((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                       /min_grid_x)
     &                 .le.12.0) .and.
     &                 (abs((gz_ibm_massive_fbc(i,j2)-h_channel)
     &                       /min_grid_z)
     &                 .le.12.0) ) then

                        temp_ibm1= 
     &                         ((gy_ibm_massive_fbc(i,j2)-gy(k))
     &                       /(min_grid_y) )
                           call delta_fun(delta_typey,temp_ibm1,fn2)

                        temp_ibm2= 
     &                        ((gx_ibm_massive_fbc(i,j2)-gx(j))
     &                     /(min_grid_x))
                           call delta_fun(delta_typex,temp_ibm2,fn1)

                        temp_ibm3= 
     &                          ((ksh_tmp-h_channel)
     &                       /(min_grid_z) )
                           call delta_fun(delta_typez,temp_ibm3,fn3)


                         temp3_ibm=
     &                   sqrt((temp_ibm1*min_grid_y)**2
     &                      +(temp_ibm2*min_grid_x)**2
     &                      +(temp_ibm3*min_grid_z)**2)+1.0d-9

                          f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(gx_ibm_massive_fbc(i,j2)-gx(j))
     &                       /temp3_ibm

                          f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(gy_ibm_massive_fbc(i,j2)-gy(k))
     &                       /temp3_ibm

                          f_impuls3_fbc(i,j2)= f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(ksh_tmp-h_channel)/temp3_ibm
                        endif
                    
                   end do !k=1,nz 
                 end do !j=1,nx
               enddo  !i2=1,2
             end do    !j2
             endif !channelcontactz
          endif   !for if ((i .le. nr_ibm_f).and.(i .ge. 1)) then
       else
         write(*,*)' input contacttype is not recognized', contacttype
       endif  !contacttypeif of contact model
       endif  !ContactForceFlag(i)


!here 2-16-2015 7:02pm
c calculation of total forces 
       i=ibdy
       i2g=ibdyg

        do j=1,ns_ibm_r_fbc(i)
             fibm1_fbc(i,j)=fibm1_fbc(i,j)
     &          +f_link1_fbc(i,j)
             fibm2_fbc(i,j)=fibm2_fbc(i,j)
     &          +f_link2_fbc(i,j)
             fibm3_fbc(i,j)=fibm3_fbc(i,j)
     &          +f_link3_fbc(i,j)
        end do

       do j=1,ns_ibm_r_fbc(i) 
           f_link1_fbc(i,j)=mms_fbc(1,j)
     &                       *gx_ibm_massiveo_fbc(i,j)
     &        +cs_ibm(i2g)*areapnt_fbc(i,j)*gx_ibmpre_fbc(i,j)*dt/2.0


           f_link2_fbc(i,j)=mms_fbc(1,j)
     &                       *gy_ibm_massiveo_fbc(i,j)
     &        +cs_ibm(i2g)*areapnt_fbc(i,j)*gy_ibmpre_fbc(i,j)*dt/2.0

           f_link3_fbc(i,j)=mms_fbc(1,j)
     &                       *gz_ibm_massiveo_fbc(i,j)
     &        +cs_ibm(i2g)*areapnt_fbc(i,j)*gz_ibmpre_fbc(i,j)*dt/2.0
       end do

c calculation of total forces 
       i=ibdy

        do j=1,ns_ibm_r_fbc(i) 
           temp_ibm1=mms_fbc(1,j)-density_coefp(i2g)*areapnt_fbc(ibdy,j)

           fibm1_fbc(i,j)=f_link1_fbc(i,j)
     &                  + dt2*(
     &                 -fibm1_fbc(i,j)   
     &                 +finer_1_ibm_fbc(i,j)
     &                 +temp_ibm1
     &                  *fr*cos(the_grav)*sin(phi_grav)*timetemp2
     &                 ) 
     &                +dt2*f_impuls1_fbc(i,j)

           fibm2_fbc(i,j)=f_link2_fbc(i,j)
     &                  + dt2*(
     &                 -fibm2_fbc(i,j)    
     &                 +finer_2_ibm_fbc(i,j) 
     &                 +temp_ibm1
     &                  *fr*sin(the_grav)*sin(phi_grav)*timetemp2
     &                 ) 
     &                 +dt2*f_impuls2_fbc(i,j)

           fibm3_fbc(i,j)=f_link3_fbc(i,j)
     &                  + dt2*(
     &                 -fibm3_fbc(i,j)    
     &                 +finer_3_ibm_fbc(i,j) 
     &                 +temp_ibm1
     &                  *fr*cos(phi_grav)*timetemp2
     &                 ) 
     &                 +dt2*f_impuls3_fbc(i,j)
        end do
         tmpcoord(1:3)=(/
     &                    cos(the_grav)*sin(phi_grav)
     &                   ,sin(the_grav)*sin(phi_grav)
     &                   ,cos(phi_grav)
     &                   /)
      if(FabricMeshFlag_fbc(i)) then
         do j=1,FabricMesh_numrecord(i)
           FabricMesh_force(i,j,1:3)=
     &          FabricMesh_attr(i,j,iMm0)*FabricMesh_coordMasso(i,j,1:3)
     &         +FabricMesh_attr(i,j,iMc0)
     &                   *FabricMesh_coordpre(i,j,1:3)*dt/2.0
     &          +dt2*(-FabricMesh_force_points(j,1:3)
     &                -FabricMesh_force(i,j,1:3)
     &                +FabricMesh_attr(i,j,iMm0)
     &                   *fr*timetemp2*tmpcoord(1:3)
     &                )
         enddo
      endif
      if(FabricLineFlag_fbc(i)) then
         do j=1,FabricLine_numrecord(i)
           FabricLine_force(i,j,1:3)=
     &          FabricLine_attr(i,j,iLm0)*FabricLine_coordMasso(i,j,1:3)
     &         +FabricLine_attr(i,j,iLc0)
     &                   *FabricLine_coordpre(i,j,1:3)*dt/2.0
     &          +dt2*(-FabricLine_force_points(j,1:3)
     &                -FabricLine_force(i,j,1:3)
     &                +FabricLine_attr(i,j,iLm0)
     &                   *fr*timetemp2*tmpcoord(1:3)
     &                )
         enddo
      endif


      ksh_tmp=-1000.0
      do np=1,ns_ibm_r_fbc(ibdy)  
         ksh_tmp=max(ksh_tmp,aamat_fbc(np,np))
      enddo
      np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      if(FabricMeshFlag_fbc(i)) then
         do j=1,FabricMesh_numrecord(i)
            jq=j+np
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq,jq)) 
         enddo
         np=np+FabricMesh_numrecord(i)
      endif  
      if(FabricLineFlag_fbc(i)) then
         do j=1,FabricLine_numrecord(i)
            jq=j+np
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq,jq)) 
         enddo
         np=np+FabricLine_numrecord(i)
      endif                  
      k=np

      do np=1,ns_ibm_i_fbc(ibdy)  
         npg=ns_ibm_r_fbc(ibdy)+np
         bodypoint(1)=boundrylist_fbc(ibdy,np,1)
         bodypoint(2)=boundrylist_fbc(ibdy,np,2)
         bodypoint(3)=boundrylist_fbc(ibdy,np,3)

         if(bndycnd_fbc(ibdy,npg) .eq. 1) then
            aamat_fbc(npg,1: k)=0.0
            aamat_fbc(npg,npg)=ksh_tmp
            aamat_fbc(npg,bodypoint(1))=
     &                            aamat_fbc(npg,bodypoint(1))-ksh_tmp
            aamat_fbc(npg,bodypoint(2))=
     &                            aamat_fbc(npg,bodypoint(2))-ksh_tmp
            aamat_fbc(npg,bodypoint(3))=
     &                            aamat_fbc(npg,bodypoint(3))+ksh_tmp
          elseif(bndycnd_fbc(ibdy,npg) .eq. 2) then
            aamat_fbc(npg,k)=0.0

            aamat_fbc(npg,npg)=ksh_tmp

            aamat_fbc(bodypoint(1),1:k)=0.0
            aamat_fbc(bodypoint(1),bodypoint(1))=ksh_tmp

            aamat_fbc(bodypoint(2),1:k)=0.0
            aamat_fbc(bodypoint(2),bodypoint(2))=ksh_tmp

          elseif(bndycnd_fbc(ibdy,npg) .eq. 3) then  
            aamat_fbc(npg,1: k)=0.0
            aamat_fbc(npg,npg)=ksh_tmp
            aamat_fbc(npg,bodypoint(1))=
     &                            aamat_fbc(npg,bodypoint(1))-ksh_tmp
            aamat_fbc(npg,bodypoint(2))=
     &                            aamat_fbc(npg,bodypoint(2))-ksh_tmp
            aamat_fbc(npg,bodypoint(3))=
     &                            aamat_fbc(npg,bodypoint(3))+ksh_tmp


            aamat_fbc(bodypoint(1),1:k)=0.0
            aamat_fbc(bodypoint(1),bodypoint(1))=ksh_tmp

            aamat_fbc(bodypoint(2),1:k)=0.0
            aamat_fbc(bodypoint(2),bodypoint(2))=ksh_tmp
         endif
      end do  

      do np=1,ns_ibm_i_fbc(ibdy)  
         npg=ns_ibm_r_fbc(ibdy)+np
         bodypoint(1)=boundrylist_fbc(ibdy,np,1)
         bodypoint(2)=boundrylist_fbc(ibdy,np,2)
         bodypoint(3)=boundrylist_fbc(ibdy,np,3)
		 
         if(bndycnd_fbc(ibdy,npg) .eq. 1) then		 
            fibm1_fbc(ibdy,npg)=0.0
            fibm2_fbc(ibdy,npg)=0.0
            fibm3_fbc(ibdy,npg)=0.0
         elseif(bndycnd_fbc(ibdy,npg) .eq. 2) then
            fibm1_fbc(ibdy,npg)=ksh_tmp*gx_bp_fbc(ibdy,npg)
            fibm1_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*gx_bp_fbc(ibdy,bodypoint(1))
            fibm1_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*gx_bp_fbc(ibdy,bodypoint(2))

            fibm2_fbc(ibdy,npg)=ksh_tmp*gy_bp_fbc(ibdy,npg)
            fibm2_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*gy_bp_fbc(ibdy,bodypoint(1))
            fibm2_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*gy_bp_fbc(ibdy,bodypoint(2))

            fibm3_fbc(ibdy,npg)=ksh_tmp*gz_bp_fbc(ibdy,npg)
            fibm3_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*gz_bp_fbc(ibdy,bodypoint(1))
            fibm3_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*gz_bp_fbc(ibdy,bodypoint(2))
		 
         elseif(bndycnd_fbc(ibdy,npg) .eq. 3) then	
             fibm1_fbc(ibdy,npg)=0.0

             fibm2_fbc(ibdy,npg)=0.0

             fibm3_fbc(ibdy,npg)=0.0

            fibm1_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*gx_bp_fbc(ibdy,bodypoint(1))
            fibm1_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*gx_bp_fbc(ibdy,bodypoint(2))

            fibm2_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*gy_bp_fbc(ibdy,bodypoint(1))
            fibm2_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*gy_bp_fbc(ibdy,bodypoint(2))
            fibm3_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*gz_bp_fbc(ibdy,bodypoint(1))
            fibm3_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*gz_bp_fbc(ibdy,bodypoint(2))
         endif
      enddo
      np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      if(FabricMeshFlag_fbc(ibdy)) then
         do j=1,FabricMesh_target_num(ibdy)
            if(FabricMesh_flagfixed(ibdy,j) .eq. 1000) then
               jq=FabricMesh_target_point_num(ibdy,j)+np
               aamat_fbc(jq,1:k)=0.0
               aamat_fbc(jq,jq)=ksh_tmp 
               FabricMesh_force(i,jq,1:3)=ksh_tmp
     &                           *FabricMesh_coordbp(i,j,1:3)
            endif
         enddo
         np=np+FabricMesh_numrecord(ibdy)
      endif  
      if(FabricLineFlag_fbc(ibdy)) then
         do j=1,FabricLine_target_num(ibdy)
            if(FabricLine_flagfixed(ibdy,j) .eq. 1000) then
               jq=FabricLine_target_point_num(ibdy,j)+np
               aamat_fbc(jq,1:k)=0.0
               aamat_fbc(jq,jq)=ksh_tmp 
               FabricLine_force(i,jq,1:3)=ksh_tmp
     &                           *FabricLine_coordbp(i,j,1:3)
            endif
         enddo
         np=np+FabricLine_numrecord(ibdy)
      endif      


      if(iksh1 .eq. 0) then

      if(allocated(aacsr))  then 
        deallocate(iacsr, jacsr,aacsr,x0LHS,vecRHS)
      endif
        allocate(iacsr(np+1),x0LHS(3,np),vecRHS(3,np))     
        ntemi=0
        do noj=1,np
        iacsr(noj)=ntemi+1
        do noi=1,np
           ksh_tmp=aamat_fbc(noj,noi)
           if(abs(ksh_tmp) .gt. 1d-16) then
            ntemi=ntemi+1
           endif
         enddo
         enddo
         ntermiMAX=ntemi+1 
         allocate(aacsr(ntermiMAX),jacsr(ntermiMAX))
         iacsr=0
         aacsr=0.0
         jacsr=0


      noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      do noj=1,noi
         x0LHS(1:3,noj)=(/
     &                   gx_ibm_massive_fbc(i,noj)
     &                  ,gy_ibm_massive_fbc(i,noj)
     &                  ,gz_ibm_massive_fbc(i,noj)
     &                  /)
         vecRHS(1:3,noj)=(/
     &                   fibm1_fbc(i,noj)
     &                  ,fibm2_fbc(i,noj)
     &                  ,fibm3_fbc(i,noj)
     &                  /)
      enddo
      if(FabricMeshFlag_fbc(ibdy)) then
        k=noi
        do jq2=1,FabricMesh_numrecord(ibdy)
           noj=k+jq2
           x0LHS(1:3,noj)= 0.0 
           vecRHS(1:3,noj)= FabricMesh_force(i,jq2,1:3)  
        enddo
        k=k+FabricMesh_numrecord(ibdy)
      endif     
      if(FabricLineFlag_fbc(ibdy)) then
        do jq2=1,FabricLine_numrecord(ibdy)
           noj=k+jq2
           x0LHS(1:3,noj)= 0.0 
           vecRHS(1:3,noj)= FabricLine_force(i,jq2,1:3)  
        enddo
      endif      

      ntemi=0
      do noj=1,np
      iacsr(noj)=ntemi+1

      do noi=1,np
         ksh_tmp=aamat_fbc(noj,noi)
         if(abs(ksh_tmp) .gt. 1d-16) then
            ntemi=ntemi+1
            aacsr(ntemi)=ksh_tmp
            jacsr(ntemi)=noi
         endif
      enddo
      enddo
      noj=1+np
      iacsr(noj)=ntemi+1 
  
2314       format(2i4,16(1x,f12.6))   
2324       format(6i4,16(1x,f12.6))   

       j=np

       call pmgmres_ilu_crMRHS(j
     &     ,ntermiMAX
     &     ,iacsr(1: j+1)
     &     ,jacsr(1: ntermiMAX)
     &     ,aacsr(1: ntermiMAX)
     &     ,x0LHS(1,1:j)
     &     ,x0LHS(2,1:j)
     &     ,x0LHS(3,1:j)
     &     ,vecRHS(1,1:j)
     &     ,vecRHS(2,1:j)
     &     ,vecRHS(3,1:j)
     &     ,SolverOutiter,SolverIniter
     &     ,Solverabstol,Solverreltol,SolverPre,monitorON)

      endif !stand alongshell/ or connected
      deallocate(
     &       aamat_fbc,kkb_fbc,mms_fbc)  
 
      elseif(Genalpha_timesolver(ibdyg) .eq. 1) then
            write(*,*)'Totally Implicit Euler is not implemented yet'
            write(*,*)'Maybe you can help!'
            stop
      elseif(Genalpha_timesolver(ibdyg) .eq. 2) then
            write(*,*)'This option of time marching yet'
            write(*,*)'Maybe you can help!'
            stop
      elseif(Genalpha_timesolver(ibdyg) .eq. 3) then
            write(*,*)'Totally Implicit Gen-a for acc'
            write(*,*)' is not implemented yet'
            write(*,*)'Maybe you can help!'
            stop
      elseif(Genalpha_timesolver(ibdyg) .eq. 4) then
            write(*,*)'This option of time marching'
            write(*,*)' is not implemented yet'
            write(*,*)'Maybe you can help!'
            stop
  
      elseif(Genalpha_timesolver(ibdyg) .eq. 5) then
      
        np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
        if(FabricMeshFlag_fbc(ibdy))  np=np+ FabricMesh_numrecord(ibdy)
        if(FabricLineFlag_fbc(ibdy))  np=np+ FabricLine_numrecord(ibdy)

        allocate(
     &       aamat_fbc(3*np,3*np)
     &      ,kkb_fbc(3*np,3*np) )

        timeMarchcoef(1)= 1.0-alphaf_Coef(ibdyg)
        timeMarchcoef(2)=(1.0-alpham_Coef(ibdyg))/(dt2*beta_Coef(ibdyg))
        timeMarchcoef(3)=(1.0-alphaf_Coef(ibdyg))*gamma_Coef(ibdyg)
     &                  /(dt*beta_Coef(ibdyg))

        timeMarchcoef(4)=(1.0-alpham_Coef(ibdyg))/(dt2*beta_Coef(ibdyg))
        timeMarchcoef(5)=(1.0-alpham_Coef(ibdyg))/(dt*beta_Coef(ibdyg))
        timeMarchcoef(6)=(1.0-alpham_Coef(ibdyg)-2.0*beta_Coef(ibdyg))
     &                  /(2.0*beta_Coef(ibdyg))

        timeMarchcoef(7)=(1.0-alphaf_Coef(ibdyg))*gamma_Coef(ibdyg)
     &                  /(dt*beta_Coef(ibdyg))
        timeMarchcoef(8)=(
     &                  (1.0-alphaf_Coef(ibdyg))*gamma_Coef(ibdyg)
     &                   -beta_Coef(ibdyg)
     &                   )
     &                  /beta_Coef(ibdyg)

        timeMarchcoef(9)=(
     &                   (1.0-alphaf_Coef(ibdyg))
     &                  *(gamma_Coef(ibdyg)-2.0*beta_Coef(ibdyg)) )
     &                  /(2.0*beta_Coef(ibdyg))*dt

        timeMarchcoef(10)=gamma_Coef(ibdyg)/(dt*beta_Coef(ibdyg))
        timeMarchcoef(11)=-(gamma_Coef(ibdyg)/beta_Coef(ibdyg)-1.0)
        timeMarchcoef(12)=
     &                  -(0.5*gamma_Coef(ibdyg)/beta_Coef(ibdyg)-1.0)*dt

        timeMarchcoef(13)=1.0/(dt2*beta_Coef(ibdyg))
        timeMarchcoef(14)=-1.0/(beta_Coef(ibdyg)*dt)
        timeMarchcoef(15)=-(0.5/beta_Coef(ibdyg)-1.0)

        time_alphaf=time2+(1.0-alphaf_Coef(ibdyg))*dt
!copy vectors
        do npg=1,ns_ibm_r_fbc(ibdy)
           X_n_fbc(npg,1)=gx_ibm_massive_fbc(ibdy,npg)
           X_n_fbc(npg,2)=gy_ibm_massive_fbc(ibdy,npg)
           X_n_fbc(npg,3)=gz_ibm_massive_fbc(ibdy,npg)
          dX_n_fbc(npg,1)=vibm1_fbc(ibdy,npg)
          dX_n_fbc(npg,2)=vibm2_fbc(ibdy,npg)
          dX_n_fbc(npg,3)=vibm3_fbc(ibdy,npg)
         ddX_n_fbc(npg,1)=aibm1_fbc(ibdy,npg)
         ddX_n_fbc(npg,2)=aibm2_fbc(ibdy,npg)
         ddX_n_fbc(npg,3)=aibm3_fbc(ibdy,npg)
        enddo
        if(FabricMeshFlag_fbc(ibdy)) then
            do j=1,FabricMesh_numrecord(ibdy)
               FabricMesh_X_n(j,1:3)=FabricMesh_coordMass(ibdy,j,1:3)
               FabricMesh_dX_n(j,1:3) =FabricMesh_v(ibdy,j,1:3)
               FabricMesh_ddX_n(j,1:3)=FabricMesh_a(ibdy,j,1:3)
            enddo
         endif
        if(FabricLineFlag_fbc(ibdy)) then
            do j=1,FabricLine_numrecord(ibdy)
               FabricLine_X_n(j,1:3)=FabricLine_coordMass(ibdy,j,1:3)
               FabricLine_dX_n(j,1:3) =FabricLine_v(ibdy,j,1:3)
               FabricLine_ddX_n(j,1:3)=FabricLine_a(ibdy,j,1:3)
            enddo
         endif

        do npg=1,ns_ibm_r_fbc(ibdy)
           X_np1_fbc(npg,1:3) =  X_n_fbc(npg,1:3)
           dX_np1_fbc(npg,1:3)= dX_n_fbc(npg,1:3)
          ddX_np1_fbc(npg,1:3)=ddX_n_fbc(npg,1:3)

          ddX_in_fbc(npg,1:3)=timeMarchcoef(4)* X_n_fbc(npg,1:3)
     &                      +timeMarchcoef(5)* dX_n_fbc(npg,1:3)
     &                      +timeMarchcoef(6)*ddX_n_fbc(npg,1:3)

          dX_in_fbc(npg,1:3)=timeMarchcoef(7)*X_n_fbc(npg,1:3)
     &                      +timeMarchcoef(8)*dX_n_fbc(npg,1:3)
     &                      +timeMarchcoef(9)*ddX_n_fbc(npg,1:3)
        enddo       
        if(FabricMeshFlag_fbc(ibdy)) then
            do j=1,FabricMesh_numrecord(ibdy)
               FabricMesh_X_np1(j,1:3)=FabricMesh_X_n(j,1:3)
               FabricMesh_dX_np1(j,1:3) =FabricMesh_dX_n(j,1:3)
               FabricMesh_ddX_np1(j,1:3)=FabricMesh_ddX_n(j,1:3)

               FabricMesh_ddX_in(j,1:3)=
     &                       timeMarchcoef(4)*FabricMesh_X_n(j,1:3)
     &                      +timeMarchcoef(5)*FabricMesh_dX_n(j,1:3)
     &                      +timeMarchcoef(6)*FabricMesh_ddX_n(j,1:3)

                FabricMesh_dX_in(j,1:3)=
     &                       timeMarchcoef(7)*FabricMesh_X_n(j,1:3)
     &                      +timeMarchcoef(8)*FabricMesh_dX_n(j,1:3)
     &                      +timeMarchcoef(9)*FabricMesh_ddX_n(j,1:3)
            enddo
         endif
        if(FabricLineFlag_fbc(ibdy)) then
            do j=1,FabricLine_numrecord(ibdy)
               FabricLine_X_np1(j,1:3)=FabricLine_X_n(j,1:3)
               FabricLine_dX_np1(j,1:3) =FabricLine_dX_n(j,1:3)
               FabricLine_ddX_np1(j,1:3)=FabricLine_ddX_n(j,1:3)

               FabricLine_ddX_in(j,1:3)=
     &                       timeMarchcoef(4)*FabricLine_X_n(j,1:3)
     &                      +timeMarchcoef(5)*FabricLine_dX_n(j,1:3)
     &                      +timeMarchcoef(6)*FabricLine_ddX_n(j,1:3)

                FabricLine_dX_in(j,1:3)=
     &                       timeMarchcoef(7)*FabricLine_X_n(j,1:3)
     &                      +timeMarchcoef(8)*FabricLine_dX_n(j,1:3)
     &                      +timeMarchcoef(9)*FabricLine_ddX_n(j,1:3)
            enddo
         endif

!===================  ITERATIONS
      Do iter=1,Genalpha_niter(ibdyg)
         if(monitorON)   write(*,*) '   === INER ===  ',iter
         if(iter .eq. 1) then 
            coef_iter=1.0
         else
            coef_iter=0.0      
         endif  

      do npg=1,ns_ibm_r_fbc(ibdy)
          ddX_na_fbc(npg,1:3)= (1.0-alpham_Coef(ibdyg))
     &                      *ddX_np1_fbc(npg,1:3)
     &                      +alpham_Coef(ibdyg)* ddX_n_fbc(npg,1:3)
          dX_na_fbc(npg,1:3)= (1.0-alphaf_Coef(ibdyg))
     &                      *dX_np1_fbc(npg,1:3)
     &                      +alphaf_Coef(ibdyg)* dX_n_fbc(npg,1:3)
          X_na_fbc(npg,1:3)= (1.0-alphaf_Coef(ibdyg))
     &                      *X_np1_fbc(npg,1:3)
     &                      +alphaf_Coef(ibdyg)* X_n_fbc(npg,1:3)
      enddo   
      if(FabricMeshFlag_fbc(ibdy)) then
            do j=1,FabricMesh_numrecord(ibdy)
               FabricMesh_X_na(j,1:3)  =
     &                 (1.0-alphaf_Coef(ibdyg))*FabricMesh_X_np1(j,1:3)
     &                +  alphaf_Coef(ibdyg)   *FabricMesh_X_n(j,1:3)
               FabricMesh_dX_na(j,1:3) =
     &                 (1.0-alphaf_Coef(ibdyg))*FabricMesh_dX_np1(j,1:3)
     &                +  alphaf_Coef(ibdyg)   *FabricMesh_dX_n(j,1:3)
               FabricMesh_ddX_na(j,1:3)=
     &                (1.0-alpham_Coef(ibdyg))*FabricMesh_ddX_np1(j,1:3)
     &                +  alpham_Coef(ibdyg)   *FabricMesh_ddX_n(j,1:3)
            enddo
      endif
      if(FabricLineFlag_fbc(ibdy)) then
            do j=1,FabricLine_numrecord(ibdy)
               FabricLine_X_na(j,1:3)  =
     &                (1.0-alphaf_Coef(ibdyg))*FabricLine_X_np1(j,1:3)
     &                +  alphaf_Coef(ibdyg)   *FabricLine_X_n(j,1:3)
               FabricLine_dX_na(j,1:3) =
     &                (1.0-alphaf_Coef(ibdyg))*FabricLine_dX_np1(j,1:3)
     &                +  alphaf_Coef(ibdyg)   *FabricLine_dX_n(j,1:3)
               FabricLine_ddX_na(j,1:3)=
     &                (1.0-alpham_Coef(ibdyg))*FabricLine_ddX_np1(j,1:3)
     &                +  alpham_Coef(ibdyg)   *FabricLine_ddX_n(j,1:3)
            enddo
      endif

!! calculate residule
      i=ibdy
      i2l=i
      fibm1_fbc(i,1:Ns_IBM_fbc)=0.0
      fibm2_fbc(i,1:Ns_IBM_fbc)=0.0
      fibm3_fbc(i,1:Ns_IBM_fbc)=0.0
      ffluidsum1_fbc(i,1:Ns_IBM_fbc)=0.0
      ffluidsum2_fbc(i,1:Ns_IBM_fbc)=0.0
      ffluidsum3_fbc(i,1:Ns_IBM_fbc)=0.0


      f_impuls1_fbc(i,1:Ns_IBM_fbc)=0.d0
      f_impuls2_fbc(i,1:Ns_IBM_fbc)=0.d0
      f_impuls3_fbc(i,1:Ns_IBM_fbc)=0.d0
      areapnt_fbc(i,1:Ns_IBM_fbc)=0.0
      force_points_fbc(i,1:Ns_IBM_fbc,1:3)=0.d0
      f_link1_fbc(i,1:Ns_IBM_fbc)=0.0
      f_link2_fbc(i,1:Ns_IBM_fbc)=0.0
      f_link3_fbc(i,1:Ns_IBM_fbc)=0.0

c
c calculating feedback force for matching bcs
       i2g=Ilocglb_fbc(ibdy)
       ImplicitFSI_coef=0.0
       if(FluidForceFlag(i2g)) then
        ImplicitFSI_coef=(alpha_ibm*delta_t+beta_ibm)*timetemp2
        do j=1,ns_ibm_r_fbc(i)
           fk_mass1_fbc(i,j)=fk_mass1o_fbc(i,j)
     &          +alpha_ibm*delta_t*(uibm1_fbc(i,j)-dX_na_fbc(j,1))
     &                   *timetemp2

            fk_mass2_fbc(i,j)=fk_mass2o_fbc(i,j)
     &          +alpha_ibm*delta_t*(uibm2_fbc(i,j)-dX_na_fbc(j,2))
     &                   *timetemp2

            ffluidsum1_fbc(i,j)= fk_mass1_fbc(i,j)
     &                   +beta_ibm*(uibm1_fbc(i,j)-dX_na_fbc(j,1))
     &                   *timetemp2
            ffluidsum2_fbc(i,j)= fk_mass2_fbc(i,j)
     &                   +beta_ibm*(uibm2_fbc(i,j)-dX_na_fbc(j,2))
     &                   *timetemp2
            if(ndim .gt. 2) then
            fk_mass3_fbc(i,j)=fk_mass3o_fbc(i,j)
     &          +alpha_ibm*delta_t*(uibm3_fbc(i,j)-dX_na_fbc(j,3))
     &                   *timetemp2

            ffluidsum3_fbc(i,j)= fk_mass3_fbc(i,j)
     &                   +beta_ibm*(uibm3_fbc(i,j)-dX_na_fbc(j,3))
     &                   *timetemp2
            endif
         end do
         do j=1,ns_ibm_r_fbc(i)
              fibm1_fbc(i,j)=fibm1_fbc(i,j)+ffluidsum1_fbc(i,j)
              fibm2_fbc(i,j)=fibm2_fbc(i,j)+ffluidsum2_fbc(i,j)
              if(ndim .gt. 2) 
     &           fibm3_fbc(i,j)=fibm3_fbc(i,j)+ffluidsum3_fbc(i,j)
          end do
        endif  

        do j=1,ns_ibm_r_fbc(i)
             fibm1_fbc(i,j)=fibm1_fbc(i,j)
     &          *areapnt_fbc(i,j)
             fibm2_fbc(i,j)=fibm2_fbc(i,j)
     &          *areapnt_fbc(i,j)
             fibm3_fbc(i,j)=fibm3_fbc(i,j)
     &          *areapnt_fbc(i,j)
        end do

        call boundary_ibm_generalalpha_fbc(                  
     &       i2g
     &      ,Xtar_na_fbc
     &      ,dXtar_na_fbc
     &      ,X0_np1_fbc
     &      ,FabricMesh_Xtar_na
     &      ,FabricMesh_dXtar_na
     &      ,FabricMesh_X0_np1
     &      ,FabricLine_Xtar_na
     &      ,FabricLine_dXtar_na
     &      ,FabricLine_X0_np1)

      do npg=1,target_num(i2g)
         Xtar_na_fbc(npg,1:3)= alphaf_Coef(ibdyg)
     &                        *target_points_fbc(i,npg,1:3)
     &                      +timeMarchcoef(6)*Xtar_na_fbc(npg,1:3)
        dXtar_na_fbc(npg,1:3)= alphaf_Coef(ibdyg)
     &                        *target_points_v_fbc(i,npg,1:3)
     &                      +timeMarchcoef(6)*dXtar_na_fbc(npg,1:3)
      enddo   
      if(FabricMeshFlag_fbc(ibdy)) then
         do npg=1,FabricMesh_target_num(ibdy)
           FabricMesh_Xtar_na(npg,1:3)= alphaf_Coef(ibdyg)
     &                 *FabricMesh_target_points(i,npg,1:3)
     &                 +timeMarchcoef(6)*FabricMesh_Xtar_na(npg,1:3)
          FabricMesh_dXtar_na(npg,1:3)= alphaf_Coef(ibdyg)
     &                 *FabricMesh_target_points_v(i,npg,1:3)
     &                 +timeMarchcoef(6)*FabricMesh_dXtar_na(npg,1:3)
         enddo
      endif  
      if(FabricLineFlag_fbc(ibdy)) then
         do npg=1,FabricLine_target_num(ibdy)
           FabricLine_Xtar_na(npg,1:3)= alphaf_Coef(ibdyg)
     &                 *FabricLine_target_points(i,npg,1:3)
     &                 +timeMarchcoef(6)*FabricLine_Xtar_na(npg,1:3)
          FabricLine_dXtar_na(npg,1:3)= alphaf_Coef(ibdyg)
     &                 *FabricLine_target_points_v(i,npg,1:3)
     &                 +timeMarchcoef(6)*FabricLine_dXtar_na(npg,1:3)
         enddo
      endif 
      do np=1,ns_ibm_i_fbc(ibdy)  
         npg=ns_ibm_r_fbc(ibdy)+np
         bodypoint(1)=boundrylist_fbc(ibdy,np,1)
         bodypoint(2)=boundrylist_fbc(ibdy,np,2)
         bodypoint(3)=boundrylist_fbc(ibdy,np,3)
         X0_np1_fbc(npg,1:3)=X0_np1_fbc(bodypoint(1),1:3)
     &                      +X0_np1_fbc(bodypoint(2),1:3)
     &                      -X0_np1_fbc(bodypoint(3),1:3)

         X_na_fbc(npg,1:3)=X_na_fbc(bodypoint(1),1:3)
     &                    +X_na_fbc(bodypoint(2),1:3)
     &                    -X_na_fbc(bodypoint(3),1:3)

         dX_na_fbc(npg,1:3)=dX_na_fbc(bodypoint(1),1:3)
     &                     +dX_na_fbc(bodypoint(2),1:3)
     &                     -dX_na_fbc(bodypoint(3),1:3)

         ddX_na_fbc(npg,1:3)=ddX_na_fbc(bodypoint(1),1:3)
     &                      +ddX_na_fbc(bodypoint(2),1:3)
     &                      -ddX_na_fbc(bodypoint(3),1:3)

         dX_in_fbc(npg,1:3)=dX_in_fbc(bodypoint(1),1:3)
     &                     +dX_in_fbc(bodypoint(2),1:3)
     &                     -dX_in_fbc(bodypoint(3),1:3)

         ddX_in_fbc(npg,1:3)=ddX_in_fbc(bodypoint(1),1:3)
     &                      +ddX_in_fbc(bodypoint(2),1:3)
     &                      -ddX_in_fbc(bodypoint(3),1:3)

         X_np1_fbc(npg,1:3)=X_np1_fbc(bodypoint(1),1:3)
     &                      +X_np1_fbc(bodypoint(2),1:3)
     &                      -X_np1_fbc(bodypoint(3),1:3)

         dX_np1_fbc(npg,1:3)=dX_np1_fbc(bodypoint(1),1:3)
     &                       +dX_np1_fbc(bodypoint(2),1:3)
     &                       -dX_np1_fbc(bodypoint(3),1:3)

         ddX_np1_fbc(npg,1:3)=ddX_np1_fbc(bodypoint(1),1:3)
     &                       +ddX_np1_fbc(bodypoint(2),1:3)
     &                       -ddX_np1_fbc(bodypoint(3),1:3)

      end do       
      aamat_fbc=0.0
      kkb_fbc=0.0

      fibm1pres_fbc=0.0
      fibm2pres_fbc=0.0
      fibm3pres_fbc=0.0

      fibm1cont_fbc=0.0
      fibm2cont_fbc=0.0
      fibm3cont_fbc=0.0

!update edge length
               do j=1,numedge(in_fbc)
                  iv0=EdgeList_fbc(in_fbc,j,1) 
                  iv1=EdgeList_fbc(in_fbc,j,2)
                  maxtmpx= sqrt(
     &             (X_na_fbc(iv0,1)
     &              -X_na_fbc(iv1,1))**2                 
     &            +(X_na_fbc(iv0,2)
     &              -X_na_fbc(iv1,2))**2                     
     &            +(X_na_fbc(iv0,3)
     &              -X_na_fbc(iv1,3))**2)  
                  EdgeLength_fbc(in_fbc,j)=maxtmpx                     
               enddo
!update center of elements
               do j=1,numelr(i2g)   
                  EleCenter_fbc(in_fbc,j,1:3)=0.0           
                  do j2=1,3  !nodes
                     k=nea_fbc(in_fbc,j,j2)
                     EleCenter_fbc(in_fbc,j,1)=
     &                   EleCenter_fbc(in_fbc,j,1)
     &                   +X_na_fbc(k,1)/3.0
                     EleCenter_fbc(in_fbc,j,2)=
     &                   EleCenter_fbc(in_fbc,j,2)
     &                   +X_na_fbc(k,2)/3.0
                     EleCenter_fbc(in_fbc,j,3)=
     &                   EleCenter_fbc(in_fbc,j,3)
     &                   +X_na_fbc(k,3)/3.0
                  enddo
!update area of element
                 iv0=nea_fbc(in_fbc,j,1)
                 iv1=nea_fbc(in_fbc,j,2)
                 iv2=nea_fbc(in_fbc,j,3)
                 axtmp_fbc=X_na_fbc(iv1,1)
     &                    -X_na_fbc(iv0,1)
                 aytmp_fbc=X_na_fbc(iv1,2)
     &                    -X_na_fbc(iv0,2)
                 aztmp_fbc=X_na_fbc(iv1,3)
     &                    -X_na_fbc(iv0,3)
                 bxtmp_fbc=X_na_fbc(iv2,1)
     &                    -X_na_fbc(iv0,1)
                 bytmp_fbc=X_na_fbc(iv2,2)
     &                    -X_na_fbc(iv0,2) 
                 bztmp_fbc=X_na_fbc(iv2,3)
     &                    -X_na_fbc(iv0,3)
                 cxtmp_fbc=aytmp_fbc*bztmp_fbc-aztmp_fbc*bytmp_fbc
                 cytmp_fbc=aztmp_fbc*bxtmp_fbc-axtmp_fbc*bztmp_fbc
                 cztmp_fbc=axtmp_fbc*bytmp_fbc-aytmp_fbc*bxtmp_fbc
                 EleArea_fbc(in_fbc,j)=
     &                0.5*sqrt(cxtmp_fbc**2+cytmp_fbc**2+cztmp_fbc**2)
!compute the normal
                 axtmp_fbc=X_na_fbc(iv0,1)
     &                    -X_na_fbc(iv2,1)
                 aytmp_fbc=X_na_fbc(iv0,2)
     &                    -X_na_fbc(iv2,2)
                 aztmp_fbc=X_na_fbc(iv0,3)
     &                    -X_na_fbc(iv2,3) 
                 bxtmp_fbc=X_na_fbc(iv0,1)
     &                    -X_na_fbc(iv1,1)
                 bytmp_fbc=X_na_fbc(iv0,2)
     &                    -X_na_fbc(iv1,2) 
                 bztmp_fbc=X_na_fbc(iv0,3)
     &                    -X_na_fbc(iv1,3)
                 tmpcoord(1)=aytmp_fbc*bztmp_fbc-aztmp_fbc*bytmp_fbc
                 tmpcoord(2)=aztmp_fbc*bxtmp_fbc-axtmp_fbc*bztmp_fbc
                 tmpcoord(3)=axtmp_fbc*bytmp_fbc-aytmp_fbc*bxtmp_fbc
                 cxtmp_fbc
     &                =sqrt(dot_product(tmpcoord(1:3),tmpcoord(1:3)))
                 tmpcoord(1)=tmpcoord(1)/cxtmp_fbc
                 tmpcoord(2)=tmpcoord(2)/cxtmp_fbc
                 tmpcoord(3)=tmpcoord(3)/cxtmp_fbc 
                 EleNormal_fbc(in_fbc,j,1:3)= tmpcoord(1:3)  

!compute the inner element angles and edge sizes
               tmpcoord(1:3)=X_na_fbc(iv2,1:3)
     &                      -X_na_fbc(iv1,1:3)

                 EleEdge_fbc(in_fbc,j,1) 
     &                =sqrt(dot_product(tmpcoord(1:3),tmpcoord(1:3)))

               tmpcoord2(1:3)=X_na_fbc(iv2,1:3)
     &                      -X_na_fbc(iv0,1:3)

                 EleEdge_fbc(in_fbc,j,2) 
     &                =sqrt(dot_product(tmpcoord2(1:3),tmpcoord2(1:3)))

              tmpcoord3(1:3)=X_na_fbc(iv1,1:3)
     &                      -X_na_fbc(iv0,1:3)

                 EleEdge_fbc(in_fbc,j,3) 
     &                =sqrt(dot_product(tmpcoord3(1:3),tmpcoord3(1:3)))

               enddo


             if(volume_flag_fbc(in_fbc)) then
                total_volume_fbc(in_fbc)=0.0
!calculate total volume
                do j=1,numelr(i2g) 
                   total_volume_fbc(in_fbc)=total_volume_fbc(in_fbc)
     &                   +EleArea_fbc(in_fbc,j)*(
     &                            EleNormal_fbc(in_fbc,j,1)           
     &                           *EleCenter_fbc(in_fbc,j,1) 
     &                           +EleNormal_fbc(in_fbc,j,2)           
     &                           *EleCenter_fbc(in_fbc,j,2) 
     &                           +EleNormal_fbc(in_fbc,j,3)           
     &                           *EleCenter_fbc(in_fbc,j,3) 
     &                           )
               enddo
               total_volume_fbc(in_fbc)=total_volume_fbc(in_fbc)/3.0
            endif 
             if(Aera_flag_fbc(in_fbc)) then
                total_Area_fbc(in_fbc)=0.0
                do j=1,numelr(i2g)           
                   total_Area_fbc(in_fbc)=total_Area_fbc(in_fbc)
     &                   +EleArea_fbc(in_fbc,j)
               enddo
            endif 



      ntypeMAx_loc=-1000

      do ne=1,numelr(ibdyg)
            tmpv3(1:3)=EleNormal_fbc(in_fbc,ne,1:3)
            tmpv1x(1)=xpcenter_fbc(ibdy,ne,1)
            tmpv1x(2)=xpcenter_fbc(ibdy,ne,2)
            tmpv1x(3)=xpcenter_fbc(ibdy,ne,3)

             if (ExternalPressureFlag(ibdyg)) then
             
             fibm1cont_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm1cont_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(1)*tmpv1x(1)
             fibm1cont_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm1cont_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(1)*tmpv1x(2)
             fibm1cont_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm1cont_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(1)*tmpv1x(3)

             fibm1pres_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm1pres_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(1)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm1pres_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm1pres_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(1)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm1pres_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm1pres_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(1)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0

             fibm2cont_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm2cont_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(2)*tmpv1x(1)
             fibm2cont_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm2cont_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(2)*tmpv1x(2)
             fibm2cont_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm2cont_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(2)*tmpv1x(3)
             fibm2pres_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm2pres_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(2) 
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm2pres_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm2pres_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(2)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm2pres_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm2pres_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(2) 
     &                                 *EleArea_fbc(in_fbc,ne)/3.0

             fibm3cont_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm3cont_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(3)*tmpv1x(1)
             fibm3cont_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm3cont_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(3)*tmpv1x(2)
             fibm3cont_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm3cont_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(3)*tmpv1x(3)

             fibm3pres_fbc(nea_fbc(ibdy,ne,1))=
     &                            fibm3pres_fbc(nea_fbc(ibdy,ne,1))+
     &                                 tmpv3(3)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm3pres_fbc(nea_fbc(ibdy,ne,2))=
     &                            fibm3pres_fbc(nea_fbc(ibdy,ne,2))+
     &                                 tmpv3(3)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
             fibm3pres_fbc(nea_fbc(ibdy,ne,3))=
     &                            fibm3pres_fbc(nea_fbc(ibdy,ne,3))+
     &                                 tmpv3(3)
     &                                 *EleArea_fbc(in_fbc,ne)/3.0
         endif
         end do  !element

! calculate volume forces
             KtmpFlag=.true.
              noi=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
             if(volume_flag_fbc(in_fbc)) then
                 cf_coef=kappa_volume_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
     &                *(total_volume_fbc(in_fbc)-volume_eq_fbc(in_fbc))
     &                /volume_eq_fbc(in_fbc)
              do j=1,numelr(i2g) 
                 iv0=nea_fbc(in_fbc,j,1)
                 iv1=nea_fbc(in_fbc,j,2)
                 iv2=nea_fbc(in_fbc,j,3)

                 x0=X_na_fbc(iv0,1)
                 y0=X_na_fbc(iv0,2)               
                 z0=X_na_fbc(iv0,3)
                 x1=X_na_fbc(iv1,1)
                 y1=X_na_fbc(iv1,2)                
                 z1=X_na_fbc(iv1,3)
                 x2=X_na_fbc(iv2,1)
                 y2=X_na_fbc(iv2,2)                 
                 z2=X_na_fbc(iv2,3)
                 call VolumeForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)

              kkb_fbc(iv0+0*noi,iv0+0*noi)=kkb_fbc(iv0+0*noi,iv0+0*noi)
     &                                   + Ktmp(1,1,1,1)
              kkb_fbc(iv0+0*noi,iv0+1*noi)=kkb_fbc(iv0+0*noi,iv0+1*noi)
     &                                   + Ktmp(1,1,1,2)
              kkb_fbc(iv0+0*noi,iv0+2*noi)=kkb_fbc(iv0+0*noi,iv0+2*noi)
     &                                   + Ktmp(1,1,1,3)
              kkb_fbc(iv0+0*noi,iv1+0*noi)=kkb_fbc(iv0+0*noi,iv1+0*noi)
     &                                   + Ktmp(1,1,2,1)
              kkb_fbc(iv0+0*noi,iv1+1*noi)=kkb_fbc(iv0+0*noi,iv1+1*noi)
     &                                   + Ktmp(1,1,2,2)
              kkb_fbc(iv0+0*noi,iv1+2*noi)=kkb_fbc(iv0+0*noi,iv1+2*noi)
     &                                   + Ktmp(1,1,2,3)
              kkb_fbc(iv0+0*noi,iv2+0*noi)=kkb_fbc(iv0+0*noi,iv2+0*noi)
     &                                   + Ktmp(1,1,3,1)
              kkb_fbc(iv0+0*noi,iv2+1*noi)=kkb_fbc(iv0+0*noi,iv2+1*noi)
     &                                   + Ktmp(1,1,3,2)
              kkb_fbc(iv0+0*noi,iv2+2*noi)=kkb_fbc(iv0+0*noi,iv2+2*noi)
     &                                   + Ktmp(1,1,3,3)
              kkb_fbc(iv0+1*noi,iv0+0*noi)=kkb_fbc(iv0+1*noi,iv0+0*noi)
     &                                   + Ktmp(1,2,1,1)
              kkb_fbc(iv0+1*noi,iv0+1*noi)=kkb_fbc(iv0+1*noi,iv0+1*noi)
     &                                   + Ktmp(1,2,1,2)
              kkb_fbc(iv0+1*noi,iv0+2*noi)=kkb_fbc(iv0+1*noi,iv0+2*noi)
     &                                   + Ktmp(1,2,1,3)
              kkb_fbc(iv0+1*noi,iv1+0*noi)=kkb_fbc(iv0+1*noi,iv1+0*noi)
     &                                   + Ktmp(1,2,2,1)
              kkb_fbc(iv0+1*noi,iv1+1*noi)=kkb_fbc(iv0+1*noi,iv1+1*noi)
     &                                   + Ktmp(1,2,2,2)
              kkb_fbc(iv0+1*noi,iv1+2*noi)=kkb_fbc(iv0+1*noi,iv1+2*noi)
     &                                   + Ktmp(1,2,2,3)
              kkb_fbc(iv0+1*noi,iv2+0*noi)=kkb_fbc(iv0+1*noi,iv2+0*noi)
     &                                   + Ktmp(1,2,3,1)
              kkb_fbc(iv0+1*noi,iv2+1*noi)=kkb_fbc(iv0+1*noi,iv2+1*noi)
     &                                   + Ktmp(1,2,3,2)
              kkb_fbc(iv0+1*noi,iv2+2*noi)=kkb_fbc(iv0+1*noi,iv2+2*noi)
     &                                   + Ktmp(1,2,3,3)
              kkb_fbc(iv0+2*noi,iv0+0*noi)=kkb_fbc(iv0+2*noi,iv0+0*noi)
     &                                   + Ktmp(1,3,1,1)
              kkb_fbc(iv0+2*noi,iv0+1*noi)=kkb_fbc(iv0+2*noi,iv0+1*noi)
     &                                   + Ktmp(1,3,1,2)
              kkb_fbc(iv0+2*noi,iv0+2*noi)=kkb_fbc(iv0+2*noi,iv0+2*noi)
     &                                   + Ktmp(1,3,1,3)
              kkb_fbc(iv0+2*noi,iv1+0*noi)=kkb_fbc(iv0+2*noi,iv1+0*noi)
     &                                   + Ktmp(1,3,2,1)
              kkb_fbc(iv0+2*noi,iv1+1*noi)=kkb_fbc(iv0+2*noi,iv1+1*noi)
     &                                   + Ktmp(1,3,2,2)
              kkb_fbc(iv0+2*noi,iv1+2*noi)=kkb_fbc(iv0+2*noi,iv1+2*noi)
     &                                   + Ktmp(1,3,2,3)
              kkb_fbc(iv0+2*noi,iv2+0*noi)=kkb_fbc(iv0+2*noi,iv2+0*noi)
     &                                   + Ktmp(1,3,3,1)
              kkb_fbc(iv0+2*noi,iv2+1*noi)=kkb_fbc(iv0+2*noi,iv2+1*noi)
     &                                   + Ktmp(1,3,3,2)
              kkb_fbc(iv0+2*noi,iv2+2*noi)=kkb_fbc(iv0+2*noi,iv2+2*noi)
     &                                   + Ktmp(1,3,3,3)
              kkb_fbc(iv1+0*noi,iv0+0*noi)=kkb_fbc(iv1+0*noi,iv0+0*noi)
     &                                   + Ktmp(2,1,1,1)
              kkb_fbc(iv1+0*noi,iv0+1*noi)=kkb_fbc(iv1+0*noi,iv0+1*noi)
     &                                   + Ktmp(2,1,1,2)
              kkb_fbc(iv1+0*noi,iv0+2*noi)=kkb_fbc(iv1+0*noi,iv0+2*noi)
     &                                   + Ktmp(2,1,1,3)
              kkb_fbc(iv1+0*noi,iv1+0*noi)=kkb_fbc(iv1+0*noi,iv1+0*noi)
     &                                   + Ktmp(2,1,2,1)
              kkb_fbc(iv1+0*noi,iv1+1*noi)=kkb_fbc(iv1+0*noi,iv1+1*noi)
     &                                   + Ktmp(2,1,2,2)
              kkb_fbc(iv1+0*noi,iv1+2*noi)=kkb_fbc(iv1+0*noi,iv1+2*noi)
     &                                   + Ktmp(2,1,2,3)
              kkb_fbc(iv1+0*noi,iv2+0*noi)=kkb_fbc(iv1+0*noi,iv2+0*noi)
     &                                   + Ktmp(2,1,3,1)
              kkb_fbc(iv1+0*noi,iv2+1*noi)=kkb_fbc(iv1+0*noi,iv2+1*noi)
     &                                   + Ktmp(2,1,3,2)
              kkb_fbc(iv1+0*noi,iv2+2*noi)=kkb_fbc(iv1+0*noi,iv2+2*noi)
     &                                   + Ktmp(2,1,3,3)
              kkb_fbc(iv1+1*noi,iv0+0*noi)=kkb_fbc(iv1+1*noi,iv0+0*noi)
     &                                   + Ktmp(2,2,1,1)
              kkb_fbc(iv1+1*noi,iv0+1*noi)=kkb_fbc(iv1+1*noi,iv0+1*noi)
     &                                   + Ktmp(2,2,1,2)
              kkb_fbc(iv1+1*noi,iv0+2*noi)=kkb_fbc(iv1+1*noi,iv0+2*noi)
     &                                   + Ktmp(2,2,1,3)
              kkb_fbc(iv1+1*noi,iv1+0*noi)=kkb_fbc(iv1+1*noi,iv1+0*noi)
     &                                   + Ktmp(2,2,2,1)
              kkb_fbc(iv1+1*noi,iv1+1*noi)=kkb_fbc(iv1+1*noi,iv1+1*noi)
     &                                   + Ktmp(2,2,2,2)
              kkb_fbc(iv1+1*noi,iv1+2*noi)=kkb_fbc(iv1+1*noi,iv1+2*noi)
     &                                   + Ktmp(2,2,2,3)
              kkb_fbc(iv1+1*noi,iv2+0*noi)=kkb_fbc(iv1+1*noi,iv2+0*noi)
     &                                   + Ktmp(2,2,3,1)
              kkb_fbc(iv1+1*noi,iv2+1*noi)=kkb_fbc(iv1+1*noi,iv2+1*noi)
     &                                   + Ktmp(2,2,3,2)
              kkb_fbc(iv1+1*noi,iv2+2*noi)=kkb_fbc(iv1+1*noi,iv2+2*noi)
     &                                   + Ktmp(2,2,3,3)
              kkb_fbc(iv1+2*noi,iv0+0*noi)=kkb_fbc(iv1+2*noi,iv0+0*noi)
     &                                   + Ktmp(2,3,1,1)
              kkb_fbc(iv1+2*noi,iv0+1*noi)=kkb_fbc(iv1+2*noi,iv0+1*noi)
     &                                   + Ktmp(2,3,1,2)
              kkb_fbc(iv1+2*noi,iv0+2*noi)=kkb_fbc(iv1+2*noi,iv0+2*noi)
     &                                   + Ktmp(2,3,1,3)
              kkb_fbc(iv1+2*noi,iv1+0*noi)=kkb_fbc(iv1+2*noi,iv1+0*noi)
     &                                   + Ktmp(2,3,2,1)
              kkb_fbc(iv1+2*noi,iv1+1*noi)=kkb_fbc(iv1+2*noi,iv1+1*noi)
     &                                   + Ktmp(2,3,2,2)
              kkb_fbc(iv1+2*noi,iv1+2*noi)=kkb_fbc(iv1+2*noi,iv1+2*noi)
     &                                   + Ktmp(2,3,2,3)
              kkb_fbc(iv1+2*noi,iv2+0*noi)=kkb_fbc(iv1+2*noi,iv2+0*noi)
     &                                   + Ktmp(2,3,3,1)
              kkb_fbc(iv1+2*noi,iv2+1*noi)=kkb_fbc(iv1+2*noi,iv2+1*noi)
     &                                   + Ktmp(2,3,3,2)
              kkb_fbc(iv1+2*noi,iv2+2*noi)=kkb_fbc(iv1+2*noi,iv2+2*noi)
     &                                   + Ktmp(2,3,3,3)
              kkb_fbc(iv2+0*noi,iv0+0*noi)=kkb_fbc(iv2+0*noi,iv0+0*noi)
     &                                   + Ktmp(3,1,1,1)
              kkb_fbc(iv2+0*noi,iv0+1*noi)=kkb_fbc(iv2+0*noi,iv0+1*noi)
     &                                   + Ktmp(3,1,1,2)
              kkb_fbc(iv2+0*noi,iv0+2*noi)=kkb_fbc(iv2+0*noi,iv0+2*noi)
     &                                   + Ktmp(3,1,1,3)
              kkb_fbc(iv2+0*noi,iv1+0*noi)=kkb_fbc(iv2+0*noi,iv1+0*noi)
     &                                   + Ktmp(3,1,2,1)
              kkb_fbc(iv2+0*noi,iv1+1*noi)=kkb_fbc(iv2+0*noi,iv1+1*noi)
     &                                   + Ktmp(3,1,2,2)
              kkb_fbc(iv2+0*noi,iv1+2*noi)=kkb_fbc(iv2+0*noi,iv1+2*noi)
     &                                   + Ktmp(3,1,2,3)
              kkb_fbc(iv2+0*noi,iv2+0*noi)=kkb_fbc(iv2+0*noi,iv2+0*noi)
     &                                   + Ktmp(3,1,3,1)
              kkb_fbc(iv2+0*noi,iv2+1*noi)=kkb_fbc(iv2+0*noi,iv2+1*noi)
     &                                   + Ktmp(3,1,3,2)
              kkb_fbc(iv2+0*noi,iv2+2*noi)=kkb_fbc(iv2+0*noi,iv2+2*noi)
     &                                   + Ktmp(3,1,3,3)
              kkb_fbc(iv2+1*noi,iv0+0*noi)=kkb_fbc(iv2+1*noi,iv0+0*noi)
     &                                   + Ktmp(3,2,1,1)
              kkb_fbc(iv2+1*noi,iv0+1*noi)=kkb_fbc(iv2+1*noi,iv0+1*noi)
     &                                   + Ktmp(3,2,1,2)
              kkb_fbc(iv2+1*noi,iv0+2*noi)=kkb_fbc(iv2+1*noi,iv0+2*noi)
     &                                   + Ktmp(3,2,1,3)
              kkb_fbc(iv2+1*noi,iv1+0*noi)=kkb_fbc(iv2+1*noi,iv1+0*noi)
     &                                   + Ktmp(3,2,2,1)
              kkb_fbc(iv2+1*noi,iv1+1*noi)=kkb_fbc(iv2+1*noi,iv1+1*noi)
     &                                   + Ktmp(3,2,2,2)
              kkb_fbc(iv2+1*noi,iv1+2*noi)=kkb_fbc(iv2+1*noi,iv1+2*noi)
     &                                   + Ktmp(3,2,2,3)
              kkb_fbc(iv2+1*noi,iv2+0*noi)=kkb_fbc(iv2+1*noi,iv2+0*noi)
     &                                   + Ktmp(3,2,3,1)
              kkb_fbc(iv2+1*noi,iv2+1*noi)=kkb_fbc(iv2+1*noi,iv2+1*noi)
     &                                   + Ktmp(3,2,3,2)
              kkb_fbc(iv2+1*noi,iv2+2*noi)=kkb_fbc(iv2+1*noi,iv2+2*noi)
     &                                   + Ktmp(3,2,3,3)
              kkb_fbc(iv2+2*noi,iv0+0*noi)=kkb_fbc(iv2+2*noi,iv0+0*noi)
     &                                   + Ktmp(3,3,1,1)
              kkb_fbc(iv2+2*noi,iv0+1*noi)=kkb_fbc(iv2+2*noi,iv0+1*noi)
     &                                   + Ktmp(3,3,1,2)
              kkb_fbc(iv2+2*noi,iv0+2*noi)=kkb_fbc(iv2+2*noi,iv0+2*noi)
     &                                   + Ktmp(3,3,1,3)
              kkb_fbc(iv2+2*noi,iv1+0*noi)=kkb_fbc(iv2+2*noi,iv1+0*noi)
     &                                   + Ktmp(3,3,2,1)
              kkb_fbc(iv2+2*noi,iv1+1*noi)=kkb_fbc(iv2+2*noi,iv1+1*noi)
     &                                   + Ktmp(3,3,2,2)
              kkb_fbc(iv2+2*noi,iv1+2*noi)=kkb_fbc(iv2+2*noi,iv1+2*noi)
     &                                   + Ktmp(3,3,2,3)
              kkb_fbc(iv2+2*noi,iv2+0*noi)=kkb_fbc(iv2+2*noi,iv2+0*noi)
     &                                   + Ktmp(3,3,3,1)
              kkb_fbc(iv2+2*noi,iv2+1*noi)=kkb_fbc(iv2+2*noi,iv2+1*noi)
     &                                   + Ktmp(3,3,3,2)
              kkb_fbc(iv2+2*noi,iv2+2*noi)=kkb_fbc(iv2+2*noi,iv2+2*noi)
     &                                   + Ktmp(3,3,3,3)

              enddo
            endif 
             if(Aera_flag_fbc(in_fbc)) then
                 cf_coef=kappa_Area_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
     &                *(total_Area_fbc(in_fbc)-Area_eq_fbc(in_fbc))
     &                /4.0/Area_eq_fbc(in_fbc)
              do j=1,numelr(i2g)
                 cf_coef2=cf_coef/EleArea_fbc(in_fbc,j)
                 cf_coef1=kappa_Area_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
     &                *(EleArea_fbc(in_fbc,j)-EleArea0_fbc(in_fbc,j))
     &                /4.0/EleArea0_fbc(in_fbc,j)
                 cf_coef1=cf_coef1/EleArea_fbc(in_fbc,j)
                 iv0=nea_fbc(in_fbc,j,1)
                 iv1=nea_fbc(in_fbc,j,2)
                 iv2=nea_fbc(in_fbc,j,3)

                 x0=X_na_fbc(iv0,1)
                 y0=X_na_fbc(iv0,2)               
                 z0=X_na_fbc(iv0,3)
                 x1=X_na_fbc(iv1,1)
                 y1=X_na_fbc(iv1,2)                
                 z1=X_na_fbc(iv1,3)
                 x2=X_na_fbc(iv2,1)
                 y2=X_na_fbc(iv2,2)                 
                 z2=X_na_fbc(iv2,3)

                 call Total_AreaForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef2
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)

                 call Local_AreaForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef1
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)

                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)

              kkb_fbc(iv0+0*noi,iv0+0*noi)=kkb_fbc(iv0+0*noi,iv0+0*noi)
     &                                   + Ktmp(1,1,1,1)
              kkb_fbc(iv0+0*noi,iv0+1*noi)=kkb_fbc(iv0+0*noi,iv0+1*noi)
     &                                   + Ktmp(1,1,1,2)
              kkb_fbc(iv0+0*noi,iv0+2*noi)=kkb_fbc(iv0+0*noi,iv0+2*noi)
     &                                   + Ktmp(1,1,1,3)
              kkb_fbc(iv0+0*noi,iv1+0*noi)=kkb_fbc(iv0+0*noi,iv1+0*noi)
     &                                   + Ktmp(1,1,2,1)
              kkb_fbc(iv0+0*noi,iv1+1*noi)=kkb_fbc(iv0+0*noi,iv1+1*noi)
     &                                   + Ktmp(1,1,2,2)
              kkb_fbc(iv0+0*noi,iv1+2*noi)=kkb_fbc(iv0+0*noi,iv1+2*noi)
     &                                   + Ktmp(1,1,2,3)
              kkb_fbc(iv0+0*noi,iv2+0*noi)=kkb_fbc(iv0+0*noi,iv2+0*noi)
     &                                   + Ktmp(1,1,3,1)
              kkb_fbc(iv0+0*noi,iv2+1*noi)=kkb_fbc(iv0+0*noi,iv2+1*noi)
     &                                   + Ktmp(1,1,3,2)
              kkb_fbc(iv0+0*noi,iv2+2*noi)=kkb_fbc(iv0+0*noi,iv2+2*noi)
     &                                   + Ktmp(1,1,3,3)
              kkb_fbc(iv0+1*noi,iv0+0*noi)=kkb_fbc(iv0+1*noi,iv0+0*noi)
     &                                   + Ktmp(1,2,1,1)
              kkb_fbc(iv0+1*noi,iv0+1*noi)=kkb_fbc(iv0+1*noi,iv0+1*noi)
     &                                   + Ktmp(1,2,1,2)
              kkb_fbc(iv0+1*noi,iv0+2*noi)=kkb_fbc(iv0+1*noi,iv0+2*noi)
     &                                   + Ktmp(1,2,1,3)
              kkb_fbc(iv0+1*noi,iv1+0*noi)=kkb_fbc(iv0+1*noi,iv1+0*noi)
     &                                   + Ktmp(1,2,2,1)
              kkb_fbc(iv0+1*noi,iv1+1*noi)=kkb_fbc(iv0+1*noi,iv1+1*noi)
     &                                   + Ktmp(1,2,2,2)
              kkb_fbc(iv0+1*noi,iv1+2*noi)=kkb_fbc(iv0+1*noi,iv1+2*noi)
     &                                   + Ktmp(1,2,2,3)
              kkb_fbc(iv0+1*noi,iv2+0*noi)=kkb_fbc(iv0+1*noi,iv2+0*noi)
     &                                   + Ktmp(1,2,3,1)
              kkb_fbc(iv0+1*noi,iv2+1*noi)=kkb_fbc(iv0+1*noi,iv2+1*noi)
     &                                   + Ktmp(1,2,3,2)
              kkb_fbc(iv0+1*noi,iv2+2*noi)=kkb_fbc(iv0+1*noi,iv2+2*noi)
     &                                   + Ktmp(1,2,3,3)
              kkb_fbc(iv0+2*noi,iv0+0*noi)=kkb_fbc(iv0+2*noi,iv0+0*noi)
     &                                   + Ktmp(1,3,1,1)
              kkb_fbc(iv0+2*noi,iv0+1*noi)=kkb_fbc(iv0+2*noi,iv0+1*noi)
     &                                   + Ktmp(1,3,1,2)
              kkb_fbc(iv0+2*noi,iv0+2*noi)=kkb_fbc(iv0+2*noi,iv0+2*noi)
     &                                   + Ktmp(1,3,1,3)
              kkb_fbc(iv0+2*noi,iv1+0*noi)=kkb_fbc(iv0+2*noi,iv1+0*noi)
     &                                   + Ktmp(1,3,2,1)
              kkb_fbc(iv0+2*noi,iv1+1*noi)=kkb_fbc(iv0+2*noi,iv1+1*noi)
     &                                   + Ktmp(1,3,2,2)
              kkb_fbc(iv0+2*noi,iv1+2*noi)=kkb_fbc(iv0+2*noi,iv1+2*noi)
     &                                   + Ktmp(1,3,2,3)
              kkb_fbc(iv0+2*noi,iv2+0*noi)=kkb_fbc(iv0+2*noi,iv2+0*noi)
     &                                   + Ktmp(1,3,3,1)
              kkb_fbc(iv0+2*noi,iv2+1*noi)=kkb_fbc(iv0+2*noi,iv2+1*noi)
     &                                   + Ktmp(1,3,3,2)
              kkb_fbc(iv0+2*noi,iv2+2*noi)=kkb_fbc(iv0+2*noi,iv2+2*noi)
     &                                   + Ktmp(1,3,3,3)
              kkb_fbc(iv1+0*noi,iv0+0*noi)=kkb_fbc(iv1+0*noi,iv0+0*noi)
     &                                   + Ktmp(2,1,1,1)
              kkb_fbc(iv1+0*noi,iv0+1*noi)=kkb_fbc(iv1+0*noi,iv0+1*noi)
     &                                   + Ktmp(2,1,1,2)
              kkb_fbc(iv1+0*noi,iv0+2*noi)=kkb_fbc(iv1+0*noi,iv0+2*noi)
     &                                   + Ktmp(2,1,1,3)
              kkb_fbc(iv1+0*noi,iv1+0*noi)=kkb_fbc(iv1+0*noi,iv1+0*noi)
     &                                   + Ktmp(2,1,2,1)
              kkb_fbc(iv1+0*noi,iv1+1*noi)=kkb_fbc(iv1+0*noi,iv1+1*noi)
     &                                   + Ktmp(2,1,2,2)
              kkb_fbc(iv1+0*noi,iv1+2*noi)=kkb_fbc(iv1+0*noi,iv1+2*noi)
     &                                   + Ktmp(2,1,2,3)
              kkb_fbc(iv1+0*noi,iv2+0*noi)=kkb_fbc(iv1+0*noi,iv2+0*noi)
     &                                   + Ktmp(2,1,3,1)
              kkb_fbc(iv1+0*noi,iv2+1*noi)=kkb_fbc(iv1+0*noi,iv2+1*noi)
     &                                   + Ktmp(2,1,3,2)
              kkb_fbc(iv1+0*noi,iv2+2*noi)=kkb_fbc(iv1+0*noi,iv2+2*noi)
     &                                   + Ktmp(2,1,3,3)
              kkb_fbc(iv1+1*noi,iv0+0*noi)=kkb_fbc(iv1+1*noi,iv0+0*noi)
     &                                   + Ktmp(2,2,1,1)
              kkb_fbc(iv1+1*noi,iv0+1*noi)=kkb_fbc(iv1+1*noi,iv0+1*noi)
     &                                   + Ktmp(2,2,1,2)
              kkb_fbc(iv1+1*noi,iv0+2*noi)=kkb_fbc(iv1+1*noi,iv0+2*noi)
     &                                   + Ktmp(2,2,1,3)
              kkb_fbc(iv1+1*noi,iv1+0*noi)=kkb_fbc(iv1+1*noi,iv1+0*noi)
     &                                   + Ktmp(2,2,2,1)
              kkb_fbc(iv1+1*noi,iv1+1*noi)=kkb_fbc(iv1+1*noi,iv1+1*noi)
     &                                   + Ktmp(2,2,2,2)
              kkb_fbc(iv1+1*noi,iv1+2*noi)=kkb_fbc(iv1+1*noi,iv1+2*noi)
     &                                   + Ktmp(2,2,2,3)
              kkb_fbc(iv1+1*noi,iv2+0*noi)=kkb_fbc(iv1+1*noi,iv2+0*noi)
     &                                   + Ktmp(2,2,3,1)
              kkb_fbc(iv1+1*noi,iv2+1*noi)=kkb_fbc(iv1+1*noi,iv2+1*noi)
     &                                   + Ktmp(2,2,3,2)
              kkb_fbc(iv1+1*noi,iv2+2*noi)=kkb_fbc(iv1+1*noi,iv2+2*noi)
     &                                   + Ktmp(2,2,3,3)
              kkb_fbc(iv1+2*noi,iv0+0*noi)=kkb_fbc(iv1+2*noi,iv0+0*noi)
     &                                   + Ktmp(2,3,1,1)
              kkb_fbc(iv1+2*noi,iv0+1*noi)=kkb_fbc(iv1+2*noi,iv0+1*noi)
     &                                   + Ktmp(2,3,1,2)
              kkb_fbc(iv1+2*noi,iv0+2*noi)=kkb_fbc(iv1+2*noi,iv0+2*noi)
     &                                   + Ktmp(2,3,1,3)
              kkb_fbc(iv1+2*noi,iv1+0*noi)=kkb_fbc(iv1+2*noi,iv1+0*noi)
     &                                   + Ktmp(2,3,2,1)
              kkb_fbc(iv1+2*noi,iv1+1*noi)=kkb_fbc(iv1+2*noi,iv1+1*noi)
     &                                   + Ktmp(2,3,2,2)
              kkb_fbc(iv1+2*noi,iv1+2*noi)=kkb_fbc(iv1+2*noi,iv1+2*noi)
     &                                   + Ktmp(2,3,2,3)
              kkb_fbc(iv1+2*noi,iv2+0*noi)=kkb_fbc(iv1+2*noi,iv2+0*noi)
     &                                   + Ktmp(2,3,3,1)
              kkb_fbc(iv1+2*noi,iv2+1*noi)=kkb_fbc(iv1+2*noi,iv2+1*noi)
     &                                   + Ktmp(2,3,3,2)
              kkb_fbc(iv1+2*noi,iv2+2*noi)=kkb_fbc(iv1+2*noi,iv2+2*noi)
     &                                   + Ktmp(2,3,3,3)
              kkb_fbc(iv2+0*noi,iv0+0*noi)=kkb_fbc(iv2+0*noi,iv0+0*noi)
     &                                   + Ktmp(3,1,1,1)
              kkb_fbc(iv2+0*noi,iv0+1*noi)=kkb_fbc(iv2+0*noi,iv0+1*noi)
     &                                   + Ktmp(3,1,1,2)
              kkb_fbc(iv2+0*noi,iv0+2*noi)=kkb_fbc(iv2+0*noi,iv0+2*noi)
     &                                   + Ktmp(3,1,1,3)
              kkb_fbc(iv2+0*noi,iv1+0*noi)=kkb_fbc(iv2+0*noi,iv1+0*noi)
     &                                   + Ktmp(3,1,2,1)
              kkb_fbc(iv2+0*noi,iv1+1*noi)=kkb_fbc(iv2+0*noi,iv1+1*noi)
     &                                   + Ktmp(3,1,2,2)
              kkb_fbc(iv2+0*noi,iv1+2*noi)=kkb_fbc(iv2+0*noi,iv1+2*noi)
     &                                   + Ktmp(3,1,2,3)
              kkb_fbc(iv2+0*noi,iv2+0*noi)=kkb_fbc(iv2+0*noi,iv2+0*noi)
     &                                   + Ktmp(3,1,3,1)
              kkb_fbc(iv2+0*noi,iv2+1*noi)=kkb_fbc(iv2+0*noi,iv2+1*noi)
     &                                   + Ktmp(3,1,3,2)
              kkb_fbc(iv2+0*noi,iv2+2*noi)=kkb_fbc(iv2+0*noi,iv2+2*noi)
     &                                   + Ktmp(3,1,3,3)
              kkb_fbc(iv2+1*noi,iv0+0*noi)=kkb_fbc(iv2+1*noi,iv0+0*noi)
     &                                   + Ktmp(3,2,1,1)
              kkb_fbc(iv2+1*noi,iv0+1*noi)=kkb_fbc(iv2+1*noi,iv0+1*noi)
     &                                   + Ktmp(3,2,1,2)
              kkb_fbc(iv2+1*noi,iv0+2*noi)=kkb_fbc(iv2+1*noi,iv0+2*noi)
     &                                   + Ktmp(3,2,1,3)
              kkb_fbc(iv2+1*noi,iv1+0*noi)=kkb_fbc(iv2+1*noi,iv1+0*noi)
     &                                   + Ktmp(3,2,2,1)
              kkb_fbc(iv2+1*noi,iv1+1*noi)=kkb_fbc(iv2+1*noi,iv1+1*noi)
     &                                   + Ktmp(3,2,2,2)
              kkb_fbc(iv2+1*noi,iv1+2*noi)=kkb_fbc(iv2+1*noi,iv1+2*noi)
     &                                   + Ktmp(3,2,2,3)
              kkb_fbc(iv2+1*noi,iv2+0*noi)=kkb_fbc(iv2+1*noi,iv2+0*noi)
     &                                   + Ktmp(3,2,3,1)
              kkb_fbc(iv2+1*noi,iv2+1*noi)=kkb_fbc(iv2+1*noi,iv2+1*noi)
     &                                   + Ktmp(3,2,3,2)
              kkb_fbc(iv2+1*noi,iv2+2*noi)=kkb_fbc(iv2+1*noi,iv2+2*noi)

     &                                   + Ktmp(3,2,3,3)
              kkb_fbc(iv2+2*noi,iv0+0*noi)=kkb_fbc(iv2+2*noi,iv0+0*noi)
     &                                   + Ktmp(3,3,1,1)
              kkb_fbc(iv2+2*noi,iv0+1*noi)=kkb_fbc(iv2+2*noi,iv0+1*noi)
     &                                   + Ktmp(3,3,1,2)
              kkb_fbc(iv2+2*noi,iv0+2*noi)=kkb_fbc(iv2+2*noi,iv0+2*noi)
     &                                   + Ktmp(3,3,1,3)
              kkb_fbc(iv2+2*noi,iv1+0*noi)=kkb_fbc(iv2+2*noi,iv1+0*noi)
     &                                   + Ktmp(3,3,2,1)
              kkb_fbc(iv2+2*noi,iv1+1*noi)=kkb_fbc(iv2+2*noi,iv1+1*noi)
     &                                   + Ktmp(3,3,2,2)
              kkb_fbc(iv2+2*noi,iv1+2*noi)=kkb_fbc(iv2+2*noi,iv1+2*noi)
     &                                   + Ktmp(3,3,2,3)
              kkb_fbc(iv2+2*noi,iv2+0*noi)=kkb_fbc(iv2+2*noi,iv2+0*noi)
     &                                   + Ktmp(3,3,3,1)
              kkb_fbc(iv2+2*noi,iv2+1*noi)=kkb_fbc(iv2+2*noi,iv2+1*noi)
     &                                   + Ktmp(3,3,3,2)
              kkb_fbc(iv2+2*noi,iv2+2*noi)=kkb_fbc(iv2+2*noi,iv2+2*noi)
     &                                   + Ktmp(3,3,3,3)

              enddo
            endif
             if (inplane_flag_fbc(in_fbc)) then
              if(inplane_type_fbc(in_fbc) .eq. 1) then
               tmpcoord(1)=-kappa_inplane_fbc(in_fbc,1)
     &              *KBT_fbc(in_fbc)/edge_length_p_fbc(in_fbc)

               tmpcoord(2)=-kappa_inplane_fbc(in_fbc,2)

               tmpcoord(3)=-kappa_inplane_fbc(in_fbc,3)

                do j=1,numedge(in_fbc)
                  iv0=EdgeList_fbc(in_fbc,j,1) 
                  iv1=EdgeList_fbc(in_fbc,j,2)

                 x0=X_na_fbc(iv0,1)
                 y0=X_na_fbc(iv0,2)               
                 z0=X_na_fbc(iv0,3)
                 x1=X_na_fbc(iv1,1)
                 y1=X_na_fbc(iv1,2)                
                 z1=X_na_fbc(iv1,3)

                  if(edge_length_max_fbc(in_fbc) .lt. 0) then
                      z3=abs(edge_length_max_fbc(in_fbc))
     &                  *EdgeLength0_fbc(in_fbc,j)
                  else
                      z3=edge_length_max_fbc(in_fbc)
                  endif
                  L_over_Lmax=EdgeLength_fbc(in_fbc,j)/z3
                  if(L_over_Lmax .gt. 1) then
                     write(*,*) 'inplane force: x>=1!,' 
                     write(*,*) in_fbc,j,L_over_Lmax
                     stop
                  endif
                  do k=1,3
                  call Inplane_LineForce(Forcetmpfbc(1:2,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,L_over_Lmax,z3
     &                            ,InplaneLinemode_fbc(in_fbc,k)
     &                            ,InplaneLinem_fbc(in_fbc)           !InplaneLinemode,mcoef
     &                            ,tmpcoord(k)
     &                            ,Ktmp(1:2,1:3,1:2,1:3),KtmpFlag)

                  fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                  fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                  fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                  fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                  fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                  fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)

              kkb_fbc(iv0+0*noi,iv0+0*noi)=kkb_fbc(iv0+0*noi,iv0+0*noi)
     &                                   + Ktmp(1,1,1,1)
              kkb_fbc(iv0+0*noi,iv0+1*noi)=kkb_fbc(iv0+0*noi,iv0+1*noi)
     &                                   + Ktmp(1,1,1,2)
              kkb_fbc(iv0+0*noi,iv0+2*noi)=kkb_fbc(iv0+0*noi,iv0+2*noi)
     &                                   + Ktmp(1,1,1,3)
              kkb_fbc(iv0+0*noi,iv1+0*noi)=kkb_fbc(iv0+0*noi,iv1+0*noi)
     &                                   + Ktmp(1,1,2,1)
              kkb_fbc(iv0+0*noi,iv1+1*noi)=kkb_fbc(iv0+0*noi,iv1+1*noi)
     &                                   + Ktmp(1,1,2,2)
              kkb_fbc(iv0+0*noi,iv1+2*noi)=kkb_fbc(iv0+0*noi,iv1+2*noi)
     &                                   + Ktmp(1,1,2,3)
              kkb_fbc(iv0+1*noi,iv0+0*noi)=kkb_fbc(iv0+1*noi,iv0+0*noi)
     &                                   + Ktmp(1,2,1,1)
              kkb_fbc(iv0+1*noi,iv0+1*noi)=kkb_fbc(iv0+1*noi,iv0+1*noi)
     &                                   + Ktmp(1,2,1,2)
              kkb_fbc(iv0+1*noi,iv0+2*noi)=kkb_fbc(iv0+1*noi,iv0+2*noi)
     &                                   + Ktmp(1,2,1,3)
              kkb_fbc(iv0+1*noi,iv1+0*noi)=kkb_fbc(iv0+1*noi,iv1+0*noi)
     &                                   + Ktmp(1,2,2,1)
              kkb_fbc(iv0+1*noi,iv1+1*noi)=kkb_fbc(iv0+1*noi,iv1+1*noi)
     &                                   + Ktmp(1,2,2,2)
              kkb_fbc(iv0+1*noi,iv1+2*noi)=kkb_fbc(iv0+1*noi,iv1+2*noi)
     &                                   + Ktmp(1,2,2,3)
              kkb_fbc(iv0+2*noi,iv0+0*noi)=kkb_fbc(iv0+2*noi,iv0+0*noi)
     &                                   + Ktmp(1,3,1,1)
              kkb_fbc(iv0+2*noi,iv0+1*noi)=kkb_fbc(iv0+2*noi,iv0+1*noi)
     &                                   + Ktmp(1,3,1,2)
              kkb_fbc(iv0+2*noi,iv0+2*noi)=kkb_fbc(iv0+2*noi,iv0+2*noi)
     &                                   + Ktmp(1,3,1,3)
              kkb_fbc(iv0+2*noi,iv1+0*noi)=kkb_fbc(iv0+2*noi,iv1+0*noi)
     &                                   + Ktmp(1,3,2,1)
              kkb_fbc(iv0+2*noi,iv1+1*noi)=kkb_fbc(iv0+2*noi,iv1+1*noi)
     &                                   + Ktmp(1,3,2,2)
              kkb_fbc(iv0+2*noi,iv1+2*noi)=kkb_fbc(iv0+2*noi,iv1+2*noi)
     &                                   + Ktmp(1,3,2,3)
              kkb_fbc(iv1+0*noi,iv0+0*noi)=kkb_fbc(iv1+0*noi,iv0+0*noi)
     &                                   + Ktmp(2,1,1,1)
              kkb_fbc(iv1+0*noi,iv0+1*noi)=kkb_fbc(iv1+0*noi,iv0+1*noi)
     &                                   + Ktmp(2,1,1,2)
              kkb_fbc(iv1+0*noi,iv0+2*noi)=kkb_fbc(iv1+0*noi,iv0+2*noi)
     &                                   + Ktmp(2,1,1,3)
              kkb_fbc(iv1+0*noi,iv1+0*noi)=kkb_fbc(iv1+0*noi,iv1+0*noi)
     &                                   + Ktmp(2,1,2,1)
              kkb_fbc(iv1+0*noi,iv1+1*noi)=kkb_fbc(iv1+0*noi,iv1+1*noi)
     &                                   + Ktmp(2,1,2,2)
              kkb_fbc(iv1+0*noi,iv1+2*noi)=kkb_fbc(iv1+0*noi,iv1+2*noi)
     &                                   + Ktmp(2,1,2,3)
              kkb_fbc(iv1+1*noi,iv0+0*noi)=kkb_fbc(iv1+1*noi,iv0+0*noi)
     &                                   + Ktmp(2,2,1,1)
              kkb_fbc(iv1+1*noi,iv0+1*noi)=kkb_fbc(iv1+1*noi,iv0+1*noi)
     &                                   + Ktmp(2,2,1,2)
              kkb_fbc(iv1+1*noi,iv0+2*noi)=kkb_fbc(iv1+1*noi,iv0+2*noi)
     &                                   + Ktmp(2,2,1,3)
              kkb_fbc(iv1+1*noi,iv1+0*noi)=kkb_fbc(iv1+1*noi,iv1+0*noi)
     &                                   + Ktmp(2,2,2,1)
              kkb_fbc(iv1+1*noi,iv1+1*noi)=kkb_fbc(iv1+1*noi,iv1+1*noi)
     &                                   + Ktmp(2,2,2,2)
              kkb_fbc(iv1+1*noi,iv1+2*noi)=kkb_fbc(iv1+1*noi,iv1+2*noi)
     &                                   + Ktmp(2,2,2,3)
              kkb_fbc(iv1+2*noi,iv0+0*noi)=kkb_fbc(iv1+2*noi,iv0+0*noi)
     &                                   + Ktmp(2,3,1,1)
              kkb_fbc(iv1+2*noi,iv0+1*noi)=kkb_fbc(iv1+2*noi,iv0+1*noi)
     &                                   + Ktmp(2,3,1,2)
              kkb_fbc(iv1+2*noi,iv0+2*noi)=kkb_fbc(iv1+2*noi,iv0+2*noi)
     &                                   + Ktmp(2,3,1,3)
              kkb_fbc(iv1+2*noi,iv1+0*noi)=kkb_fbc(iv1+2*noi,iv1+0*noi)
     &                                   + Ktmp(2,3,2,1)
              kkb_fbc(iv1+2*noi,iv1+1*noi)=kkb_fbc(iv1+2*noi,iv1+1*noi)
     &                                   + Ktmp(2,3,2,2)
              kkb_fbc(iv1+2*noi,iv1+2*noi)=kkb_fbc(iv1+2*noi,iv1+2*noi)
     &                                   + Ktmp(2,3,2,3)
                 enddo !k
                enddo

                do j=1,numelr(i2g)
                  do k=1,2
                  cf_coef=-EleInplane_Cq_fbc(in_fbc,j,k)
     &                  *inplane_Cq_fbc(in_fbc,k+2)

                  cf_coef2=cf_coef
     &            /(
     &             4.0
     &            *EleArea0_fbc(in_fbc,j)
     &             **(inplane_Cq_fbc(in_fbc,k+2)+2)
     &            )

                  iv0=nea_fbc(in_fbc,j,1)
                  iv1=nea_fbc(in_fbc,j,2)
                  iv2=nea_fbc(in_fbc,j,3)

                 x0=X_na_fbc(iv0,1)
                 y0=X_na_fbc(iv0,2)               
                 z0=X_na_fbc(iv0,3)
                 x1=X_na_fbc(iv1,1)
                 y1=X_na_fbc(iv1,2)                
                 z1=X_na_fbc(iv1,3)
                 x2=X_na_fbc(iv2,1)
                 y2=X_na_fbc(iv2,2)                 
                 z2=X_na_fbc(iv2,3)

                  call inplane_Cq_fbcForce(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef2
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)

              kkb_fbc(iv0+0*noi,iv0+0*noi)=kkb_fbc(iv0+0*noi,iv0+0*noi)
     &                                   + Ktmp(1,1,1,1)
              kkb_fbc(iv0+0*noi,iv0+1*noi)=kkb_fbc(iv0+0*noi,iv0+1*noi)
     &                                   + Ktmp(1,1,1,2)
              kkb_fbc(iv0+0*noi,iv0+2*noi)=kkb_fbc(iv0+0*noi,iv0+2*noi)
     &                                   + Ktmp(1,1,1,3)
              kkb_fbc(iv0+0*noi,iv1+0*noi)=kkb_fbc(iv0+0*noi,iv1+0*noi)
     &                                   + Ktmp(1,1,2,1)
              kkb_fbc(iv0+0*noi,iv1+1*noi)=kkb_fbc(iv0+0*noi,iv1+1*noi)
     &                                   + Ktmp(1,1,2,2)
              kkb_fbc(iv0+0*noi,iv1+2*noi)=kkb_fbc(iv0+0*noi,iv1+2*noi)
     &                                   + Ktmp(1,1,2,3)
              kkb_fbc(iv0+0*noi,iv2+0*noi)=kkb_fbc(iv0+0*noi,iv2+0*noi)
     &                                   + Ktmp(1,1,3,1)
              kkb_fbc(iv0+0*noi,iv2+1*noi)=kkb_fbc(iv0+0*noi,iv2+1*noi)
     &                                   + Ktmp(1,1,3,2)
              kkb_fbc(iv0+0*noi,iv2+2*noi)=kkb_fbc(iv0+0*noi,iv2+2*noi)
     &                                   + Ktmp(1,1,3,3)
              kkb_fbc(iv0+1*noi,iv0+0*noi)=kkb_fbc(iv0+1*noi,iv0+0*noi)
     &                                   + Ktmp(1,2,1,1)
              kkb_fbc(iv0+1*noi,iv0+1*noi)=kkb_fbc(iv0+1*noi,iv0+1*noi)
     &                                   + Ktmp(1,2,1,2)
              kkb_fbc(iv0+1*noi,iv0+2*noi)=kkb_fbc(iv0+1*noi,iv0+2*noi)
     &                                   + Ktmp(1,2,1,3)
              kkb_fbc(iv0+1*noi,iv1+0*noi)=kkb_fbc(iv0+1*noi,iv1+0*noi)
     &                                   + Ktmp(1,2,2,1)
              kkb_fbc(iv0+1*noi,iv1+1*noi)=kkb_fbc(iv0+1*noi,iv1+1*noi)
     &                                   + Ktmp(1,2,2,2)
              kkb_fbc(iv0+1*noi,iv1+2*noi)=kkb_fbc(iv0+1*noi,iv1+2*noi)
     &                                   + Ktmp(1,2,2,3)
              kkb_fbc(iv0+1*noi,iv2+0*noi)=kkb_fbc(iv0+1*noi,iv2+0*noi)
     &                                   + Ktmp(1,2,3,1)
              kkb_fbc(iv0+1*noi,iv2+1*noi)=kkb_fbc(iv0+1*noi,iv2+1*noi)
     &                                   + Ktmp(1,2,3,2)
              kkb_fbc(iv0+1*noi,iv2+2*noi)=kkb_fbc(iv0+1*noi,iv2+2*noi)
     &                                   + Ktmp(1,2,3,3)
              kkb_fbc(iv0+2*noi,iv0+0*noi)=kkb_fbc(iv0+2*noi,iv0+0*noi)
     &                                   + Ktmp(1,3,1,1)
              kkb_fbc(iv0+2*noi,iv0+1*noi)=kkb_fbc(iv0+2*noi,iv0+1*noi)
     &                                   + Ktmp(1,3,1,2)
              kkb_fbc(iv0+2*noi,iv0+2*noi)=kkb_fbc(iv0+2*noi,iv0+2*noi)
     &                                   + Ktmp(1,3,1,3)
              kkb_fbc(iv0+2*noi,iv1+0*noi)=kkb_fbc(iv0+2*noi,iv1+0*noi)
     &                                   + Ktmp(1,3,2,1)
              kkb_fbc(iv0+2*noi,iv1+1*noi)=kkb_fbc(iv0+2*noi,iv1+1*noi)
     &                                   + Ktmp(1,3,2,2)
              kkb_fbc(iv0+2*noi,iv1+2*noi)=kkb_fbc(iv0+2*noi,iv1+2*noi)
     &                                   + Ktmp(1,3,2,3)
              kkb_fbc(iv0+2*noi,iv2+0*noi)=kkb_fbc(iv0+2*noi,iv2+0*noi)
     &                                   + Ktmp(1,3,3,1)
              kkb_fbc(iv0+2*noi,iv2+1*noi)=kkb_fbc(iv0+2*noi,iv2+1*noi)
     &                                   + Ktmp(1,3,3,2)
              kkb_fbc(iv0+2*noi,iv2+2*noi)=kkb_fbc(iv0+2*noi,iv2+2*noi)
     &                                   + Ktmp(1,3,3,3)
              kkb_fbc(iv1+0*noi,iv0+0*noi)=kkb_fbc(iv1+0*noi,iv0+0*noi)
     &                                   + Ktmp(2,1,1,1)
              kkb_fbc(iv1+0*noi,iv0+1*noi)=kkb_fbc(iv1+0*noi,iv0+1*noi)
     &                                   + Ktmp(2,1,1,2)
              kkb_fbc(iv1+0*noi,iv0+2*noi)=kkb_fbc(iv1+0*noi,iv0+2*noi)
     &                                   + Ktmp(2,1,1,3)
              kkb_fbc(iv1+0*noi,iv1+0*noi)=kkb_fbc(iv1+0*noi,iv1+0*noi)
     &                                   + Ktmp(2,1,2,1)
              kkb_fbc(iv1+0*noi,iv1+1*noi)=kkb_fbc(iv1+0*noi,iv1+1*noi)
     &                                   + Ktmp(2,1,2,2)
              kkb_fbc(iv1+0*noi,iv1+2*noi)=kkb_fbc(iv1+0*noi,iv1+2*noi)
     &                                   + Ktmp(2,1,2,3)
              kkb_fbc(iv1+0*noi,iv2+0*noi)=kkb_fbc(iv1+0*noi,iv2+0*noi)
     &                                   + Ktmp(2,1,3,1)
              kkb_fbc(iv1+0*noi,iv2+1*noi)=kkb_fbc(iv1+0*noi,iv2+1*noi)
     &                                   + Ktmp(2,1,3,2)
              kkb_fbc(iv1+0*noi,iv2+2*noi)=kkb_fbc(iv1+0*noi,iv2+2*noi)
     &                                   + Ktmp(2,1,3,3)
              kkb_fbc(iv1+1*noi,iv0+0*noi)=kkb_fbc(iv1+1*noi,iv0+0*noi)
     &                                   + Ktmp(2,2,1,1)
              kkb_fbc(iv1+1*noi,iv0+1*noi)=kkb_fbc(iv1+1*noi,iv0+1*noi)
     &                                   + Ktmp(2,2,1,2)
              kkb_fbc(iv1+1*noi,iv0+2*noi)=kkb_fbc(iv1+1*noi,iv0+2*noi)
     &                                   + Ktmp(2,2,1,3)
              kkb_fbc(iv1+1*noi,iv1+0*noi)=kkb_fbc(iv1+1*noi,iv1+0*noi)
     &                                   + Ktmp(2,2,2,1)
              kkb_fbc(iv1+1*noi,iv1+1*noi)=kkb_fbc(iv1+1*noi,iv1+1*noi)
     &                                   + Ktmp(2,2,2,2)
              kkb_fbc(iv1+1*noi,iv1+2*noi)=kkb_fbc(iv1+1*noi,iv1+2*noi)
     &                                   + Ktmp(2,2,2,3)
              kkb_fbc(iv1+1*noi,iv2+0*noi)=kkb_fbc(iv1+1*noi,iv2+0*noi)
     &                                   + Ktmp(2,2,3,1)
              kkb_fbc(iv1+1*noi,iv2+1*noi)=kkb_fbc(iv1+1*noi,iv2+1*noi)
     &                                   + Ktmp(2,2,3,2)
              kkb_fbc(iv1+1*noi,iv2+2*noi)=kkb_fbc(iv1+1*noi,iv2+2*noi)
     &                                   + Ktmp(2,2,3,3)
              kkb_fbc(iv1+2*noi,iv0+0*noi)=kkb_fbc(iv1+2*noi,iv0+0*noi)
     &                                   + Ktmp(2,3,1,1)
              kkb_fbc(iv1+2*noi,iv0+1*noi)=kkb_fbc(iv1+2*noi,iv0+1*noi)
     &                                   + Ktmp(2,3,1,2)
              kkb_fbc(iv1+2*noi,iv0+2*noi)=kkb_fbc(iv1+2*noi,iv0+2*noi)
     &                                   + Ktmp(2,3,1,3)
              kkb_fbc(iv1+2*noi,iv1+0*noi)=kkb_fbc(iv1+2*noi,iv1+0*noi)
     &                                   + Ktmp(2,3,2,1)
              kkb_fbc(iv1+2*noi,iv1+1*noi)=kkb_fbc(iv1+2*noi,iv1+1*noi)
     &                                   + Ktmp(2,3,2,2)
              kkb_fbc(iv1+2*noi,iv1+2*noi)=kkb_fbc(iv1+2*noi,iv1+2*noi)
     &                                   + Ktmp(2,3,2,3)
              kkb_fbc(iv1+2*noi,iv2+0*noi)=kkb_fbc(iv1+2*noi,iv2+0*noi)
     &                                   + Ktmp(2,3,3,1)
              kkb_fbc(iv1+2*noi,iv2+1*noi)=kkb_fbc(iv1+2*noi,iv2+1*noi)
     &                                   + Ktmp(2,3,3,2)
              kkb_fbc(iv1+2*noi,iv2+2*noi)=kkb_fbc(iv1+2*noi,iv2+2*noi)
     &                                   + Ktmp(2,3,3,3)
              kkb_fbc(iv2+0*noi,iv0+0*noi)=kkb_fbc(iv2+0*noi,iv0+0*noi)
     &                                   + Ktmp(3,1,1,1)
              kkb_fbc(iv2+0*noi,iv0+1*noi)=kkb_fbc(iv2+0*noi,iv0+1*noi)
     &                                   + Ktmp(3,1,1,2)
              kkb_fbc(iv2+0*noi,iv0+2*noi)=kkb_fbc(iv2+0*noi,iv0+2*noi)
     &                                   + Ktmp(3,1,1,3)
              kkb_fbc(iv2+0*noi,iv1+0*noi)=kkb_fbc(iv2+0*noi,iv1+0*noi)
     &                                   + Ktmp(3,1,2,1)
              kkb_fbc(iv2+0*noi,iv1+1*noi)=kkb_fbc(iv2+0*noi,iv1+1*noi)
     &                                   + Ktmp(3,1,2,2)
              kkb_fbc(iv2+0*noi,iv1+2*noi)=kkb_fbc(iv2+0*noi,iv1+2*noi)
     &                                   + Ktmp(3,1,2,3)
              kkb_fbc(iv2+0*noi,iv2+0*noi)=kkb_fbc(iv2+0*noi,iv2+0*noi)
     &                                   + Ktmp(3,1,3,1)
              kkb_fbc(iv2+0*noi,iv2+1*noi)=kkb_fbc(iv2+0*noi,iv2+1*noi)
     &                                   + Ktmp(3,1,3,2)
              kkb_fbc(iv2+0*noi,iv2+2*noi)=kkb_fbc(iv2+0*noi,iv2+2*noi)
     &                                   + Ktmp(3,1,3,3)
              kkb_fbc(iv2+1*noi,iv0+0*noi)=kkb_fbc(iv2+1*noi,iv0+0*noi)
     &                                   + Ktmp(3,2,1,1)
              kkb_fbc(iv2+1*noi,iv0+1*noi)=kkb_fbc(iv2+1*noi,iv0+1*noi)
     &                                   + Ktmp(3,2,1,2)
              kkb_fbc(iv2+1*noi,iv0+2*noi)=kkb_fbc(iv2+1*noi,iv0+2*noi)
     &                                   + Ktmp(3,2,1,3)
              kkb_fbc(iv2+1*noi,iv1+0*noi)=kkb_fbc(iv2+1*noi,iv1+0*noi)
     &                                   + Ktmp(3,2,2,1)
              kkb_fbc(iv2+1*noi,iv1+1*noi)=kkb_fbc(iv2+1*noi,iv1+1*noi)
     &                                   + Ktmp(3,2,2,2)
              kkb_fbc(iv2+1*noi,iv1+2*noi)=kkb_fbc(iv2+1*noi,iv1+2*noi)
     &                                   + Ktmp(3,2,2,3)
              kkb_fbc(iv2+1*noi,iv2+0*noi)=kkb_fbc(iv2+1*noi,iv2+0*noi)
     &                                   + Ktmp(3,2,3,1)
              kkb_fbc(iv2+1*noi,iv2+1*noi)=kkb_fbc(iv2+1*noi,iv2+1*noi)
     &                                   + Ktmp(3,2,3,2)
              kkb_fbc(iv2+1*noi,iv2+2*noi)=kkb_fbc(iv2+1*noi,iv2+2*noi)
     &                                   + Ktmp(3,2,3,3)
              kkb_fbc(iv2+2*noi,iv0+0*noi)=kkb_fbc(iv2+2*noi,iv0+0*noi)
     &                                   + Ktmp(3,3,1,1)
              kkb_fbc(iv2+2*noi,iv0+1*noi)=kkb_fbc(iv2+2*noi,iv0+1*noi)
     &                                   + Ktmp(3,3,1,2)
              kkb_fbc(iv2+2*noi,iv0+2*noi)=kkb_fbc(iv2+2*noi,iv0+2*noi)
     &                                   + Ktmp(3,3,1,3)
              kkb_fbc(iv2+2*noi,iv1+0*noi)=kkb_fbc(iv2+2*noi,iv1+0*noi)
     &                                   + Ktmp(3,3,2,1)
              kkb_fbc(iv2+2*noi,iv1+1*noi)=kkb_fbc(iv2+2*noi,iv1+1*noi)
     &                                   + Ktmp(3,3,2,2)
              kkb_fbc(iv2+2*noi,iv1+2*noi)=kkb_fbc(iv2+2*noi,iv1+2*noi)
     &                                   + Ktmp(3,3,2,3)
              kkb_fbc(iv2+2*noi,iv2+0*noi)=kkb_fbc(iv2+2*noi,iv2+0*noi)
     &                                   + Ktmp(3,3,3,1)
              kkb_fbc(iv2+2*noi,iv2+1*noi)=kkb_fbc(iv2+2*noi,iv2+1*noi)
     &                                   + Ktmp(3,3,3,2)
              kkb_fbc(iv2+2*noi,iv2+2*noi)=kkb_fbc(iv2+2*noi,iv2+2*noi)
     &                                   + Ktmp(3,3,3,3)
                enddo
                enddo     
              else  !inplane_type_fbc(in_fbc) .ne. 1

                do j=1,numelr(i2g)
                  iv0=nea_fbc(in_fbc,j,1)
                  iv1=nea_fbc(in_fbc,j,2)
                  iv2=nea_fbc(in_fbc,j,3)

                 x0=X_na_fbc(iv0,1)
                 y0=X_na_fbc(iv0,2)               
                 z0=X_na_fbc(iv0,3)
                 x1=X_na_fbc(iv1,1)
                 y1=X_na_fbc(iv1,2)                
                 z1=X_na_fbc(iv1,3)
                 x2=X_na_fbc(iv2,1)
                 y2=X_na_fbc(iv2,2)                 
                 z2=X_na_fbc(iv2,3)

                  cf_coef2=kappa_inplane_fbc(in_fbc,1)

                  tmpcoord(1)=EleEdge_fbc(in_fbc,j,1)**2
     &                       -EleEdge0_fbc(in_fbc,j,1)**2
                  tmpcoord(2)=EleEdge_fbc(in_fbc,j,2)**2
     &                       -EleEdge0_fbc(in_fbc,j,2)**2
                  tmpcoord(3)=EleEdge_fbc(in_fbc,j,3)**2
     &                       -EleEdge0_fbc(in_fbc,j,3)**2

                     call Inplane_LineDelingette(Forcetmpfbc(1:3,1:3)
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,cf_coef2
     &                            ,tmpcoord(1:3)
     &                            ,EleEdge_fbc(in_fbc,j,1:3)
     &                            -EleEdge0_fbc(in_fbc,j,1:3)
     &                            ,EleEdge0_fbc(in_fbc,j,1:3)
     &                            ,EleEdge_fbc(in_fbc,j,1:3)
     &                            ,InplaneLinemode_fbc(in_fbc,1)
     &                            ,EleInplaneParaK_fbc(in_fbc,j,1:3)
     &                            ,EleInplaneParaC_fbc(in_fbc,j,1:3)
     &                            ,Ktmp(1:3,1:3,1:3,1:3),KtmpFlag)

                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)

              kkb_fbc(iv0+0*noi,iv0+0*noi)=kkb_fbc(iv0+0*noi,iv0+0*noi)
     &                                   + Ktmp(1,1,1,1)
              kkb_fbc(iv0+0*noi,iv0+1*noi)=kkb_fbc(iv0+0*noi,iv0+1*noi)
     &                                   + Ktmp(1,1,1,2)
              kkb_fbc(iv0+0*noi,iv0+2*noi)=kkb_fbc(iv0+0*noi,iv0+2*noi)
     &                                   + Ktmp(1,1,1,3)
              kkb_fbc(iv0+0*noi,iv1+0*noi)=kkb_fbc(iv0+0*noi,iv1+0*noi)
     &                                   + Ktmp(1,1,2,1)
              kkb_fbc(iv0+0*noi,iv1+1*noi)=kkb_fbc(iv0+0*noi,iv1+1*noi)
     &                                   + Ktmp(1,1,2,2)
              kkb_fbc(iv0+0*noi,iv1+2*noi)=kkb_fbc(iv0+0*noi,iv1+2*noi)
     &                                   + Ktmp(1,1,2,3)
              kkb_fbc(iv0+0*noi,iv2+0*noi)=kkb_fbc(iv0+0*noi,iv2+0*noi)
     &                                   + Ktmp(1,1,3,1)
              kkb_fbc(iv0+0*noi,iv2+1*noi)=kkb_fbc(iv0+0*noi,iv2+1*noi)
     &                                   + Ktmp(1,1,3,2)
              kkb_fbc(iv0+0*noi,iv2+2*noi)=kkb_fbc(iv0+0*noi,iv2+2*noi)
     &                                   + Ktmp(1,1,3,3)
              kkb_fbc(iv0+1*noi,iv0+0*noi)=kkb_fbc(iv0+1*noi,iv0+0*noi)
     &                                   + Ktmp(1,2,1,1)
              kkb_fbc(iv0+1*noi,iv0+1*noi)=kkb_fbc(iv0+1*noi,iv0+1*noi)
     &                                   + Ktmp(1,2,1,2)
              kkb_fbc(iv0+1*noi,iv0+2*noi)=kkb_fbc(iv0+1*noi,iv0+2*noi)
     &                                   + Ktmp(1,2,1,3)
              kkb_fbc(iv0+1*noi,iv1+0*noi)=kkb_fbc(iv0+1*noi,iv1+0*noi)
     &                                   + Ktmp(1,2,2,1)
              kkb_fbc(iv0+1*noi,iv1+1*noi)=kkb_fbc(iv0+1*noi,iv1+1*noi)
     &                                   + Ktmp(1,2,2,2)
              kkb_fbc(iv0+1*noi,iv1+2*noi)=kkb_fbc(iv0+1*noi,iv1+2*noi)
     &                                   + Ktmp(1,2,2,3)
              kkb_fbc(iv0+1*noi,iv2+0*noi)=kkb_fbc(iv0+1*noi,iv2+0*noi)
     &                                   + Ktmp(1,2,3,1)
              kkb_fbc(iv0+1*noi,iv2+1*noi)=kkb_fbc(iv0+1*noi,iv2+1*noi)
     &                                   + Ktmp(1,2,3,2)
              kkb_fbc(iv0+1*noi,iv2+2*noi)=kkb_fbc(iv0+1*noi,iv2+2*noi)
     &                                   + Ktmp(1,2,3,3)
              kkb_fbc(iv0+2*noi,iv0+0*noi)=kkb_fbc(iv0+2*noi,iv0+0*noi)
     &                                   + Ktmp(1,3,1,1)
              kkb_fbc(iv0+2*noi,iv0+1*noi)=kkb_fbc(iv0+2*noi,iv0+1*noi)
     &                                   + Ktmp(1,3,1,2)
              kkb_fbc(iv0+2*noi,iv0+2*noi)=kkb_fbc(iv0+2*noi,iv0+2*noi)
     &                                   + Ktmp(1,3,1,3)
              kkb_fbc(iv0+2*noi,iv1+0*noi)=kkb_fbc(iv0+2*noi,iv1+0*noi)
     &                                   + Ktmp(1,3,2,1)
              kkb_fbc(iv0+2*noi,iv1+1*noi)=kkb_fbc(iv0+2*noi,iv1+1*noi)
     &                                   + Ktmp(1,3,2,2)
              kkb_fbc(iv0+2*noi,iv1+2*noi)=kkb_fbc(iv0+2*noi,iv1+2*noi)
     &                                   + Ktmp(1,3,2,3)
              kkb_fbc(iv0+2*noi,iv2+0*noi)=kkb_fbc(iv0+2*noi,iv2+0*noi)
     &                                   + Ktmp(1,3,3,1)
              kkb_fbc(iv0+2*noi,iv2+1*noi)=kkb_fbc(iv0+2*noi,iv2+1*noi)
     &                                   + Ktmp(1,3,3,2)
              kkb_fbc(iv0+2*noi,iv2+2*noi)=kkb_fbc(iv0+2*noi,iv2+2*noi)
     &                                   + Ktmp(1,3,3,3)
              kkb_fbc(iv1+0*noi,iv0+0*noi)=kkb_fbc(iv1+0*noi,iv0+0*noi)
     &                                   + Ktmp(2,1,1,1)
              kkb_fbc(iv1+0*noi,iv0+1*noi)=kkb_fbc(iv1+0*noi,iv0+1*noi)
     &                                   + Ktmp(2,1,1,2)
              kkb_fbc(iv1+0*noi,iv0+2*noi)=kkb_fbc(iv1+0*noi,iv0+2*noi)
     &                                   + Ktmp(2,1,1,3)
              kkb_fbc(iv1+0*noi,iv1+0*noi)=kkb_fbc(iv1+0*noi,iv1+0*noi)
     &                                   + Ktmp(2,1,2,1)
              kkb_fbc(iv1+0*noi,iv1+1*noi)=kkb_fbc(iv1+0*noi,iv1+1*noi)
     &                                   + Ktmp(2,1,2,2)
              kkb_fbc(iv1+0*noi,iv1+2*noi)=kkb_fbc(iv1+0*noi,iv1+2*noi)
     &                                   + Ktmp(2,1,2,3)
              kkb_fbc(iv1+0*noi,iv2+0*noi)=kkb_fbc(iv1+0*noi,iv2+0*noi)
     &                                   + Ktmp(2,1,3,1)
              kkb_fbc(iv1+0*noi,iv2+1*noi)=kkb_fbc(iv1+0*noi,iv2+1*noi)
     &                                   + Ktmp(2,1,3,2)
              kkb_fbc(iv1+0*noi,iv2+2*noi)=kkb_fbc(iv1+0*noi,iv2+2*noi)
     &                                   + Ktmp(2,1,3,3)
              kkb_fbc(iv1+1*noi,iv0+0*noi)=kkb_fbc(iv1+1*noi,iv0+0*noi)
     &                                   + Ktmp(2,2,1,1)
              kkb_fbc(iv1+1*noi,iv0+1*noi)=kkb_fbc(iv1+1*noi,iv0+1*noi)
     &                                   + Ktmp(2,2,1,2)
              kkb_fbc(iv1+1*noi,iv0+2*noi)=kkb_fbc(iv1+1*noi,iv0+2*noi)
     &                                   + Ktmp(2,2,1,3)
              kkb_fbc(iv1+1*noi,iv1+0*noi)=kkb_fbc(iv1+1*noi,iv1+0*noi)
     &                                   + Ktmp(2,2,2,1)
              kkb_fbc(iv1+1*noi,iv1+1*noi)=kkb_fbc(iv1+1*noi,iv1+1*noi)
     &                                   + Ktmp(2,2,2,2)
              kkb_fbc(iv1+1*noi,iv1+2*noi)=kkb_fbc(iv1+1*noi,iv1+2*noi)
     &                                   + Ktmp(2,2,2,3)
              kkb_fbc(iv1+1*noi,iv2+0*noi)=kkb_fbc(iv1+1*noi,iv2+0*noi)
     &                                   + Ktmp(2,2,3,1)
              kkb_fbc(iv1+1*noi,iv2+1*noi)=kkb_fbc(iv1+1*noi,iv2+1*noi)
     &                                   + Ktmp(2,2,3,2)
              kkb_fbc(iv1+1*noi,iv2+2*noi)=kkb_fbc(iv1+1*noi,iv2+2*noi)
     &                                   + Ktmp(2,2,3,3)
              kkb_fbc(iv1+2*noi,iv0+0*noi)=kkb_fbc(iv1+2*noi,iv0+0*noi)
     &                                   + Ktmp(2,3,1,1)
              kkb_fbc(iv1+2*noi,iv0+1*noi)=kkb_fbc(iv1+2*noi,iv0+1*noi)
     &                                   + Ktmp(2,3,1,2)
              kkb_fbc(iv1+2*noi,iv0+2*noi)=kkb_fbc(iv1+2*noi,iv0+2*noi)
     &                                   + Ktmp(2,3,1,3)
              kkb_fbc(iv1+2*noi,iv1+0*noi)=kkb_fbc(iv1+2*noi,iv1+0*noi)
     &                                   + Ktmp(2,3,2,1)
              kkb_fbc(iv1+2*noi,iv1+1*noi)=kkb_fbc(iv1+2*noi,iv1+1*noi)
     &                                   + Ktmp(2,3,2,2)
              kkb_fbc(iv1+2*noi,iv1+2*noi)=kkb_fbc(iv1+2*noi,iv1+2*noi)
     &                                   + Ktmp(2,3,2,3)
              kkb_fbc(iv1+2*noi,iv2+0*noi)=kkb_fbc(iv1+2*noi,iv2+0*noi)
     &                                   + Ktmp(2,3,3,1)
              kkb_fbc(iv1+2*noi,iv2+1*noi)=kkb_fbc(iv1+2*noi,iv2+1*noi)
     &                                   + Ktmp(2,3,3,2)
              kkb_fbc(iv1+2*noi,iv2+2*noi)=kkb_fbc(iv1+2*noi,iv2+2*noi)
     &                                   + Ktmp(2,3,3,3)
              kkb_fbc(iv2+0*noi,iv0+0*noi)=kkb_fbc(iv2+0*noi,iv0+0*noi)
     &                                   + Ktmp(3,1,1,1)
              kkb_fbc(iv2+0*noi,iv0+1*noi)=kkb_fbc(iv2+0*noi,iv0+1*noi)
     &                                   + Ktmp(3,1,1,2)
              kkb_fbc(iv2+0*noi,iv0+2*noi)=kkb_fbc(iv2+0*noi,iv0+2*noi)
     &                                   + Ktmp(3,1,1,3)
              kkb_fbc(iv2+0*noi,iv1+0*noi)=kkb_fbc(iv2+0*noi,iv1+0*noi)
     &                                   + Ktmp(3,1,2,1)
              kkb_fbc(iv2+0*noi,iv1+1*noi)=kkb_fbc(iv2+0*noi,iv1+1*noi)
     &                                   + Ktmp(3,1,2,2)
              kkb_fbc(iv2+0*noi,iv1+2*noi)=kkb_fbc(iv2+0*noi,iv1+2*noi)
     &                                   + Ktmp(3,1,2,3)
              kkb_fbc(iv2+0*noi,iv2+0*noi)=kkb_fbc(iv2+0*noi,iv2+0*noi)
     &                                   + Ktmp(3,1,3,1)
              kkb_fbc(iv2+0*noi,iv2+1*noi)=kkb_fbc(iv2+0*noi,iv2+1*noi)
     &                                   + Ktmp(3,1,3,2)
              kkb_fbc(iv2+0*noi,iv2+2*noi)=kkb_fbc(iv2+0*noi,iv2+2*noi)
     &                                   + Ktmp(3,1,3,3)
              kkb_fbc(iv2+1*noi,iv0+0*noi)=kkb_fbc(iv2+1*noi,iv0+0*noi)
     &                                   + Ktmp(3,2,1,1)
              kkb_fbc(iv2+1*noi,iv0+1*noi)=kkb_fbc(iv2+1*noi,iv0+1*noi)
     &                                   + Ktmp(3,2,1,2)
              kkb_fbc(iv2+1*noi,iv0+2*noi)=kkb_fbc(iv2+1*noi,iv0+2*noi)
     &                                   + Ktmp(3,2,1,3)
              kkb_fbc(iv2+1*noi,iv1+0*noi)=kkb_fbc(iv2+1*noi,iv1+0*noi)
     &                                   + Ktmp(3,2,2,1)
              kkb_fbc(iv2+1*noi,iv1+1*noi)=kkb_fbc(iv2+1*noi,iv1+1*noi)
     &                                   + Ktmp(3,2,2,2)
              kkb_fbc(iv2+1*noi,iv1+2*noi)=kkb_fbc(iv2+1*noi,iv1+2*noi)
     &                                   + Ktmp(3,2,2,3)
              kkb_fbc(iv2+1*noi,iv2+0*noi)=kkb_fbc(iv2+1*noi,iv2+0*noi)
     &                                   + Ktmp(3,2,3,1)
              kkb_fbc(iv2+1*noi,iv2+1*noi)=kkb_fbc(iv2+1*noi,iv2+1*noi)
     &                                   + Ktmp(3,2,3,2)
              kkb_fbc(iv2+1*noi,iv2+2*noi)=kkb_fbc(iv2+1*noi,iv2+2*noi)
     &                                   + Ktmp(3,2,3,3)
              kkb_fbc(iv2+2*noi,iv0+0*noi)=kkb_fbc(iv2+2*noi,iv0+0*noi)
     &                                   + Ktmp(3,3,1,1)
              kkb_fbc(iv2+2*noi,iv0+1*noi)=kkb_fbc(iv2+2*noi,iv0+1*noi)
     &                                   + Ktmp(3,3,1,2)
              kkb_fbc(iv2+2*noi,iv0+2*noi)=kkb_fbc(iv2+2*noi,iv0+2*noi)
     &                                   + Ktmp(3,3,1,3)
              kkb_fbc(iv2+2*noi,iv1+0*noi)=kkb_fbc(iv2+2*noi,iv1+0*noi)
     &                                   + Ktmp(3,3,2,1)
              kkb_fbc(iv2+2*noi,iv1+1*noi)=kkb_fbc(iv2+2*noi,iv1+1*noi)
     &                                   + Ktmp(3,3,2,2)
              kkb_fbc(iv2+2*noi,iv1+2*noi)=kkb_fbc(iv2+2*noi,iv1+2*noi)
     &                                   + Ktmp(3,3,2,3)
              kkb_fbc(iv2+2*noi,iv2+0*noi)=kkb_fbc(iv2+2*noi,iv2+0*noi)
     &                                   + Ktmp(3,3,3,1)
              kkb_fbc(iv2+2*noi,iv2+1*noi)=kkb_fbc(iv2+2*noi,iv2+1*noi)
     &                                   + Ktmp(3,3,3,2)
              kkb_fbc(iv2+2*noi,iv2+2*noi)=kkb_fbc(iv2+2*noi,iv2+2*noi)
     &                                   + Ktmp(3,3,3,3)
              enddo
               endif
            endif           
            if(Bending_flag_fbc(in_fbc)) then
              cf_coef=kappa_Bend_fbc(in_fbc)
     &                *KBT_fbc(in_fbc)
              do j=1,numeFacePair(i2)
                  ie1=facepairEle_fbc(in_fbc,j,1)
                  ie2=facepairEle_fbc(in_fbc,j,2) 
                  tmpcoord(1:3) =EleNormal_fbc(in_fbc,ie1,1:3) 
     &                          -EleNormal_fbc(in_fbc,ie2,1:3)
                  tmpcoord2(1:3)=EleCenter_fbc(in_fbc,ie1,1:3) 
     &                          -EleCenter_fbc(in_fbc,ie2,1:3)
                  axtmp_fbc=dot_product(tmpcoord(1:3),tmpcoord2(1:3))
                  if(axtmp_fbc>0) then
	                    sinsign=1.0
                  else
	                    sinsign=-1.0
                  endif 
                  iv0=facepairNode_fbc(in_fbc,j,1)
                  iv1=facepairNode_fbc(in_fbc,j,2)
                  iv2=facepairNode_fbc(in_fbc,j,3)
                  iv3=facepairNode_fbc(in_fbc,j,4)

                 x0=X_na_fbc(iv0,1)
                 y0=X_na_fbc(iv0,2)               
                 z0=X_na_fbc(iv0,3)
                 x1=X_na_fbc(iv1,1)
                 y1=X_na_fbc(iv1,2)                
                 z1=X_na_fbc(iv1,3)
                 x2=X_na_fbc(iv2,1)
                 y2=X_na_fbc(iv2,2)                 
                 z2=X_na_fbc(iv2,3)
                 x3=X_na_fbc(iv3,1)
                 y3=X_na_fbc(iv3,2)                 
                 z3=X_na_fbc(iv3,3)


                 costet0=cos(facepairtet0_fbc(in_fbc,j))
                 sintet0=sin(facepairtet0_fbc(in_fbc,j))

                 call Bending_ForceNEW(Forcetmpfbc(1:4,1:3)
     &                            ,costet0,sintet0,sinsign
     &                            ,x0,y0,z0
     &                            ,x1,y1,z1
     &                            ,x2,y2,z2
     &                            ,x3,y3,z3
     &                            ,cf_coef
     &                            ,Ktmp(1:4,1:3,1:4,1:3),KtmpFlag)
                 fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)+Forcetmpfbc(1,1)
                 fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)+Forcetmpfbc(1,2)
                 fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)+Forcetmpfbc(1,3)
                 fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)+Forcetmpfbc(2,1)
                 fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)+Forcetmpfbc(2,2)
                 fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)+Forcetmpfbc(2,3)
                 fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)+Forcetmpfbc(3,1)
                 fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)+Forcetmpfbc(3,2)
                 fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)+Forcetmpfbc(3,3)
                 fibm1_fbc(i,iv3)=fibm1_fbc(i,iv3)+Forcetmpfbc(4,1)
                 fibm2_fbc(i,iv3)=fibm2_fbc(i,iv3)+Forcetmpfbc(4,2)
                 fibm3_fbc(i,iv3)=fibm3_fbc(i,iv3)+Forcetmpfbc(4,3)

              kkb_fbc(iv0+0*noi,iv0+0*noi)=kkb_fbc(iv0+0*noi,iv0+0*noi)
     &                                   + Ktmp(1,1,1,1)
              kkb_fbc(iv0+0*noi,iv0+1*noi)=kkb_fbc(iv0+0*noi,iv0+1*noi)
     &                                   + Ktmp(1,1,1,2)
              kkb_fbc(iv0+0*noi,iv0+2*noi)=kkb_fbc(iv0+0*noi,iv0+2*noi)
     &                                   + Ktmp(1,1,1,3)
              kkb_fbc(iv0+0*noi,iv1+0*noi)=kkb_fbc(iv0+0*noi,iv1+0*noi)
     &                                   + Ktmp(1,1,2,1)
              kkb_fbc(iv0+0*noi,iv1+1*noi)=kkb_fbc(iv0+0*noi,iv1+1*noi)
     &                                   + Ktmp(1,1,2,2)
              kkb_fbc(iv0+0*noi,iv1+2*noi)=kkb_fbc(iv0+0*noi,iv1+2*noi)
     &                                   + Ktmp(1,1,2,3)
              kkb_fbc(iv0+0*noi,iv2+0*noi)=kkb_fbc(iv0+0*noi,iv2+0*noi)
     &                                   + Ktmp(1,1,3,1)
              kkb_fbc(iv0+0*noi,iv2+1*noi)=kkb_fbc(iv0+0*noi,iv2+1*noi)
     &                                   + Ktmp(1,1,3,2)
              kkb_fbc(iv0+0*noi,iv2+2*noi)=kkb_fbc(iv0+0*noi,iv2+2*noi)
     &                                   + Ktmp(1,1,3,3)
              kkb_fbc(iv0+0*noi,iv3+0*noi)=kkb_fbc(iv0+0*noi,iv3+0*noi)
     &                                   + Ktmp(1,1,4,1)
              kkb_fbc(iv0+0*noi,iv3+1*noi)=kkb_fbc(iv0+0*noi,iv3+1*noi)
     &                                   + Ktmp(1,1,4,2)
              kkb_fbc(iv0+0*noi,iv3+2*noi)=kkb_fbc(iv0+0*noi,iv3+2*noi)
     &                                   + Ktmp(1,1,4,3)
              kkb_fbc(iv0+1*noi,iv0+0*noi)=kkb_fbc(iv0+1*noi,iv0+0*noi)
     &                                   + Ktmp(1,2,1,1)
              kkb_fbc(iv0+1*noi,iv0+1*noi)=kkb_fbc(iv0+1*noi,iv0+1*noi)
     &                                   + Ktmp(1,2,1,2)
              kkb_fbc(iv0+1*noi,iv0+2*noi)=kkb_fbc(iv0+1*noi,iv0+2*noi)
     &                                   + Ktmp(1,2,1,3)
              kkb_fbc(iv0+1*noi,iv1+0*noi)=kkb_fbc(iv0+1*noi,iv1+0*noi)
     &                                   + Ktmp(1,2,2,1)
              kkb_fbc(iv0+1*noi,iv1+1*noi)=kkb_fbc(iv0+1*noi,iv1+1*noi)
     &                                   + Ktmp(1,2,2,2)
              kkb_fbc(iv0+1*noi,iv1+2*noi)=kkb_fbc(iv0+1*noi,iv1+2*noi)
     &                                   + Ktmp(1,2,2,3)
              kkb_fbc(iv0+1*noi,iv2+0*noi)=kkb_fbc(iv0+1*noi,iv2+0*noi)
     &                                   + Ktmp(1,2,3,1)
              kkb_fbc(iv0+1*noi,iv2+1*noi)=kkb_fbc(iv0+1*noi,iv2+1*noi)
     &                                   + Ktmp(1,2,3,2)
              kkb_fbc(iv0+1*noi,iv2+2*noi)=kkb_fbc(iv0+1*noi,iv2+2*noi)
     &                                   + Ktmp(1,2,3,3)
              kkb_fbc(iv0+1*noi,iv3+0*noi)=kkb_fbc(iv0+1*noi,iv3+0*noi)
     &                                   + Ktmp(1,2,4,1)
              kkb_fbc(iv0+1*noi,iv3+1*noi)=kkb_fbc(iv0+1*noi,iv3+1*noi)
     &                                   + Ktmp(1,2,4,2)
              kkb_fbc(iv0+1*noi,iv3+2*noi)=kkb_fbc(iv0+1*noi,iv3+2*noi)
     &                                   + Ktmp(1,2,4,3)
              kkb_fbc(iv0+2*noi,iv0+0*noi)=kkb_fbc(iv0+2*noi,iv0+0*noi)
     &                                   + Ktmp(1,3,1,1)
              kkb_fbc(iv0+2*noi,iv0+1*noi)=kkb_fbc(iv0+2*noi,iv0+1*noi)
     &                                   + Ktmp(1,3,1,2)
              kkb_fbc(iv0+2*noi,iv0+2*noi)=kkb_fbc(iv0+2*noi,iv0+2*noi)
     &                                   + Ktmp(1,3,1,3)
              kkb_fbc(iv0+2*noi,iv1+0*noi)=kkb_fbc(iv0+2*noi,iv1+0*noi)
     &                                   + Ktmp(1,3,2,1)
              kkb_fbc(iv0+2*noi,iv1+1*noi)=kkb_fbc(iv0+2*noi,iv1+1*noi)
     &                                   + Ktmp(1,3,2,2)
              kkb_fbc(iv0+2*noi,iv1+2*noi)=kkb_fbc(iv0+2*noi,iv1+2*noi)
     &                                   + Ktmp(1,3,2,3)
              kkb_fbc(iv0+2*noi,iv2+0*noi)=kkb_fbc(iv0+2*noi,iv2+0*noi)
     &                                   + Ktmp(1,3,3,1)
              kkb_fbc(iv0+2*noi,iv2+1*noi)=kkb_fbc(iv0+2*noi,iv2+1*noi)
     &                                   + Ktmp(1,3,3,2)
              kkb_fbc(iv0+2*noi,iv2+2*noi)=kkb_fbc(iv0+2*noi,iv2+2*noi)
     &                                   + Ktmp(1,3,3,3)
              kkb_fbc(iv0+2*noi,iv3+0*noi)=kkb_fbc(iv0+2*noi,iv3+0*noi)
     &                                   + Ktmp(1,3,4,1)
              kkb_fbc(iv0+2*noi,iv3+1*noi)=kkb_fbc(iv0+2*noi,iv3+1*noi)
     &                                   + Ktmp(1,3,4,2)
              kkb_fbc(iv0+2*noi,iv3+2*noi)=kkb_fbc(iv0+2*noi,iv3+2*noi)
     &                                   + Ktmp(1,3,4,3)
              kkb_fbc(iv1+0*noi,iv0+0*noi)=kkb_fbc(iv1+0*noi,iv0+0*noi)
     &                                   + Ktmp(2,1,1,1)
              kkb_fbc(iv1+0*noi,iv0+1*noi)=kkb_fbc(iv1+0*noi,iv0+1*noi)
     &                                   + Ktmp(2,1,1,2)
              kkb_fbc(iv1+0*noi,iv0+2*noi)=kkb_fbc(iv1+0*noi,iv0+2*noi)
     &                                   + Ktmp(2,1,1,3)
              kkb_fbc(iv1+0*noi,iv1+0*noi)=kkb_fbc(iv1+0*noi,iv1+0*noi)
     &                                   + Ktmp(2,1,2,1)
              kkb_fbc(iv1+0*noi,iv1+1*noi)=kkb_fbc(iv1+0*noi,iv1+1*noi)
     &                                   + Ktmp(2,1,2,2)
              kkb_fbc(iv1+0*noi,iv1+2*noi)=kkb_fbc(iv1+0*noi,iv1+2*noi)
     &                                   + Ktmp(2,1,2,3)
              kkb_fbc(iv1+0*noi,iv2+0*noi)=kkb_fbc(iv1+0*noi,iv2+0*noi)
     &                                   + Ktmp(2,1,3,1)
              kkb_fbc(iv1+0*noi,iv2+1*noi)=kkb_fbc(iv1+0*noi,iv2+1*noi)
     &                                   + Ktmp(2,1,3,2)
              kkb_fbc(iv1+0*noi,iv2+2*noi)=kkb_fbc(iv1+0*noi,iv2+2*noi)
     &                                   + Ktmp(2,1,3,3)
              kkb_fbc(iv1+0*noi,iv3+0*noi)=kkb_fbc(iv1+0*noi,iv3+0*noi)
     &                                   + Ktmp(2,1,4,1)
              kkb_fbc(iv1+0*noi,iv3+1*noi)=kkb_fbc(iv1+0*noi,iv3+1*noi)
     &                                   + Ktmp(2,1,4,2)
              kkb_fbc(iv1+0*noi,iv3+2*noi)=kkb_fbc(iv1+0*noi,iv3+2*noi)
     &                                   + Ktmp(2,1,4,3)
              kkb_fbc(iv1+1*noi,iv0+0*noi)=kkb_fbc(iv1+1*noi,iv0+0*noi)
     &                                   + Ktmp(2,2,1,1)
              kkb_fbc(iv1+1*noi,iv0+1*noi)=kkb_fbc(iv1+1*noi,iv0+1*noi)
     &                                   + Ktmp(2,2,1,2)
              kkb_fbc(iv1+1*noi,iv0+2*noi)=kkb_fbc(iv1+1*noi,iv0+2*noi)
     &                                   + Ktmp(2,2,1,3)
              kkb_fbc(iv1+1*noi,iv1+0*noi)=kkb_fbc(iv1+1*noi,iv1+0*noi)
     &                                   + Ktmp(2,2,2,1)
              kkb_fbc(iv1+1*noi,iv1+1*noi)=kkb_fbc(iv1+1*noi,iv1+1*noi)
     &                                   + Ktmp(2,2,2,2)
              kkb_fbc(iv1+1*noi,iv1+2*noi)=kkb_fbc(iv1+1*noi,iv1+2*noi)
     &                                   + Ktmp(2,2,2,3)
              kkb_fbc(iv1+1*noi,iv2+0*noi)=kkb_fbc(iv1+1*noi,iv2+0*noi)
     &                                   + Ktmp(2,2,3,1)
              kkb_fbc(iv1+1*noi,iv2+1*noi)=kkb_fbc(iv1+1*noi,iv2+1*noi)
     &                                   + Ktmp(2,2,3,2)
              kkb_fbc(iv1+1*noi,iv2+2*noi)=kkb_fbc(iv1+1*noi,iv2+2*noi)
     &                                   + Ktmp(2,2,3,3)
              kkb_fbc(iv1+1*noi,iv3+0*noi)=kkb_fbc(iv1+1*noi,iv3+0*noi)
     &                                   + Ktmp(2,2,4,1)
              kkb_fbc(iv1+1*noi,iv3+1*noi)=kkb_fbc(iv1+1*noi,iv3+1*noi)
     &                                   + Ktmp(2,2,4,2)
              kkb_fbc(iv1+1*noi,iv3+2*noi)=kkb_fbc(iv1+1*noi,iv3+2*noi)
     &                                   + Ktmp(2,2,4,3)
              kkb_fbc(iv1+2*noi,iv0+0*noi)=kkb_fbc(iv1+2*noi,iv0+0*noi)
     &                                   + Ktmp(2,3,1,1)
              kkb_fbc(iv1+2*noi,iv0+1*noi)=kkb_fbc(iv1+2*noi,iv0+1*noi)
     &                                   + Ktmp(2,3,1,2)
              kkb_fbc(iv1+2*noi,iv0+2*noi)=kkb_fbc(iv1+2*noi,iv0+2*noi)
     &                                   + Ktmp(2,3,1,3)
              kkb_fbc(iv1+2*noi,iv1+0*noi)=kkb_fbc(iv1+2*noi,iv1+0*noi)
     &                                   + Ktmp(2,3,2,1)
              kkb_fbc(iv1+2*noi,iv1+1*noi)=kkb_fbc(iv1+2*noi,iv1+1*noi)
     &                                   + Ktmp(2,3,2,2)
              kkb_fbc(iv1+2*noi,iv1+2*noi)=kkb_fbc(iv1+2*noi,iv1+2*noi)
     &                                   + Ktmp(2,3,2,3)
              kkb_fbc(iv1+2*noi,iv2+0*noi)=kkb_fbc(iv1+2*noi,iv2+0*noi)
     &                                   + Ktmp(2,3,3,1)
              kkb_fbc(iv1+2*noi,iv2+1*noi)=kkb_fbc(iv1+2*noi,iv2+1*noi)
     &                                   + Ktmp(2,3,3,2)
              kkb_fbc(iv1+2*noi,iv2+2*noi)=kkb_fbc(iv1+2*noi,iv2+2*noi)
     &                                   + Ktmp(2,3,3,3)
              kkb_fbc(iv1+2*noi,iv3+0*noi)=kkb_fbc(iv1+2*noi,iv3+0*noi)
     &                                   + Ktmp(2,3,4,1)
              kkb_fbc(iv1+2*noi,iv3+1*noi)=kkb_fbc(iv1+2*noi,iv3+1*noi)
     &                                   + Ktmp(2,3,4,2)
              kkb_fbc(iv1+2*noi,iv3+2*noi)=kkb_fbc(iv1+2*noi,iv3+2*noi)
     &                                   + Ktmp(2,3,4,3)
              kkb_fbc(iv2+0*noi,iv0+0*noi)=kkb_fbc(iv2+0*noi,iv0+0*noi)
     &                                   + Ktmp(3,1,1,1)
              kkb_fbc(iv2+0*noi,iv0+1*noi)=kkb_fbc(iv2+0*noi,iv0+1*noi)
     &                                   + Ktmp(3,1,1,2)
              kkb_fbc(iv2+0*noi,iv0+2*noi)=kkb_fbc(iv2+0*noi,iv0+2*noi)
     &                                   + Ktmp(3,1,1,3)
              kkb_fbc(iv2+0*noi,iv1+0*noi)=kkb_fbc(iv2+0*noi,iv1+0*noi)
     &                                   + Ktmp(3,1,2,1)
              kkb_fbc(iv2+0*noi,iv1+1*noi)=kkb_fbc(iv2+0*noi,iv1+1*noi)
     &                                   + Ktmp(3,1,2,2)
              kkb_fbc(iv2+0*noi,iv1+2*noi)=kkb_fbc(iv2+0*noi,iv1+2*noi)
     &                                   + Ktmp(3,1,2,3)
              kkb_fbc(iv2+0*noi,iv2+0*noi)=kkb_fbc(iv2+0*noi,iv2+0*noi)
     &                                   + Ktmp(3,1,3,1)
              kkb_fbc(iv2+0*noi,iv2+1*noi)=kkb_fbc(iv2+0*noi,iv2+1*noi)
     &                                   + Ktmp(3,1,3,2)
              kkb_fbc(iv2+0*noi,iv2+2*noi)=kkb_fbc(iv2+0*noi,iv2+2*noi)
     &                                   + Ktmp(3,1,3,3)
              kkb_fbc(iv2+0*noi,iv3+0*noi)=kkb_fbc(iv2+0*noi,iv3+0*noi)
     &                                   + Ktmp(3,1,4,1)
              kkb_fbc(iv2+0*noi,iv3+1*noi)=kkb_fbc(iv2+0*noi,iv3+1*noi)
     &                                   + Ktmp(3,1,4,2)
              kkb_fbc(iv2+0*noi,iv3+2*noi)=kkb_fbc(iv2+0*noi,iv3+2*noi)
     &                                   + Ktmp(3,1,4,3)
              kkb_fbc(iv2+1*noi,iv0+0*noi)=kkb_fbc(iv2+1*noi,iv0+0*noi)
     &                                   + Ktmp(3,2,1,1)
              kkb_fbc(iv2+1*noi,iv0+1*noi)=kkb_fbc(iv2+1*noi,iv0+1*noi)
     &                                   + Ktmp(3,2,1,2)
              kkb_fbc(iv2+1*noi,iv0+2*noi)=kkb_fbc(iv2+1*noi,iv0+2*noi)
     &                                   + Ktmp(3,2,1,3)
              kkb_fbc(iv2+1*noi,iv1+0*noi)=kkb_fbc(iv2+1*noi,iv1+0*noi)
     &                                   + Ktmp(3,2,2,1)
              kkb_fbc(iv2+1*noi,iv1+1*noi)=kkb_fbc(iv2+1*noi,iv1+1*noi)
     &                                   + Ktmp(3,2,2,2)
              kkb_fbc(iv2+1*noi,iv1+2*noi)=kkb_fbc(iv2+1*noi,iv1+2*noi)
     &                                   + Ktmp(3,2,2,3)
              kkb_fbc(iv2+1*noi,iv2+0*noi)=kkb_fbc(iv2+1*noi,iv2+0*noi)
     &                                   + Ktmp(3,2,3,1)
              kkb_fbc(iv2+1*noi,iv2+1*noi)=kkb_fbc(iv2+1*noi,iv2+1*noi)
     &                                   + Ktmp(3,2,3,2)
              kkb_fbc(iv2+1*noi,iv2+2*noi)=kkb_fbc(iv2+1*noi,iv2+2*noi)
     &                                   + Ktmp(3,2,3,3)
              kkb_fbc(iv2+1*noi,iv3+0*noi)=kkb_fbc(iv2+1*noi,iv3+0*noi)
     &                                   + Ktmp(3,2,4,1)
              kkb_fbc(iv2+1*noi,iv3+1*noi)=kkb_fbc(iv2+1*noi,iv3+1*noi)
     &                                   + Ktmp(3,2,4,2)
              kkb_fbc(iv2+1*noi,iv3+2*noi)=kkb_fbc(iv2+1*noi,iv3+2*noi)
     &                                   + Ktmp(3,2,4,3)
              kkb_fbc(iv2+2*noi,iv0+0*noi)=kkb_fbc(iv2+2*noi,iv0+0*noi)
     &                                   + Ktmp(3,3,1,1)
              kkb_fbc(iv2+2*noi,iv0+1*noi)=kkb_fbc(iv2+2*noi,iv0+1*noi)
     &                                   + Ktmp(3,3,1,2)
              kkb_fbc(iv2+2*noi,iv0+2*noi)=kkb_fbc(iv2+2*noi,iv0+2*noi)
     &                                   + Ktmp(3,3,1,3)
              kkb_fbc(iv2+2*noi,iv1+0*noi)=kkb_fbc(iv2+2*noi,iv1+0*noi)
     &                                   + Ktmp(3,3,2,1)
              kkb_fbc(iv2+2*noi,iv1+1*noi)=kkb_fbc(iv2+2*noi,iv1+1*noi)
     &                                   + Ktmp(3,3,2,2)
              kkb_fbc(iv2+2*noi,iv1+2*noi)=kkb_fbc(iv2+2*noi,iv1+2*noi)
     &                                   + Ktmp(3,3,2,3)
              kkb_fbc(iv2+2*noi,iv2+0*noi)=kkb_fbc(iv2+2*noi,iv2+0*noi)
     &                                   + Ktmp(3,3,3,1)
              kkb_fbc(iv2+2*noi,iv2+1*noi)=kkb_fbc(iv2+2*noi,iv2+1*noi)
     &                                   + Ktmp(3,3,3,2)
              kkb_fbc(iv2+2*noi,iv2+2*noi)=kkb_fbc(iv2+2*noi,iv2+2*noi)
     &                                   + Ktmp(3,3,3,3)
              kkb_fbc(iv2+2*noi,iv3+0*noi)=kkb_fbc(iv2+2*noi,iv3+0*noi)
     &                                   + Ktmp(3,3,4,1)
              kkb_fbc(iv2+2*noi,iv3+1*noi)=kkb_fbc(iv2+2*noi,iv3+1*noi)
     &                                   + Ktmp(3,3,4,2)
              kkb_fbc(iv2+2*noi,iv3+2*noi)=kkb_fbc(iv2+2*noi,iv3+2*noi)
     &                                   + Ktmp(3,3,4,3)
              kkb_fbc(iv3+0*noi,iv0+0*noi)=kkb_fbc(iv3+0*noi,iv0+0*noi)
     &                                   + Ktmp(4,1,1,1)
              kkb_fbc(iv3+0*noi,iv0+1*noi)=kkb_fbc(iv3+0*noi,iv0+1*noi)
     &                                   + Ktmp(4,1,1,2)
              kkb_fbc(iv3+0*noi,iv0+2*noi)=kkb_fbc(iv3+0*noi,iv0+2*noi)
     &                                   + Ktmp(4,1,1,3)
              kkb_fbc(iv3+0*noi,iv1+0*noi)=kkb_fbc(iv3+0*noi,iv1+0*noi)
     &                                   + Ktmp(4,1,2,1)
              kkb_fbc(iv3+0*noi,iv1+1*noi)=kkb_fbc(iv3+0*noi,iv1+1*noi)
     &                                   + Ktmp(4,1,2,2)
              kkb_fbc(iv3+0*noi,iv1+2*noi)=kkb_fbc(iv3+0*noi,iv1+2*noi)
     &                                   + Ktmp(4,1,2,3)
              kkb_fbc(iv3+0*noi,iv2+0*noi)=kkb_fbc(iv3+0*noi,iv2+0*noi)
     &                                   + Ktmp(4,1,3,1)
              kkb_fbc(iv3+0*noi,iv2+1*noi)=kkb_fbc(iv3+0*noi,iv2+1*noi)
     &                                   + Ktmp(4,1,3,2)
              kkb_fbc(iv3+0*noi,iv2+2*noi)=kkb_fbc(iv3+0*noi,iv2+2*noi)
     &                                   + Ktmp(4,1,3,3)
              kkb_fbc(iv3+0*noi,iv3+0*noi)=kkb_fbc(iv3+0*noi,iv3+0*noi)
     &                                   + Ktmp(4,1,4,1)
              kkb_fbc(iv3+0*noi,iv3+1*noi)=kkb_fbc(iv3+0*noi,iv3+1*noi)
     &                                   + Ktmp(4,1,4,2)
              kkb_fbc(iv3+0*noi,iv3+2*noi)=kkb_fbc(iv3+0*noi,iv3+2*noi)
     &                                   + Ktmp(4,1,4,3)
              kkb_fbc(iv3+1*noi,iv0+0*noi)=kkb_fbc(iv3+1*noi,iv0+0*noi)
     &                                   + Ktmp(4,2,1,1)
              kkb_fbc(iv3+1*noi,iv0+1*noi)=kkb_fbc(iv3+1*noi,iv0+1*noi)
     &                                   + Ktmp(4,2,1,2)
              kkb_fbc(iv3+1*noi,iv0+2*noi)=kkb_fbc(iv3+1*noi,iv0+2*noi)
     &                                   + Ktmp(4,2,1,3)
              kkb_fbc(iv3+1*noi,iv1+0*noi)=kkb_fbc(iv3+1*noi,iv1+0*noi)
     &                                   + Ktmp(4,2,2,1)
              kkb_fbc(iv3+1*noi,iv1+1*noi)=kkb_fbc(iv3+1*noi,iv1+1*noi)
     &                                   + Ktmp(4,2,2,2)
              kkb_fbc(iv3+1*noi,iv1+2*noi)=kkb_fbc(iv3+1*noi,iv1+2*noi)
     &                                   + Ktmp(4,2,2,3)
              kkb_fbc(iv3+1*noi,iv2+0*noi)=kkb_fbc(iv3+1*noi,iv2+0*noi)
     &                                   + Ktmp(4,2,3,1)
              kkb_fbc(iv3+1*noi,iv2+1*noi)=kkb_fbc(iv3+1*noi,iv2+1*noi)
     &                                   + Ktmp(4,2,3,2)
              kkb_fbc(iv3+1*noi,iv2+2*noi)=kkb_fbc(iv3+1*noi,iv2+2*noi)
     &                                   + Ktmp(4,2,3,3)
              kkb_fbc(iv3+1*noi,iv3+0*noi)=kkb_fbc(iv3+1*noi,iv3+0*noi)
     &                                   + Ktmp(4,2,4,1)
              kkb_fbc(iv3+1*noi,iv3+1*noi)=kkb_fbc(iv3+1*noi,iv3+1*noi)
     &                                   + Ktmp(4,2,4,2)
              kkb_fbc(iv3+1*noi,iv3+2*noi)=kkb_fbc(iv3+1*noi,iv3+2*noi)
     &                                   + Ktmp(4,2,4,3)
              kkb_fbc(iv3+2*noi,iv0+0*noi)=kkb_fbc(iv3+2*noi,iv0+0*noi)
     &                                   + Ktmp(4,3,1,1)
              kkb_fbc(iv3+2*noi,iv0+1*noi)=kkb_fbc(iv3+2*noi,iv0+1*noi)
     &                                   + Ktmp(4,3,1,2)
              kkb_fbc(iv3+2*noi,iv0+2*noi)=kkb_fbc(iv3+2*noi,iv0+2*noi)
     &                                   + Ktmp(4,3,1,3)
              kkb_fbc(iv3+2*noi,iv1+0*noi)=kkb_fbc(iv3+2*noi,iv1+0*noi)
     &                                   + Ktmp(4,3,2,1)
              kkb_fbc(iv3+2*noi,iv1+1*noi)=kkb_fbc(iv3+2*noi,iv1+1*noi)
     &                                   + Ktmp(4,3,2,2)
              kkb_fbc(iv3+2*noi,iv1+2*noi)=kkb_fbc(iv3+2*noi,iv1+2*noi)
     &                                   + Ktmp(4,3,2,3)
              kkb_fbc(iv3+2*noi,iv2+0*noi)=kkb_fbc(iv3+2*noi,iv2+0*noi)
     &                                   + Ktmp(4,3,3,1)
              kkb_fbc(iv3+2*noi,iv2+1*noi)=kkb_fbc(iv3+2*noi,iv2+1*noi)
     &                                   + Ktmp(4,3,3,2)
              kkb_fbc(iv3+2*noi,iv2+2*noi)=kkb_fbc(iv3+2*noi,iv2+2*noi)
     &                                   + Ktmp(4,3,3,3)
              kkb_fbc(iv3+2*noi,iv3+0*noi)=kkb_fbc(iv3+2*noi,iv3+0*noi)
     &                                   + Ktmp(4,3,4,1)
              kkb_fbc(iv3+2*noi,iv3+1*noi)=kkb_fbc(iv3+2*noi,iv3+1*noi)
     &                                   + Ktmp(4,3,4,2)
              kkb_fbc(iv3+2*noi,iv3+2*noi)=kkb_fbc(iv3+2*noi,iv3+2*noi)
     &                                   + Ktmp(4,3,4,3)

              enddo
            endif

            mms_fbc=0.0 
            do j=1,ns_ibm_r_fbc(i)
               mms_fbc(j,j)=vertex_mass_fbc(i2l)
     &        +(
     &         density_coef(i2g)
     &        +density_coefp(i2g)
     &          )*areapnt_fbc(ibdy,j)
            enddo  

!+++++++++++++++++++++++++++++++++++++++++ 
! add mesh forces
        if(FabricMeshFlag_fbc(i)) then
            np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy) 
            noi=FabricMesh_numrecord(i)
            k=FabricMeshL_numatt(i)
            do j=1,FabricMeshL_numrecord(i)
                jq=FabricMeshL_con(i,j,1) 
                tmpcoord(1:3)=FabricMesh_X_na(jq,1:3)                    
                jq2=FabricMeshL_con(i,j,2) 
                tmpcoord2(1:3)=FabricMesh_X_na(jq2,1:3)
                FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
                FabricML_att(1:k)=FabricMeshL_attr(i,jq,1:k)
                dncont=dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
                dncont=sqrt(dncont)
                   iDX0=iMl0
                   iKS0=iMks0
                   N_iPARA0=n_iMnpara0
                   iPARA0=iMnpara0(1:100)
                   i_FABRICLINE0=1
                   tensionDerivFlag_fbc=.true.
                include "distIBM_FabricMeshLine_Tension.Fi" 
                outcount(1:3)=FabricML_dx(1:3)/(dncont+1d-9)

                Qmatpiezo(1,1:3)=(/1.0-outcount(1)**2
     &                            ,outcount(1)*outcount(2)
     &                            ,outcount(1)*outcount(3)/)

                Qmatpiezo(2,1:3)=(/outcount(2)*outcount(1)
     &                            ,1.0-outcount(2)**2
     &                            ,outcount(2)*outcount(3)/)

                Qmatpiezo(3,1:3)=(/outcount(3)*outcount(1)
     &                            ,outcount(3)*outcount(2)
     &                            ,1.0-outcount(3)**2/)

                outcount2(1:3)=FabricML_tension*outcount(1:3)

                FabricMesh_force(i,jq,1:3)=FabricMesh_force(i,jq,1:3)
     &                            +outcount2(1:3)
                FabricMesh_force(i,jq2,1:3)=FabricMesh_force(i,jq2,1:3)
     &                            -outcount2(1:3)

                Ktmp(1,1:3,1,1:3)=
     &                   -FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(1,iv0,1,1:3)=Ktmp(1,iv0,1,1:3)
     &                   -FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo

                Ktmp(1,1:3,2,1:3)=
     &                    FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(1,iv0,2,1:3)=Ktmp(1,iv0,2,1:3)
     &                   +FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo

                Ktmp(2,1:3,2,1:3)=
     &                   -FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(2,iv0,2,1:3)=Ktmp(2,iv0,2,1:3)
     &                   -FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo

                Ktmp(2,1:3,1,1:3)=
     &                    FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(2,iv0,1,1:3)=Ktmp(2,iv0,1,1:3)
     &                   +FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo
                iv0=3*np+jq
                iv1=3*np+jq2
                do ie1=0,2
                do ie2=0,2
                         kkb_fbc(iv0+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(2,ie1+1,1,ie2+1)

                         kkb_fbc(iv0+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(1,ie1+1,2,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(2,ie1+1,2,ie2+1)
               enddo
               enddo
            enddo
            noi=np
            noj=FabricMesh_numrecord(i)
            do j=1,FabricMesh_numrecord(i)
               if(FabricMesh_attr(i,j,iMcon0).gt. 0.1) then
               tmpcoord(1:3)=FabricMesh_X_na(j,1:3)
               jq=FabricMesh_SurfElAddress(i,j)   
               dxcont(1:3)= FabricMesh_SurfElAttr(i,j,2:4)           
               dncont= FabricMesh_SurfElAttr(i,j,1) 

               iv0=nea_fbc(i,jq,1)
               iv1=nea_fbc(i,jq,2)
               iv2=nea_fbc(i,jq,3)

               outcount2(1:3)=(/X_na_fbc(iv0,1)
     &                         ,X_na_fbc(iv1,1)
     &                         ,X_na_fbc(iv2,1) /)
               tmpcoord2(1)=dot_product(outcount2(1:3),dxcont(1:3))

               outcount2(1:3)=(/X_na_fbc(iv0,2)
     &                         ,X_na_fbc(iv1,2)
     &                         ,X_na_fbc(iv2,2) /)
               tmpcoord2(2)=dot_product(outcount2(1:3),dxcont(1:3))

               outcount2(1:3)=(/X_na_fbc(iv0,3)
     &                         ,X_na_fbc(iv1,3)
     &                         ,X_na_fbc(iv2,3) /)
               tmpcoord2(3)=dot_product(outcount2(1:3),dxcont(1:3))

               FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
               temp_ibm1=dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
               temp_ibm1=sqrt(temp_ibm1)
               outcount(1:3)=FabricML_dx(1:3)/(temp_ibm1+1d-9)

                Qmatpiezo(1,1:3)=(/1.0-outcount(1)**2
     &                            ,outcount(1)*outcount(2)
     &                            ,outcount(1)*outcount(3)/)

                Qmatpiezo(2,1:3)=(/outcount(2)*outcount(1)
     &                            ,1.0-outcount(2)**2
     &                            ,outcount(2)*outcount(3)/)

                Qmatpiezo(3,1:3)=(/outcount(3)*outcount(1)
     &                            ,outcount(3)*outcount(2)
     &                            ,1.0-outcount(3)**2/)

               FabricML_tension
     &                    =FabricMesh_attr(i,j,iMs0)*(temp_ibm1-dncont)

               outcount2(1:3)=FabricML_tension*outcount(1:3)

               FabricMesh_force(i,j,1:3)=FabricMesh_force(i,j,1:3)
     &                            +outcount2(1:3)

               fibm1_fbc(i,iv0)=fibm1_fbc(i,iv0)-outcount2(1)*dxcont(1)
               fibm2_fbc(i,iv0)=fibm2_fbc(i,iv0)-outcount2(1)*dxcont(2)
               fibm3_fbc(i,iv0)=fibm3_fbc(i,iv0)-outcount2(1)*dxcont(3)

               fibm1_fbc(i,iv1)=fibm1_fbc(i,iv1)-outcount2(2)*dxcont(1)
               fibm2_fbc(i,iv1)=fibm2_fbc(i,iv1)-outcount2(2)*dxcont(2)
               fibm3_fbc(i,iv1)=fibm3_fbc(i,iv1)-outcount2(2)*dxcont(3)

               fibm1_fbc(i,iv2)=fibm1_fbc(i,iv2)-outcount2(3)*dxcont(1)
               fibm2_fbc(i,iv2)=fibm2_fbc(i,iv2)-outcount2(3)*dxcont(2)
               fibm3_fbc(i,iv2)=fibm3_fbc(i,iv2)-outcount2(3)*dxcont(3)

               do ie2=1,3
                 do jq2=1,3
                   do ie1=1,3
                     do jq=1,3
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =-FabricMesh_attr(i,j,iMs0)
     &                         /(temp_ibm1+1d-9)
     &                         *dxcont(jq)*dxcont(jq2)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo

                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(iv0+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(2,ie1+1,1,ie2+1)

                         kkb_fbc(iv2+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv2+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(3,ie1+1,1,ie2+1)

                         kkb_fbc(iv0+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(1,ie1+1,2,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(2,ie1+1,2,ie2+1)

                         kkb_fbc(iv2+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv2+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(3,ie1+1,2,ie2+1)

                         kkb_fbc(iv0+ie1*noi,iv2+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv2+ie2*noi)
     &                   +Ktmp(1,ie1+1,3,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv2+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv2+ie2*noi)
     &                   +Ktmp(2,ie1+1,3,ie2+1)

                         kkb_fbc(iv2+ie1*noi,iv2+ie2*noi)
     &                   =kkb_fbc(iv2+ie1*noi,iv2+ie2*noi)
     &                   +Ktmp(3,ie1+1,3,ie2+1)
                enddo
                enddo


               do ie2=1,3
                 do jq2=1,1
                   do ie1=1,3
                     do jq=1,3
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =FabricMesh_attr(i,j,iMs0)
     &                         /(temp_ibm1+1d-9)
     &                         *dxcont(jq)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo
                 jq=noi*3+j
                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(iv0+ie1*noi,jq+ie2*noj)
     &                   =kkb_fbc(iv0+ie1*noi,jq+ie2*noj)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(iv1+ie1*noi,jq+ie2*noj)
     &                   =kkb_fbc(iv1+ie1*noi,jq+ie2*noj)
     &                   +Ktmp(2,ie1+1,1,ie2+1)

                         kkb_fbc(iv2+ie1*noi,jq+ie2*noj)
     &                   =kkb_fbc(iv2+ie1*noi,jq+ie2*noj)
     &                   +Ktmp(3,ie1+1,1,ie2+1)
                enddo
                enddo

               do ie2=1,3
                 do jq2=1,3
                   do ie1=1,3
                     do jq=1,1
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =FabricMesh_attr(i,j,iMs0)
     &                         /(temp_ibm1+1d-9)
     &                         *dxcont(jq2)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo

                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(jq+ie1*noj,iv0+ie2*noi)
     &                   =kkb_fbc(jq+ie1*noj,iv0+ie2*noi)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(jq+ie1*noj,iv1+ie2*noi)
     &                   =kkb_fbc(jq+ie1*noj,iv1+ie2*noi)
     &                   +Ktmp(1,ie1+1,2,ie2+1)

                         kkb_fbc(jq+ie1*noj,iv2+ie2*noi)
     &                   =kkb_fbc(jq+ie1*noj,iv2+ie2*noi)
     &                   +Ktmp(1,ie1+1,3,ie2+1)
                enddo
                enddo

               do ie2=1,3
                 do jq2=1,1
                   do ie1=1,3
                     do jq=1,1
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =-FabricMesh_attr(i,j,iMs0)
     &                         /(temp_ibm1+1d-9)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo

                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(jq+ie1*noj,jq+ie2*noj)
     &                   =kkb_fbc(jq+ie1*noj,jq+ie2*noj)
     &                   +Ktmp(1,ie1+1,1,ie2+1)
                enddo
                enddo
               endif
            enddo
            np=np+FabricMesh_numrecord(i)
        endif

! add line forces
        if(FabricLineFlag_fbc(i)) then
            noi=np
            noj=FabricLine_numrecord(i)
            do j=1,FabricLine_numrecord(i)
                i2=FabricLine_addressRev(i,j,1) 
                jq=FabricLine_addressRev(i,j,2) 
                if(jq .eq. FabricLine_npoint(i,i2)) then
                   outcount2(1:3)=0.0
                elseif(jq .eq. 1) then
                   outcount2(1:3)=0.0
                else
                   jq2=FabricLine_address(i,i2,jq+1)
                   k  =FabricLine_address(i,i2,jq-1)
                   tmpcoord(1:3) =FabricLine_X_na(k,1:3) 
                   dxcont(1:3)   =FabricLine_X_na(j,1:3)                    
                   tmpcoord2(1:3)=FabricLine_X_na(jq2,1:3)

                   temp_ibm1=FabricLine_attr(i,k,iLl0)
                   temp_ibm2=FabricLine_attr(i,j,iLl0)
                   dncont=0.5*(temp_ibm1+temp_ibm1)

                   outcount2(1:3)
     &                   =( (dxcont(1:3)   -tmpcoord(1:3))/temp_ibm1
     &                     -(tmpcoord2(1:3)-dxcont(1:3)  )/temp_ibm2)
     &                    /(dncont+1d-9)
                 endif
                 FabricLine_curv(j,1:3)
     &                   =outcount2(1:3)-FabricLine_curv0(i,j,1:3)
            enddo


            k=FabricLine_numatt(i)
            do j=1,FabricLine_numrecord(i)
                i2=FabricLine_addressRev(i,j,1) 
                jq=FabricLine_addressRev(i,j,2) 
                if(jq .lt. FabricLine_npoint(i,i2)) then
                   jq2=FabricLine_address(i,i2,jq+1)
                   tmpcoord(1:3) =FabricLine_X_na(j,1:3)                    
                   tmpcoord2(1:3)=FabricLine_X_na(jq2,1:3)
                   FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
                   FabricML_att(1:k)=FabricLine_attr(i,jq,1:k)

                   dncont=dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
                   dncont=sqrt(dncont)
                   iDX0=iLl0
                   iKS0=iLks0
                   N_iPARA0=n_iLnpara0
                   iPARA0=iLnpara0(1:100)
                   i_FABRICLINE0=1
                   tensionDerivFlag_fbc=.true.
                   include "distIBM_FabricMeshLine_Tension.Fi" 

                   outcount(1:3)=FabricML_dx(1:3)/(dncont+1d-9)

                  Qmatpiezo(1,1:3)=(/1.0-outcount(1)**2
     &                            ,outcount(1)*outcount(2)
     &                            ,outcount(1)*outcount(3)/)

                  Qmatpiezo(2,1:3)=(/outcount(2)*outcount(1)
     &                            ,1.0-outcount(2)**2
     &                            ,outcount(2)*outcount(3)/)

                  Qmatpiezo(3,1:3)=(/outcount(3)*outcount(1)
     &                            ,outcount(3)*outcount(2)
     &                            ,1.0-outcount(3)**2/)

                   outcount2(1:3)=FabricML_tension*outcount(1:3)

                   FabricLine_force(i,j ,1:3)
     &                            =FabricLine_force(i,jq,1:3)
     &                            +outcount2(1:3)

                   FabricLine_force(i,jq2,1:3)
     &                            =FabricLine_force(i,jq2,1:3)
     &                            -outcount2(1:3)

                Ktmp(1,1:3,1,1:3)=
     &                   -FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(1,iv0,1,1:3)=Ktmp(1,iv0,1,1:3)
     &                   -FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo

                Ktmp(1,1:3,2,1:3)=
     &                    FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(1,iv0,2,1:3)=Ktmp(1,iv0,2,1:3)
     &                   +FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo

                Ktmp(2,1:3,2,1:3)=
     &                   -FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(2,iv0,2,1:3)=Ktmp(2,iv0,2,1:3)
     &                   -FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo

                Ktmp(2,1:3,1,1:3)=
     &                    FabricML_tension/dncont*Qmatpiezo(1:3,1:3)
                do iv0=1,3
                     Ktmp(2,iv0,1,1:3)=Ktmp(2,iv0,1,1:3)
     &                   +FabricML_Dtension/dncont*FabricML_dx(1:3)
     &                    *outcount(iv0)
                enddo
                iv0=3*np+jq
                iv1=3*np+jq2
                do ie1=0,2
                do ie2=0,2
                         kkb_fbc(iv0+ie1*noj,iv0+ie2*noj)
     &                   =kkb_fbc(iv0+ie1*noj,iv0+ie2*noj)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(iv1+ie1*noj,iv0+ie2*noj)
     &                   =kkb_fbc(iv1+ie1*noj,iv0+ie2*noj)
     &                   +Ktmp(2,ie1+1,1,ie2+1)

                         kkb_fbc(iv0+ie1*noj,iv1+ie2*noj)
     &                   =kkb_fbc(iv0+ie1*noj,iv1+ie2*noj)
     &                   +Ktmp(1,ie1+1,2,ie2+1)

                         kkb_fbc(iv1+ie1*noj,iv1+ie2*noj)
     &                   =kkb_fbc(iv1+ie1*noj,iv1+ie2*noj)
     &                   +Ktmp(2,ie1+1,2,ie2+1)
               enddo
               enddo
               endif

               if(jq .eq. FabricLine_npoint(i,i2)) then
                   iv0=FabricLine_address(i,i2,jq-1)
                   iv1=FabricLine_address(i,i2,jq-2)
                   outcount2(1:3)
     &              =(FabricLine_curv(iv1,1:3)
     &               *FabricLine_attr(i,iv1,iLkb0)
     &               -FabricLine_curv(iv0,1:3)
     &               *FabricLine_attr(i,iv0,iLkb0))
     &              /FabricLine_attr(i,iv0,iLl0)
     &              /FabricLine_attr(i,iv1,iLl0)  
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                     )
                elseif(jq .eq. 1) then
                   iv0=FabricLine_address(i,i2,jq+1) 
                   iv1=FabricLine_address(i,i2,jq+2) 
                   outcount2(1:3)
     &              =(FabricLine_curv(iv1,1:3)
     &               *FabricLine_attr(i,iv1,iLkb0)
     &               -FabricLine_curv(iv0,1:3)
     &               *FabricLine_attr(i,iv0,iLkb0))
     &              /FabricLine_attr(i,j,iLl0)
     &              /FabricLine_attr(i,iv0,iLl0) 
                    ksh_tmp
     &              =0.5*( 
     &                    FabricLine_attr(i,j  ,iLl0) ) 
                else
                   iv0=FabricLine_address(i,i2,jq-1)  
                   iv1=FabricLine_address(i,i2,jq+1)
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )
                   outcount2(1:3)
     &              =(FabricLine_curv(j,1:3)
     &               *FabricLine_attr(i,j,iLkb0)
     &               -FabricLine_curv(iv0,1:3)
     &               *FabricLine_attr(i,iv0,iLkb0))
     &              /FabricLine_attr(i,iv0,iLl0)
                          
                   iv1=FabricLine_address(i,i2,jq+1)
                   outcount2(1:3)
     &              =(
     &               outcount2(1:3)
     &             -(FabricLine_curv(iv1,1:3)
     &               *FabricLine_attr(i,iv1,iLkb0)
     &               -FabricLine_curv(j,1:3)
     &               *FabricLine_attr(i,j,iLkb0))
     &              /FabricLine_attr(i,j,iLl0))/ksh_tmp 

                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )
                endif


                outcount(1:3)=-ksh_tmp*outcount2(1:3)

                FabricLine_force(i,j ,1:3)
     &                            =FabricLine_force(i,j,1:3)
     &                            +outcount(1:3)

                if(jq .eq. FabricLine_npoint(i,i2)) then
                   iv0=FabricLine_address(i,i2,jq-1)  
                   iv1=FabricLine_address(i,i2,jq-2) 
                   iv2=FabricLine_address(i,i2,jq-3) 
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    )

                 do ie1=0,2
                         kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(2*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,iv0,iLl0)**2
     &                    *FabricLine_attr(i,iv1,iLl0)
     &                    *(FabricLine_attr(i,iv0,iLl0)
     &                     + FabricLine_attr(i,iv1,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (2*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,iv0,iLl0)**2
     &                    *FabricLine_attr(i,iv1,iLl0)**2) 
     &                    + (2*FabricLine_attr(i,iv1,iLkb0))
     &                    /(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLl0)**2
     &                    *(FabricLine_attr(i,iv1,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(2*(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLkb0) 
     &                    + FabricLine_attr(i,iv1,iLl0)
     &                    *FabricLine_attr(i,iv1,iLkb0) 
     &                    + FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv0,iLkb0)))
     &                    /(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLl0)**2
     &                    *FabricLine_attr(i,iv2,iLl0)
     &                    *(FabricLine_attr(i,iv0,iLl0)
     &                     + FabricLine_attr(i,iv1,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (2*FabricLine_attr(i,iv1,iLkb0))
     &                    /(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLl0)
     &                    *FabricLine_attr(i,iv2,iLl0)
     &                    *(FabricLine_attr(i,iv1,iLl0)
     &                     + FabricLine_attr(i,iv2,iLl0)))
     &                    )
                enddo
                elseif(jq .eq. FabricLine_npoint(i,i2)-1) then
                   iv0=FabricLine_address(i,i2,jq-1)  
                   iv1=FabricLine_address(i,i2,jq-2) 
                   iv2=FabricLine_address(i,i2,jq+1) 
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )
                 do ie1=0,2
                         kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(4.0*FabricLine_attr(i,j,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv0,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*FabricLine_attr(i,j,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv0,iLl0)**2)
     &                     + (4.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,iv0,iLl0)**2
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv0,iLl0))
     &                    *(FabricLine_attr(i,iv0,iLl0)
     &                     + FabricLine_attr(i,iv1,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(4.0*(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLkb0) 
     &                    + FabricLine_attr(i,iv1,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0)))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)**2
     &                    *FabricLine_attr(i,iv1,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0)
     &                     + FabricLine_attr(i,iv0,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0)
     &                     + FabricLine_attr(i,iv0,iLl0))
     &                    *(FabricLine_attr(i,iv0,iLl0)
     &                     + FabricLine_attr(i,iv1,iLl0)))
     &                    )
                enddo
                elseif(jq .eq. 1) then
                   iv0=FabricLine_address(i,i2,jq+1)  
                   iv1=FabricLine_address(i,i2,jq+2) 
                   iv2=FabricLine_address(i,i2,jq+3) 
                   ksh_tmp
     &              =0.5*( 
     &                     FabricLine_attr(i,j  ,iLl0) )

                 do ie1=0,2
                         kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(2.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0)
     &                     + FabricLine_attr(i,iv0,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (2.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv0,iLl0)**2)
     &                     + (2.0*FabricLine_attr(i,iv1,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)**2
     &                    *(FabricLine_attr(i,iv0,iLl0)
     &                     + FabricLine_attr(i,iv1,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(2.0*(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv1,iLkb0)
     &                     + FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLkb0)
     &                     + FabricLine_attr(i,iv1,iLl0)
     &                    *FabricLine_attr(i,iv0,iLkb0)))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)**2
     &                    *FabricLine_attr(i,iv1,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0)
     &                     + FabricLine_attr(i,iv0,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (2.0*FabricLine_attr(i,iv1,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,iv1,iLl0)
     &                    *(FabricLine_attr(i,iv0,iLl0)
     &                     + FabricLine_attr(i,iv1,iLl0)))
     &                    )
                enddo
                elseif(jq .eq. 2) then
                   iv0=FabricLine_address(i,i2,jq+1)  
                   iv1=FabricLine_address(i,i2,jq+2) 
                   iv2=FabricLine_address(i,i2,jq-1) 
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )

                 do ie1=0,2

                         kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(4.0*FabricLine_attr(i,j,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv2,iLl0)**2
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*FabricLine_attr(i,j,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv2,iLl0)**2)
     &                     + (4.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0))
     &                    *(FabricLine_attr(i,j,iLl0)
     &                     + FabricLine_attr(i,iv0,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(4.0*(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0) 
     &                    + FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv0,iLkb0)))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0)
     &                     + FabricLine_attr(i,iv2,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0))
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv0,iLl0)))
     &                    )
                enddo
                else
                   iv0=FabricLine_address(i,i2,jq+1)  
                   iv1=FabricLine_address(i,i2,jq+2) 
                   iv2=FabricLine_address(i,i2,jq-1) 
                   iv3=FabricLine_address(i,i2,jq-2)
                   ksh_tmp
     &              =0.5*( FabricLine_attr(i,iv0,iLl0)
     &                    +FabricLine_attr(i,j  ,iLl0) )

                 do ie1=0,2

                         kkb_fbc(noi+j+ie1*noj,noi+iv3+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv3+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*FabricLine_attr(i,iv2,iLkb0))
     &                    /(FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv3,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0))
     &                    *(FabricLine_attr(i,iv2,iLl0) 
     &                    + FabricLine_attr(i,iv3,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv2+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(4.0*(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv2,iLkb0) 
     &                    + FabricLine_attr(i,iv3,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0)))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv2,iLl0)**2
     &                    *FabricLine_attr(i,iv3,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+j+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0) 
     &                    + FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0) 
     &                    + FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv0,iLkb0)))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv2,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0))
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv0,iLl0)))
     &                     + (4.0*FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv2,iLkb0) 
     &                    + 4.0*FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0) 
     &                    + 4.0*FabricLine_attr(i,iv3,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv2,iLl0)**2
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0))
     &                    *(FabricLine_attr(i,iv2,iLl0) 
     &                    + FabricLine_attr(i,iv3,iLl0)))
     &                     )

                         kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv0+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    -(4.0*(FabricLine_attr(i,iv0,iLl0)
     &                    *FabricLine_attr(i,j,iLkb0) 
     &                    + FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv0,iLkb0)))
     &                    /(FabricLine_attr(i,j,iLl0)**2
     &                    *FabricLine_attr(i,iv2,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0)))
     &                    )

                         kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   =kkb_fbc(noi+j+ie1*noj,noi+iv1+ie1*noj)
     &                   -ksh_tmp
     &                    *(
     &                    (4.0*FabricLine_attr(i,iv0,iLkb0))
     &                    /(FabricLine_attr(i,j,iLl0)
     &                    *FabricLine_attr(i,iv0,iLl0)
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv2,iLl0))
     &                    *(FabricLine_attr(i,j,iLl0) 
     &                    + FabricLine_attr(i,iv0,iLl0)))
     &                    )
                enddo
                endif

                noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy) 
                if(FabricLine_attr(i,jq,iLcon0) .gt. 0.1) then
                  jq=FabricLine_SurfElAddress(i,j)   
                  dxcont(1:3)= FabricLine_SurfElAttr(i,j,2:4)           
                  dncont= FabricLine_SurfElAttr(i,j,1) 

                  iv0=nea_fbc(i,jq,1)
                  iv1=nea_fbc(i,jq,2)
                  iv2=nea_fbc(i,jq,3)

                  outcount2(1:3)=(/X_na_fbc(iv0,1)
     &                            ,X_na_fbc(iv1,1)
     &                            ,X_na_fbc(iv2,1) /)
                  tmpcoord2(1)=dot_product(outcount2(1:3),dxcont(1:3))

                  outcount2(1:3)=(/X_na_fbc(iv0,2)
     &                            ,X_na_fbc(iv1,2)
     &                            ,X_na_fbc(iv2,2) /)
                  tmpcoord2(2)=dot_product(outcount2(1:3),dxcont(1:3))

                  outcount2(1:3)=(/X_na_fbc(iv0,3)
     &                            ,X_na_fbc(iv1,3)
     &                            ,X_na_fbc(iv2,3) /)
                  tmpcoord2(3)=dot_product(outcount2(1:3),dxcont(1:3))

                  FabricML_dx(1:3)=tmpcoord2(1:3)-tmpcoord(1:3)
                  temp_ibm1
     &                  =dot_product(FabricML_dx(1:3),FabricML_dx(1:3))
                  temp_ibm1=sqrt(temp_ibm1)
                  outcount(1:3)=FabricML_dx(1:3)/(temp_ibm1+1d-9)

                  Qmatpiezo(1,1:3)=(/1.0-outcount(1)**2
     &                            ,outcount(1)*outcount(2)
     &                            ,outcount(1)*outcount(3)/)

                  Qmatpiezo(2,1:3)=(/outcount(2)*outcount(1)
     &                            ,1.0-outcount(2)**2
     &                            ,outcount(2)*outcount(3)/)

                  Qmatpiezo(3,1:3)=(/outcount(3)*outcount(1)
     &                            ,outcount(3)*outcount(2)
     &                            ,1.0-outcount(3)**2/)

                  FabricML_tension
     &                    =FabricLine_attr(i,j,iLs0)*(temp_ibm1-dncont)

                  outcount2(1:3)=FabricML_tension*outcount(1:3)

                  FabricMesh_force(i,j,1:3)=FabricMesh_force(i,j,1:3)
     &                            +outcount2(1:3)

                  fibm1_fbc(i,iv0)
     &                  =fibm1_fbc(i,iv0)-outcount2(1)*dxcont(1)
                  fibm2_fbc(i,iv0)
     &                  =fibm2_fbc(i,iv0)-outcount2(1)*dxcont(2)
                  fibm3_fbc(i,iv0)
     &                  =fibm3_fbc(i,iv0)-outcount2(1)*dxcont(3)

                  fibm1_fbc(i,iv1)
     &                  =fibm1_fbc(i,iv1)-outcount2(2)*dxcont(1)
                  fibm2_fbc(i,iv1)
     &                  =fibm2_fbc(i,iv1)-outcount2(2)*dxcont(2)
                  fibm3_fbc(i,iv1)
     &                  =fibm3_fbc(i,iv1)-outcount2(2)*dxcont(3)

                  fibm1_fbc(i,iv2)
     &                  =fibm1_fbc(i,iv2)-outcount2(3)*dxcont(1)
                  fibm2_fbc(i,iv2)
     &                  =fibm2_fbc(i,iv2)-outcount2(3)*dxcont(2)
                  fibm3_fbc(i,iv2)
     &                  =fibm3_fbc(i,iv2)-outcount2(3)*dxcont(3)

               do ie2=1,3
                 do jq2=1,3
                   do ie1=1,3
                     do jq=1,3
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =-FabricLine_attr(i,j,iLs0)
     &                         /(temp_ibm1+1d-9)
     &                         *dxcont(jq)*dxcont(jq2)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo

                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(iv0+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv0+ie2*noi)
     &                   +Ktmp(2,ie1+1,1,ie2+1)

                         kkb_fbc(iv2+ie1*noi,iv0+ie2*noi)
     &                   =kkb_fbc(iv2+ie1*noi,iv0+ie2*noi)

     &                   +Ktmp(3,ie1+1,1,ie2+1)

                         kkb_fbc(iv0+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(1,ie1+1,2,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(2,ie1+1,2,ie2+1)

                         kkb_fbc(iv2+ie1*noi,iv1+ie2*noi)
     &                   =kkb_fbc(iv2+ie1*noi,iv1+ie2*noi)
     &                   +Ktmp(3,ie1+1,2,ie2+1)

                         kkb_fbc(iv0+ie1*noi,iv2+ie2*noi)
     &                   =kkb_fbc(iv0+ie1*noi,iv2+ie2*noi)
     &                   +Ktmp(1,ie1+1,3,ie2+1)

                         kkb_fbc(iv1+ie1*noi,iv2+ie2*noi)
     &                   =kkb_fbc(iv1+ie1*noi,iv2+ie2*noi)
     &                   +Ktmp(2,ie1+1,3,ie2+1)

                         kkb_fbc(iv2+ie1*noi,iv2+ie2*noi)
     &                   =kkb_fbc(iv2+ie1*noi,iv2+ie2*noi)
     &                   +Ktmp(3,ie1+1,3,ie2+1)
                enddo
                enddo


               do ie2=1,3
                 do jq2=1,1
                   do ie1=1,3
                     do jq=1,3
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =FabricLine_attr(i,j,iLs0)
     &                         /(temp_ibm1+1d-9)
     &                         *dxcont(jq)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo
                 jq=np*3+j
                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(iv0+ie1*noi,jq+ie2*noj)
     &                   =kkb_fbc(iv0+ie1*noi,jq+ie2*noj)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(iv1+ie1*noi,jq+ie2*noj)
     &                   =kkb_fbc(iv1+ie1*noi,jq+ie2*noj)
     &                   +Ktmp(2,ie1+1,1,ie2+1)

                         kkb_fbc(iv2+ie1*noi,jq+ie2*noj)
     &                   =kkb_fbc(iv2+ie1*noi,jq+ie2*noj)
     &                   +Ktmp(3,ie1+1,1,ie2+1)
                enddo
                enddo

               do ie2=1,3
                 do jq2=1,3
                   do ie1=1,3
                     do jq=1,1
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =FabricLine_attr(i,j,iLs0)
     &                         /(temp_ibm1+1d-9)
     &                         *dxcont(jq2)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo

                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(jq+ie1*noj,iv0+ie2*noi)
     &                   =kkb_fbc(jq+ie1*noj,iv0+ie2*noi)
     &                   +Ktmp(1,ie1+1,1,ie2+1)

                         kkb_fbc(jq+ie1*noj,iv1+ie2*noi)
     &                   =kkb_fbc(jq+ie1*noj,iv1+ie2*noi)
     &                   +Ktmp(1,ie1+1,2,ie2+1)

                         kkb_fbc(jq+ie1*noj,iv2+ie2*noi)
     &                   =kkb_fbc(jq+ie1*noj,iv2+ie2*noi)
     &                   +Ktmp(1,ie1+1,3,ie2+1)
                enddo
                enddo

               do ie2=1,3
                 do jq2=1,1
                   do ie1=1,3
                     do jq=1,1
                        Ktmp(jq,ie1,jq2,ie2)
     &                         =-FabricLine_attr(i,j,iLs0)
     &                         /(temp_ibm1+1d-9)
     &                        *(
     &                           outcount(ie1)*FabricML_dx(ie2)
     &                          +(1.0-dncont/(temp_ibm1+1d-9))
     &                          *Qmatpiezo(ie1,ie2)
     &                         )
                     enddo
                    enddo
                  enddo
                enddo

                 do ie1=0,2
                 do ie2=0,2
                         kkb_fbc(jq+ie1*noj,jq+ie2*noj)
     &                   =kkb_fbc(jq+ie1*noj,jq+ie2*noj)
     &                   +Ktmp(1,ie1+1,1,ie2+1)
                enddo
                enddo
               endif
            enddo
        endif

!~~~~~~~~~~~~~~ Nodal oprator
        if (ExternalPressureFlag(ibdyg)) then

        i=ibdy  
        include "distIBM_normalPressure_fn.Fi" 
        temp_ibm1=temp_ibm2*p_inflation
        do j=1,ns_ibm_r_fbc(i)
             fibm1_fbc(i,j)=fibm1_fbc(i,j)
     &          -fibm1pres_fbc(j)  /areapnt_fbc(i,j)
     &          *temp_ibm1
             fibm2_fbc(i,j)=fibm2_fbc(i,j)
     &          -fibm2pres_fbc(j)  /areapnt_fbc(i,j)
     &          *temp_ibm1
             fibm3_fbc(i,j)=fibm3_fbc(i,j)
     &          -fibm3pres_fbc(j)  /areapnt_fbc(i,j)
     &          *temp_ibm1

        end do
        endif

        i=ibdy  
         if(contacttype .eq. -1) then
            do j=1,ns_ibm_r_fbc(i)
                dxcont(1)=fibm1cont_fbc(j)
                dxcont(2)=fibm2cont_fbc(j)
                dxcont(3)=fibm3cont_fbc(j)
                ddcont=sqrt(dxcont(1)**2+dxcont(2)**2+dxcont(3)**2)+eps
                normalpres_fbc(j,1)=dxcont(1)/ddcont
                normalpres_fbc(j,2)=dxcont(2)/ddcont
                normalpres_fbc(j,3)=dxcont(3)/ddcont
            enddo
        endif
!==========here 20160720
        i=ibdy
        i2l=i      
        i2g=ibdyg    

        aamat_fbc=0.d0
        do j=1,3
          ibktx=(j-1)*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+1
          ibkty=j*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
          ibktmin(1)=ibktx  !(j-1)*ns_ibm_r_fbc(i)+1
          ibktmax(1)=ibkty  !j*ns_ibm_r_fbc(i)

          do j2=1,3
            ibkts1=(j2-1)*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+1
            ibkts2=j2*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)
            if(j .eq. j2) then
            do k=ibktmin(1),ibktmax(1)
               aamat_fbc(k,k)=cs_ibm(i2g)*timeMarchcoef(3)
     &         *areapnt_fbc(ibdy,j)
            enddo
            aamat_fbc(ibktmin(1):ibktmax(1),ibktmin(2):ibktmax(2))
     &          =(timeMarchcoef(2)
     &          +propDamp(i2g,1)*timeMarchcoef(3))*
     &            mms_fbc(1:ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
     &               ,1:ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
            endif
            aamat_fbc(ibktmin(1):ibktmax(1),ibktmin(2):ibktmax(2))
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),ibktmin(2):ibktmax(2))
     &         +(propDamp(i2g,2)*timeMarchcoef(3)+timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,ibkts1:ibkts2))
          enddo
          noi=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
          if(FabricMeshFlag_fbc(i)) then
           do j2=1,3 
            ibkts1=noi+(j2-1)*(FabricMesh_numrecord(i))+1
            ibkts2=noi+j2*(FabricMesh_numrecord(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)

            do jq=ibktmin(2),ibktmax(2)
              aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &         +(FabricMesh_attr(i,jq,iMpD0_3)*timeMarchcoef(3)
     &          +timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,jq))
            enddo
           enddo 
           noi=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
     &           +FabricMesh_numrecord(i))
          endif 
          if(FabricLineFlag_fbc(i)) then
           do j2=1,3 
            ibkts1=noi+(j2-1)*(FabricLine_numrecord(i))+1
            ibkts2=noi+j2*(FabricLine_numrecord(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)

            do jq=ibktmin(2),ibktmax(2)
              aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &         +(FabricLine_attr(i,jq,iLpD0_3)*timeMarchcoef(3)
     &          +timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,jq))
            enddo
           enddo 
          endif 
        enddo


        noj=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
        if(FabricMeshFlag_fbc(i)) then
        do j=1,3
          ibktx=noj+(j-1)*(FabricMesh_numrecord(i))+1
          ibkty=noj+j*(FabricMesh_numrecord(i))
          ibktmin(1)=ibktx  !(j-1)*ns_ibm_r_fbc(i)+1
          ibktmax(1)=ibkty  !j*ns_ibm_r_fbc(i)

          do j2=1,3
            ibkts1=(j2-1)*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+1
            ibkts2=j2*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)

            do jq=ibktmin(2),ibktmax(2)
              aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &         +(FabricMesh_attr(i,jq,iMpD0_3)*timeMarchcoef(3)
     &          +timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,jq))
            enddo
          enddo
          noi=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))

           do j2=1,3 
            ibkts1=noi+(j2-1)*(FabricMesh_numrecord(i))+1
            ibkts2=noi+j2*(FabricMesh_numrecord(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)

            if(j .eq. j2) then
             do k=ibktmin(1),ibktmax(1)
               jq=k-ibktmin(1)
               aamat_fbc(k,k)
     &         =FabricMesh_attr(i,jq,iMc0)*timeMarchcoef(3)
     &         +(timeMarchcoef(2)
     &          +FabricMesh_attr(i,jq,iMpD0_1)*timeMarchcoef(3))*
     &            FabricMesh_attr(i,jq,iMm0)
             enddo
            endif
            do jq=ibktmin(2),ibktmax(2)
              aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &         +(FabricMesh_attr(i,jq,iMpD0_2)*timeMarchcoef(3)
     &          +timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,jq))
            enddo
           enddo 
           noi=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
     &           +FabricMesh_numrecord(i))
        enddo
        noj=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)+FabricMesh_numrecord(i))
        endif 
        if(FabricLineFlag_fbc(i)) then
        do j=1,3
          ibktx=noj+(j-1)*(FabricLine_numrecord(i))+1
          ibkty=noj+j*(FabricLine_numrecord(i))
          ibktmin(1)=ibktx  !(j-1)*ns_ibm_r_fbc(i)+1
          ibktmax(1)=ibkty  !j*ns_ibm_r_fbc(i)

          do j2=1,3
            ibkts1=(j2-1)*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+1
            ibkts2=j2*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)

            do jq=ibktmin(2),ibktmax(2)
              aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &         +(FabricLine_attr(i,jq,iLpD0_3)*timeMarchcoef(3)
     &          +timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,jq))
            enddo

          enddo
          noi=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))
          if(FabricMeshFlag_fbc(i))  noi=noi+3*FabricMesh_numrecord(i)

          do j2=1,3 
            ibkts1=noi+(j2-1)*(FabricLine_numrecord(i))+1
            ibkts2=noi+j2*(FabricLine_numrecord(i))
            ibktmin(2)=ibkts1  !(j2-1)*ns_ibm_r_fbc(i)+1
            ibktmax(2)=ibkts2  !j2*ns_ibm_r_fbc(i)

            if(j .eq. j2) then
             do k=ibktmin(1),ibktmax(1)
               jq=k-ibktmin(1)
               aamat_fbc(k,k)
     &         =FabricLine_attr(i,jq,iLc0)*timeMarchcoef(3)
     &         +(timeMarchcoef(2)
     &          +FabricLine_attr(i,jq,iLpD0_1)*timeMarchcoef(3))*
     &            FabricLine_attr(i,jq,iLm0)
             enddo
            endif
            do jq=ibktmin(2),ibktmax(2)
              aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &          =
     &          aamat_fbc(ibktmin(1):ibktmax(1),jq)
     &         +(FabricLine_attr(i,jq,iLpD0_2)*timeMarchcoef(3)
     &          +timeMarchcoef(1))
     &          *( kkb_fbc(ibktx:ibkty,jq))
            enddo
           enddo

         enddo
         endif

       if(FluidForceFlag(i2g) .and. (1==1)) then
          j2=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
          do j=1,j2
           aamat_fbc(j,j)
     &       =aamat_fbc(j,j)-timeMarchcoef(3)
     &        *ImplicitFSI_coef*areapnt_fbc(i,j)
           aamat_fbc(j+j2,j+j2)
     &       =aamat_fbc(j+j2,j+j2)-timeMarchcoef(3)
     &        *ImplicitFSI_coef*areapnt_fbc(i,j)
           aamat_fbc(j+2*j2,j+2*j2)
     &       =aamat_fbc(j+2*j2,j+2*j2)-timeMarchcoef(3)
     &        *ImplicitFSI_coef*areapnt_fbc(i,j)
          enddo
        endif

        j2=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
        do j=1,target_num(i2g)
             k=target_point_num_fbc(i,j)
             temp_ibm1=
     &          (X_na_fbc(k,1)-Xtar_na_fbc(j,1))
             temp_ibm2=
     &          (X_na_fbc(k,2)-Xtar_na_fbc(j,2))
             temp_ibm3=
     &          (X_na_fbc(k,3)-Xtar_na_fbc(j,3))

             include "distIBM_target_k_rampfn.Fi"               
             if(time_alphaf .le. target_t_link_fbc(i,j)) then
                ksh_tmp=target_k_link_fbc(i,j)*target_timefn
             else
                ksh_tmp=0.0
             endif
             force_points_fbc(i,j,1)=k_link*temp_ibm1*ksh_tmp
             force_points_fbc(i,j,2)=k_link*temp_ibm2*ksh_tmp
             force_points_fbc(i,j,3)=k_link*temp_ibm3*ksh_tmp


             ddcont=timeMarchcoef(1)*k_link*ksh_tmp
             aamat_fbc(k,k)          =aamat_fbc(k,k)          +ddcont
             aamat_fbc(k+j2,k+j2)    =aamat_fbc(k+j2,k+j2)    +ddcont
             aamat_fbc(k+2*j2,k+2*j2)=aamat_fbc(k+2*j2,k+2*j2)+ddcont

             temp_ibm1=dXtar_na_fbc(j,1)
             temp_ibm2=dXtar_na_fbc(j,2)
             temp_ibm3=dXtar_na_fbc(j,3)

             temp_ibm1=dX_na_fbc(k,1)-temp_ibm1
             temp_ibm2=dX_na_fbc(k,2)-temp_ibm2
             temp_ibm3=dX_na_fbc(k,3)-temp_ibm3

             temp2_ibm= cs_ibm_target(i2g)*k_link*temp_ibm1*ksh_tmp
             force_points_fbc(i,j,1)=force_points_fbc(i,j,1)+temp2_ibm


             temp2_ibm= cs_ibm_target(i2g)*k_link*temp_ibm2*ksh_tmp
             force_points_fbc(i,j,2)=force_points_fbc(i,j,2)+temp2_ibm

             temp2_ibm= cs_ibm_target(i2g)*k_link*temp_ibm3*ksh_tmp
             force_points_fbc(i,j,3)=force_points_fbc(i,j,3)+temp2_ibm

             ddcont=timeMarchcoef(3)*k_link*ksh_tmp
             aamat_fbc(k,k)          =aamat_fbc(k,k)          +ddcont
             aamat_fbc(k+j2,k+j2)    =aamat_fbc(k+j2,k+j2)    +ddcont
             aamat_fbc(k+2*j2,k+2*j2)=aamat_fbc(k+2*j2,k+2*j2)+ddcont


             f_link1_fbc(i,k)=force_points_fbc(i,j,1)
             f_link2_fbc(i,k)=force_points_fbc(i,j,2)
             f_link3_fbc(i,k)=force_points_fbc(i,j,3)
       enddo

       noi=3*(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))

       if(FabricMeshFlag_fbc(i)) then
         j2=FabricMesh_numrecord(i)
         do j=1,FabricMesh_target_num(i)
             k=FabricMesh_target_point_num(i,j)
             tmpcoord(1:3) =
     &          (FabricMesh_X_na(k,1:3)
     &          -FabricMesh_Xtar_na(j,1:3))

             include "distIBM_target_k_rampfn.Fi"         
             if(time_alphaf .le. FabricMesh_target_k_link(i,j)) then
                ksh_tmp=FabricMesh_target_k_link(i,j)*target_timefn
             else
                ksh_tmp=0.0
             endif
             FabricMesh_force_points(j,1:3)
     &          =k_link*tmpcoord(1:3)*ksh_tmp

             ddcont=timeMarchcoef(1)*k_link*ksh_tmp
             noj=noi+k
             aamat_fbc(noj,noj)          
     &             =aamat_fbc(noj,noj)          +ddcont
             aamat_fbc(noj+j2,noj+j2)    
     &             =aamat_fbc(noj+j2,noj+j2)    +ddcont
             aamat_fbc(noj+2*j2,noj+2*j2)
     &             =aamat_fbc(noj+2*j2,noj+2*j2)+ddcont

             tmpcoord2(1:3)=FabricMesh_dX_na(k,1:3)
     &                     -FabricMesh_dXtar_na(j,1:3)

             tmpcoord(1:3)
     &              = cs_ibm_target(i2g)*k_link*tmpcoord2(1:3)*ksh_tmp
             FabricMesh_force_points(j,1:3)
     &              =FabricMesh_force_points(j,1:3)+tmpcoord(1:3)

             ddcont=timeMarchcoef(3)*k_link*ksh_tmp
             noj=noi+k
             aamat_fbc(noj,noj)          
     &             =aamat_fbc(noj,noj)          +ddcont
             aamat_fbc(noj+j2,noj+j2)    
     &             =aamat_fbc(noj+j2,noj+j2)    +ddcont
             aamat_fbc(noj+2*j2,noj+2*j2)
     &             =aamat_fbc(noj+2*j2,noj+2*j2)+ddcont
         enddo
         noi=noi+3*j2
       endif

       if(FabricLineFlag_fbc(i)) then
         j2=FabricLine_numrecord(i)
         do j=1,FabricLine_target_num(i)
             k=FabricLine_target_point_num(i,j)
             tmpcoord(1:3) =
     &          (FabricLine_X_na(k,1:3)
     &          -FabricLine_Xtar_na(j,1:3))

             include "distIBM_target_k_rampfn.Fi"               
             if(time_alphaf .le. FabricLine_target_k_link(i,j)) then
                ksh_tmp=FabricLine_target_k_link(i,j)*target_timefn
             else
                ksh_tmp=0.0
             endif
             FabricLine_force_points(j,1:3)
     &          =k_link*tmpcoord(1:3)*ksh_tmp

             ddcont=timeMarchcoef(1)*k_link*ksh_tmp
             noj=noi+k
             aamat_fbc(noj,noj)          
     &             =aamat_fbc(noj,noj)          +ddcont
             aamat_fbc(noj+j2,noj+j2)    
     &             =aamat_fbc(noj+j2,noj+j2)    +ddcont
             aamat_fbc(noj+2*j2,noj+2*j2)
     &             =aamat_fbc(noj+2*j2,noj+2*j2)+ddcont

             tmpcoord2(1:3)=FabricLine_dX_na(k,1:3)
     &                     -FabricLine_dXtar_na(j,1:3)

             tmpcoord(1:3)
     &              = cs_ibm_target(i2g)*k_link*tmpcoord2(1:3)*ksh_tmp

             FabricLine_force_points(j,1:3)
     &              =FabricLine_force_points(j,1:3)+tmpcoord(1:3)

             ddcont=timeMarchcoef(3)*k_link*ksh_tmp
             noj=noi+k
             aamat_fbc(noj,noj)          
     &             =aamat_fbc(noj,noj)          +ddcont
             aamat_fbc(noj+j2,noj+j2)    
     &             =aamat_fbc(noj+j2,noj+j2)    +ddcont
             aamat_fbc(noj+2*j2,noj+2*j2)
     &             =aamat_fbc(noj+2*j2,noj+2*j2)+ddcont
         enddo
      endif


        if(ndim .gt. 2) then
          ddcont=(min_grid_x*min_grid_y*min_grid_z)**(1.0/3.0)
        else
          ddcont=sqrt(min_grid_x*min_grid_y)
        endif
       
       i=ibdy
       i2g=ibdyg
       if(ContactForceFlag(i2g))then
       include "distIBM_Contact_Coeffn.Fi"   
       if(contacttype .ne. -1) then
         write(*,*) 'Implicit version is not implemented yet!'
         STOP
       endif
       do ibkt2=1,NBucketnum

             ibktmp1=mod(ibkt2,IBucketnum(1)*IBucketnum(2))
             if(ibktmp1 .eq. 0) ibktmp1=IBucketnum(1)*IBucketnum(2)

             ibktx=mod(ibktmp1,IBucketnum(1))
             if(ibktx .eq. 0) ibktx=IBucketnum(1)

             ibkty=int((ibktmp1-1)/IBucketnum(1))+1
             ibktz=int((ibkt2-1)/(IBucketnum(1)*IBucketnum(2)))+1

             ibktmin(1)=max(1,ibktx-1)
             ibktmax(1)=min(IBucketnum(1),ibktx+1)

             ibktmin(2)=max(1,ibkty-1)
             ibktmax(2)=min(IBucketnum(2),ibkty+1)

             ibktmin(3)=max(1,ibktz-1)
             ibktmax(3)=min(IBucketnum(3),ibktz+1)
             do ibkt_i=PBucket(i2g,ibkt2),PBucket(i2g,ibkt2+1)-1
                j2 =sBucket_fbc(i,ibkt2,ibkt_i)
                do i2=1,nFixcontact
                        if((
     &                     abs((X_na_fbc(j2,2)-
     &                          xFixcontact(i2,2))/min_grid_y)
     &                    .le.12.0) .and.
     &                    (abs((X_na_fbc(j2,1)-
     &                          xFixcontact(i2,1))/min_grid_x)
     &                    .le.12.0) .and.
     &                    (abs((X_na_fbc(j2,3)-
     &                          xFixcontact(i2,3))/min_grid_z)
     &                    .le.12.0) ) then
                              ksh_tmp=X_na_fbc(j2,1)

                              temp_ibm1= 
     &                              ((X_na_fbc(j2,2)
     &                               -xFixcontact(i2,2))
     &                           /(2.0*min_grid_y) )
                              call delta_fun(delta_typey,temp_ibm1,fn2)
                              temp_ibm2= 
     &                              ((ksh_tmp
     &                               -xFixcontact(i2,1))
     &                           /(2.0*min_grid_x) )
                              call delta_fun(delta_typex,temp_ibm2,fn1)
                              if(ndim .gt. 2)  then 
                                 temp_ibm3= 
     &                              ((X_na_fbc(j2,3)
     &                               -xFixcontact(i2,3))
     &                              /(2.0*min_grid_z) )
                                  call 
     &                              delta_fun(delta_typez,temp_ibm3,fn3)
                              else
                                   temp_ibm3=0.0
                                   fn3=1.0
                              endif
                              temp3_ibm=
     &                        sqrt((temp_ibm1*min_grid_y)**2
     &                            +(temp_ibm2*min_grid_x)**2
     &                            +(temp_ibm3*min_grid_z)**2)*2.00
     &                            +1.0d-9
                              f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                               *ds_ibm_fbc(i,j2)*impactpen(1)
     &                               /(min_grid_x*min_grid_y*min_grid_z)
     &                               *(ksh_tmp-xFixcontact(i2,1))
     &                               /temp3_ibm
                              f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                              *ds_ibm_fbc(i,j2)*impactpen(1)
     &                              /(min_grid_x*min_grid_y*min_grid_z)
     &                              *(X_na_fbc(j2,2)
     &                               -xFixcontact(i2,2))
     &                               /temp3_ibm
                              if(ndim .gt. 2)  
     &                           f_impuls3_fbc(i,j2)=
     &                              f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                              *ds_ibm_fbc(i,j2)*impactpen(1)
     &                              /(min_grid_x*min_grid_y*min_grid_z)
     &                              *(X_na_fbc(j2,3)
     &                               -xFixcontact(i2,3))
     &                               /temp3_ibm
                       endif
                 enddo
              enddo
       enddo

       if(contacttype .eq. -1) then        
        if (i2g .le. nr_ibm_f) then
           do ibkt2=1,NBucketnum

             ibktmp1=mod(ibkt2,IBucketnum(1)*IBucketnum(2))
             if(ibktmp1 .eq. 0) ibktmp1=IBucketnum(1)*IBucketnum(2)

             ibktx=mod(ibktmp1,IBucketnum(1))
             if(ibktx .eq. 0) ibktx=IBucketnum(1)

             ibkty=int((ibktmp1-1)/IBucketnum(1))+1
             ibktz=int((ibkt2-1)/(IBucketnum(1)*IBucketnum(2)))+1

             ibktmin(1)=max(1,ibktx-1)
             ibktmax(1)=min(IBucketnum(1),ibktx+1)

             ibktmin(2)=max(1,ibkty-1)
             ibktmax(2)=min(IBucketnum(2),ibkty+1)

             ibktmin(3)=max(1,ibktz-1)
             ibktmax(3)=min(IBucketnum(3),ibktz+1)
             do ibkt_i=PBucket(i2g,ibkt2),PBucket(i2g,ibkt2+1)-1
                j2 =sBucket_fbc(i,ibkt2,ibkt_i)
               do i2=1,nr_ibm_fbc
                  i3g=Ilocglb_fbc(i2)
                  if(i3g .le. nr_ibm_fb) then
                  if(i2 .ne. i) then
                    do ibkts1=ibktmin(1),ibktmax(1)
                    do ibkts2=ibktmin(2),ibktmax(2)
                    do ibkts3=ibktmin(3),ibktmax(3)
                      ibkt=
     &                       ibkts1
     &                     +(ibkts2-1)*IBucketnum(1)
     &                     +(ibkts3-1)*IBucketnum(1)*IBucketnum(2)

                      do ibkt2_i=PBucket(i3g,ibkt),PBucket(i3g,ibkt+1)-1
                         j =sBucket_fbc(i2,ibkt,ibkt2_i) 

                           outcont(1)=X_na_fbc(j2,1)-
     &                                gx_ibm_fbc(i2,j)
                           outcont(2)=X_na_fbc(j2,2)-
     &                                gy_ibm_fbc(i2,j)
                           outcont(3)=X_na_fbc(j2,3)-
     &                                gz_ibm_fbc(i2,j)                    
                           outcont2(1)=normalpres_fbc(j2,1)
                           outcont2(2)=normalpres_fbc(j2,2)
                           outcont2(3)=normalpres_fbc(j2,3)
                        ksh_tmp=sqrt(
     &                     outcont(1)**2+
     &                     outcont(2)**2+
     &                     outcont(3)**2)

                     dncont=dot_product(outcont(1:3),outcont2(1:3))
                     dncont=-dncont/(abs(dncont)+eps)

                        temp_ibm2=time_alphaf  


                        if( (ksh_tmp/ddcont   .le. 10.0) 
     &                .and. (temp_ibm2 .gt. 0.05) ) then
                              temp_ibm1= 
     &                            max(ksh_tmp*dncont/ddcont,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)

                              temp3_ibm=ksh_tmp
                              dxcont(1)=temp_ibm1 
                              dxcont(2)=1.0/(1+exp(10*(dxcont(1)-0.0)))
                              dxcont(3)=impactpen(1)
     &                            +dxcont(2)*impactpen(2)
                              dxcont(3)=dxcont(3)*dncont

                              ksh_tmp=1.0 

                              f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                               *( X_na_fbc(j2,1)
     &                                 -gx_ibm_fbc(i2,j))
     &                               /temp3_ibm


                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)*ksh_tmp
     &                              *(X_na_fbc(j2,2)
     &                               -gy_ibm_fbc(i2,j))
     &                               /temp3_ibm
                              if(ndim .gt. 2) then
                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)*ksh_tmp
     &                              *(X_na_fbc(j2,3)
     &                               -gz_ibm_fbc(i2,j))
     &                               /temp3_ibm
                              endif
                         endif
                     end do  !ibkt2_i
                     enddo   !ibkts1
                     enddo   !ibkts2
                     enddo   !ibkts3
                  endif
                  endif
               enddo   !i2i

!============  This part is skiped in implicit version END

             enddo !ibkt_i
             enddo !ibkt2
             if(contactplanesFlag(ibdyg)) then
               if(1==0) then
               do ibkt2=1,Ncontactplanes(ibdyg) 
                contactplane_point(1:3)= 
     &                       contactplanesPara(ibdyg,ibkt2,1:3)
                contactplane_n(1:3)=
     &                       contactplanesPara(ibdyg,ibkt2,4:6)

                dncont=0.0
                do i2=1,3
                   dncont=dncont+contactplane_n(i2) 
     &                          *contactplane_point(i2)
                enddo
                contactplane_n(4)=-dncont  !plane defined as ax+by+cz+d=0, here we save d

               temp_ibm2=s_function((time_alphaf-contact_time_fbc(i,1))
     &                              /contact_time_fbc(i,2) )
                                
               temp_ibm2=time_alphaf

               do j2=1,ns_ibm_r_fbc(i)

                  mattmp_eye(1:3,1:3)=0.0

                  ksh_tmp=contactplane_n(1) 
     &                   *X_na_fbc(j2,1) 
     &                   +contactplane_n(2) 
     &                   *X_na_fbc(j2,2) 
     &                   +contactplane_n(3) 
     &                   *X_na_fbc(j2,3) 
     &                   +contactplane_n(4)

! KSH=sum_{1:3}ni.xi +n4     d KSH/ dxi  =ni
! xp=KSH/2dx -0.5            d xp / dKSH =1/2dx     ==>tmpv3(1) 
! y=xp (xp>=0)  & =0 (xp<0)  d  y / dxp  = {1 or 0} ==>tmpv2(1)
! y2=0 (xp>=0)  & =xp(xp<0)  d y2 / dxp  = {0 or 1}
! fn=deltafn(y)              d  f / dy   =df(y)    *dxp/dKSH==>tmpv3(2)
! A = 2*(1/(1+exp(6*y2))-0.5)d  A / dy2  =dg(y)    *dy2/dxp==>tmpv2(2)

                  tmpv3(3)=0.0
                  if(ksh_tmp/ddcont   .le. 8.0) then
                              tmpv3(1)=1.0/(2*ddcont)

                              temp_ibm1= 
     &                            max(ksh_tmp/(2*ddcont)-0.5,0.0)
                              call delta_fun(delta_typey,temp_ibm1,fn1)
                              call Driv_delta_fun(delta_typey, 
     &                                            temp_ibm1,tmpv3(2))
                              tmpv3(2)=tmpv3(2)*tmpv3(1)  


                              temp3_ibm=ksh_tmp/(2*ddcont)-0.5
                              dxcont(1)=temp3_ibm     

                              if(temp3_ibm .le.0.0) then 
                                tmpv2(1)=0.0
                                dxcont(2)=2.0*(
     &                         1.0/(1+exp(6.0*(dxcont(1)-0.0)))-0.5)
                               tmpv2(2)=-(12.0*exp(6.0*dxcont(1)))
     &                                  /(exp(6.0*dxcont(1)) + 1.0)**2
                              else
                                tmpv2(1)=tmpv3(2)   !final df/dxj
                                tmpv2(2)=0.0        !final dA/dxj
                                dxcont(2)=0.0
                              endif
                              dxcont(3)=(impactpen(1)
     &                            +dxcont(2)*impactpen(2))
     &                            *contact_coef_fbc(i,1,j2)*temp_ibm2

                              tmpv3(3)=(
     &                             tmpv2(2)*impactpen(2))
     &                            *contact_coef_fbc(i,1,j2)*temp_ibm2
     &                            *tmpv3(1)

                              tmpv2(3)=2.0*areapnt_fbc(i,j2)
     &                                *(tmpv2(1)*dxcont(3)
     &                                 +fn1*tmpv3(3))

                               f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)
     &                               *contactplane_n(1)

                              f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                               *dxcont(3)
     &                              *contactplane_n(2)

                              if(ndim .gt. 2) then
                                 f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               fn1*2.0*areapnt_fbc(i,j2)
     &                              *dxcont(3)
     &                              *contactplane_n(3)
                              endif
                              do j=1,3
                               tmpv2(1)=contactplane_n(j)
                               ibktmin(1)=(j-1)
     &                           *(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+j2
                               do k=1,3
                                 tmpv2(2)=contactplane_n(k)
                                 ibktmin(2)=(k-1)
     &                           *(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+j2

                                  aamat_fbc(ibktmin(1),ibktmin(2))
     &                           =aamat_fbc(ibktmin(1),ibktmin(2))
     &                           -timeMarchcoef(1)
     &                           *tmpv2(1)*tmpv2(2)*tmpv2(3)
                               enddo
                             enddo
                   endif
                enddo !j2
              enddo !ibkt2

              else

               do ibkt2=1,Ncontactplanes(ibdyg) 
                contactplane_point(1:3)= 
     &                       contactplanesPara(ibdyg,ibkt2,1:3)
                contactplane_n(1:3)=
     &                       contactplanesPara(ibdyg,ibkt2,4:6)

                dncont=0.0
                do i2=1,3
                   dncont=dncont+contactplane_n(i2) 
     &                          *contactplane_point(i2)
                enddo
                contactplane_n(4)=-dncont  !plane defined as ax+by+cz+d=0, here we save d

               temp_ibm2=s_function((time_alphaf-contact_time_fbc(i,1))
     &                              /contact_time_fbc(i,2) )
                                
               temp_ibm2=time_alphaf

               do j2=1,ns_ibm_r_fbc(i)

                  ksh_tmp=contactplane_n(1) 
     &                   *X_na_fbc(j2,1) 
     &                   +contactplane_n(2) 
     &                   *X_na_fbc(j2,2) 
     &                   +contactplane_n(3) 
     &                   *X_na_fbc(j2,3) 
     &                   +contactplane_n(4)
                  ksh_tmp=-ksh_tmp

                  tmpv3(3)=0.0
                  if(abs(ksh_tmp)/ddcont   .le. 15.0) then

                      tmpv3(1)=
     &                 impactpen(1)/contact_coef_fbc(i,ibkt2,j2)/ddcont
                      if(ksh_tmp .gt. 0) then
                          tmpv3(2)=
     &                      0.5*tmpv3(1)*contact_coef_fbc(i,ibkt2,j2)
     &                      +tmpv3(1)*ksh_tmp
                          tmpv2(2)=-tmpv3(1)
                      elseif(ksh_tmp 
     &                        .gt. -contact_coef_fbc(i,ibkt2,j2)) then
                          tmpv3(2)=
     &                      tmpv3(1)/(2.0*contact_coef_fbc(i,ibkt2,j2))
     &                      *(ksh_tmp+contact_coef_fbc(i,ibkt2,j2))**2
                          tmpv2(2)=
     &                      -tmpv3(1)/(contact_coef_fbc(i,ibkt2,j2))
     &                         *(ksh_tmp+contact_coef_fbc(i,ibkt2,j2))
                      else
                          tmpv3(2)=0.0
                          tmpv2(2)=0.0
                      endif
                      f_impuls1_fbc(i,j2)=
     &                                f_impuls1_fbc(i,j2)+
     &                               tmpv3(2)*areapnt_fbc(i,j2)
     &                               *contactplane_n(1)

                      f_impuls2_fbc(i,j2)=
     &                                f_impuls2_fbc(i,j2)+
     &                               tmpv3(2)*areapnt_fbc(i,j2)
     &                              *contactplane_n(2)

                      if(ndim .gt. 2) then
                          f_impuls3_fbc(i,j2)=
     &                               f_impuls3_fbc(i,j2)+
     &                               tmpv3(2)*areapnt_fbc(i,j2)
     &                              *contactplane_n(3)
                      endif
                      do j=1,3
                            tmpv2(1)=contactplane_n(j)
                            ibktmin(1)=(j-1)
     &                           *(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+j2
                            do k=1,3
                                 tmpv2(3)=contactplane_n(k)
                                 ibktmin(2)=(k-1)
     &                           *(ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i))+j2

                                  aamat_fbc(ibktmin(1),ibktmin(2))
     &                           =aamat_fbc(ibktmin(1),ibktmin(2))
     &                           -timeMarchcoef(1)*areapnt_fbc(i,j2)
     &                           *tmpv2(1)*tmpv2(2)*tmpv2(3)
                            enddo
                       enddo
                   endif
                enddo !j2
             enddo !ibkt2
             endif
            endif !contactplanesFlag

             if(channelcontacty) then
             do j2=1,ns_ibm_r_fbc(i)
               do i2=1,2  !with channel bndry in y
                     if(i2 .eq. 1) then
                        h_channel=gy(nygrid_ibm)
                        if (gy_ibm_massive_fbc(i,j2) 
     &                      .lt. h_channel) then
                            ksh_tmp=X_na_fbc(j2,2)
                        else
                           ksh_tmp=h_channel-1.0d-9
                        endif
                     else
                        h_channel=gy(2)
                        if (gy_ibm_massive_fbc(i,j2) 
     &                      .gt. h_channel) then
                            ksh_tmp=X_na_fbc(j2,2)
                        else
                           ksh_tmp=h_channel+1.0d-9
                        endif
                     endif
                     do j=1,nxgrid_ibm
                       do k=1,nzgrid_ibm
                        if((
     &                  abs((X_na_fbc(j2,2)-h_channel)
     &                       /min_grid_y)
     &                 .le.12.0) .and.
     &                 (abs((X_na_fbc(j2,1)-gx(j))
     &                       /min_grid_x)
     &                 .le.12.0) .and.
     &                 (abs((X_na_fbc(j2,3)-gz(k))
     &                       /min_grid_z)
     &                 .le.12.0) ) then

                         temp_ibm1= 
     &                         ((ksh_tmp-h_channel)
     &                     /(min_grid_y))

                           call delta_fun(delta_typey,temp_ibm1,fn2)

                          temp_ibm2= 
     &                        ((X_na_fbc(j2,1)-gx(j))
     &                     /(min_grid_x))

                           call delta_fun(delta_typex,temp_ibm2,fn1)

                          if(ndim .gt. 2) then
                             temp_ibm3= 
     &                          ((X_na_fbc(j2,3)-gz(k))
     &                       /(min_grid_z) )
                           call delta_fun(delta_typez,temp_ibm3,fn3)
                          else
                             temp_ibm3=0.0
                             fn3=1.0
                          endif

                         temp3_ibm=
     &                   sqrt((temp_ibm1*min_grid_y)**2
     &                      +(temp_ibm2*min_grid_x)**2
     &                      +(temp_ibm3*min_grid_z)**2)+1.0d-9

                          f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                      *(X_na_fbc(j2,1)-gx(j))/temp3_ibm
                          f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(ksh_tmp-h_channel)/temp3_ibm
                          if(ndim .gt. 2) 
     &                    f_impuls3_fbc(i,j2)= f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                      *(X_na_fbc(j2,3)-gz(k))/temp3_ibm
                        endif
                    
                   end do !k=1,nz 
                 end do !j=1,nx
               enddo  !i2=1,2
             end do    !j2
             endif !channelcontacty

             if((channelcontactz) .and. (ndim .gt. 2)) then
             do j2=1,ns_ibm_r_fbc(i)

               do i2=1,2  !with channel bndry in z

                     if(i2 .eq. 1) then
                        h_channel=gz(nzgrid_ibm)
                        if (X_na_fbc(j2,3) 
     &                      .lt. h_channel) then
                            ksh_tmp=X_na_fbc(j2,3)
                        else
                            ksh_tmp=h_channel-1.0d-9
                        endif
                     else
                        h_channel=gz(2)
                        if (X_na_fbc(j2,3) 
     &                      .gt. h_channel) then
                            ksh_tmp=X_na_fbc(j2,3)
                        else
                           ksh_tmp=h_channel+1.0d-9
                        endif
                     endif
                     do j=1,nxgrid_ibm
                       do k=1,nygrid_ibm
                        if((
     &                  abs((X_na_fbc(j2,2)-gy(k))
     &                       /min_grid_y)
     &                 .le.12.0) .and.
     &                 (abs((X_na_fbc(j2,1)-gx(j))
     &                       /min_grid_x)
     &                 .le.12.0) .and.
     &                 (abs((X_na_fbc(j2,3)-h_channel)
     &                       /min_grid_z)
     &                 .le.12.0) ) then

                        temp_ibm1= 
     &                         ((X_na_fbc(j2,2)-gy(k))
     &                       /(min_grid_y) )
                           call delta_fun(delta_typey,temp_ibm1,fn2)

                        temp_ibm2= 
     &                        ((X_na_fbc(j2,1)-gx(j))
     &                     /(min_grid_x))
                           call delta_fun(delta_typex,temp_ibm2,fn1)

                        temp_ibm3= 
     &                          ((ksh_tmp-h_channel)
     &                       /(min_grid_z) )
                           call delta_fun(delta_typez,temp_ibm3,fn3)


                         temp3_ibm=
     &                   sqrt((temp_ibm1*min_grid_y)**2
     &                      +(temp_ibm2*min_grid_x)**2
     &                      +(temp_ibm3*min_grid_z)**2)+1.0d-9

                          f_impuls1_fbc(i,j2)= f_impuls1_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(X_na_fbc(j2,1)-gx(j))
     &                       /temp3_ibm

                          f_impuls2_fbc(i,j2)= f_impuls2_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(X_na_fbc(j2,2)-gy(k))
     &                       /temp3_ibm

                          f_impuls3_fbc(i,j2)= f_impuls3_fbc(i,j2)+
     &                               fn1*fn2*fn3*areapnt_fbc(i,j2)
     &                        *ds_ibm_fbc(i,j2)*impactpen(1)
     &                        /(min_grid_x*min_grid_y*min_grid_z)
     &                        *(ksh_tmp-h_channel)/temp3_ibm
                        endif
                    
                   end do !k=1,nz 
                 end do !j=1,nx
               enddo  !i2=1,2
             end do    !j2
             endif !channelcontactz
          endif   !for if ((i .le. nr_ibm_f).and.(i .ge. 1)) then
       endif  !contacttypeif of contact model
       endif  !ContactForceFlag(i)

!here 2-16-2015 7:02pm
c calculation of total forces 
       i=ibdy
       i2g=ibdyg

        do j=1,ns_ibm_r_fbc(i)
             fibm1_fbc(i,j)=fibm1_fbc(i,j)
     &          +f_link1_fbc(i,j)
             fibm2_fbc(i,j)=fibm2_fbc(i,j)
     &          +f_link2_fbc(i,j)
             fibm3_fbc(i,j)=fibm3_fbc(i,j)
     &          +f_link3_fbc(i,j)
        end do

       do j=1,ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i) 
           ksh_tmp=areapnt_fbc(i,j)*cs_ibm(i2g)
           f_link1_fbc(i,j)=(mms_fbc(j,j)*
     &        (timeMarchcoef(2)+propDamp(i2g,1)*timeMarchcoef(3))
     &        +ksh_tmp*timeMarchcoef(3))*X_np1_fbc(j,1)
     &        -mms_fbc(j,j)*ddX_in_fbc(j,1)
     &        -(ksh_tmp+
     &        +propDamp(i2g,1)*mms_fbc(j,j))*dX_in_fbc(j,1)

           f_link2_fbc(i,j)=(mms_fbc(j,j)*
     &        (timeMarchcoef(2)+propDamp(i2g,1)*timeMarchcoef(3))
     &        +ksh_tmp*timeMarchcoef(3))*X_np1_fbc(j,2)
     &        -mms_fbc(j,j)*ddX_in_fbc(j,2)
     &        -(ksh_tmp+
     &        +propDamp(i2g,1)*mms_fbc(j,j))*dX_in_fbc(j,2)

           f_link3_fbc(i,j)=(mms_fbc(j,j)*
     &        (timeMarchcoef(2)+propDamp(i2g,1)*timeMarchcoef(3))
     &        +ksh_tmp*timeMarchcoef(3))*X_np1_fbc(j,3)
     &        -mms_fbc(j,j)*ddX_in_fbc(j,3)
     &        -(ksh_tmp+
     &        +propDamp(i2g,1)*mms_fbc(j,j))*dX_in_fbc(j,3)
       end do


      np=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)

      do ie1=0,2
      ie2=0
      f_link1_fbc(i,1:np)=
     &f_link1_fbc(i,1:np)
     & +matmul(kkb(ie2*np+1:(ie2+1)*np,ie1*np+1:(ie1+1)*np),
     &         propDamp(2,i2g)*
     &         (timeMarchcoef(3)*
     &          X_np1_fbc(1:np,ie1+1)-dX_in_fbc(1:np,ie1+1))
     &          + X_na_fbc(1:np,ie1+1) 
     &        ) 

      ie2=1
      f_link2_fbc(i,1:np)=
     &f_link2_fbc(i,1:np)
     & +matmul(kkb(ie2*np+1:(ie2+1)*np,ie1*np+1:(ie1+1)*np),
     &         propDamp(2,i2g)*
     &         (timeMarchcoef(3)*
     &          X_np1_fbc(1:np,ie1+1)-dX_in_fbc(1:np,ie1+1))
     &          + X_na_fbc(1:np,ie1+1) 
     &        ) 

      ie2=2
      f_link3_fbc(i,1:np)=
     &f_link3_fbc(i,1:np)
     & +matmul(kkb(ie2*np+1:(ie2+1)*np,ie1*np+1:(ie1+1)*np),
     &         propDamp(2,i2g)*
     &         (timeMarchcoef(3)*
     &          X_np1_fbc(1:np,ie1+1)-dX_in_fbc(1:np,ie1+1))
     &          + X_na_fbc(1:np,ie1+1) 
     &        ) 
      enddo
      noi=np
      if(FabricMeshFlag_fbc(i)) then
         noj=3*noi
         noi=FabricMesh_numrecord(i)
         do ie1=0,2
         ie2=0
         f_link1_fbc(i,1:np)=
     &   f_link1_fbc(i,1:np)
     &   +matmul(kkb(ie2*np+1:(ie2+1)*np,noj+ie1*noi+1:noj+(ie1+1)*noi),
     &            FabricMesh_attr(i,j,iMpD0_3)*
     &            (timeMarchcoef(3)*
     &             FabricMesh_X_np1(1:noi,ie1+1)
     &             -FabricMesh_dX_in(1:noi,ie1+1))
     &             + FabricMesh_X_na(1:noi,ie1+1) 
     &           ) 

         ie2=1
      f_link2_fbc(i,1:np)=
     &f_link2_fbc(i,1:np)
     &   +matmul(kkb(ie2*np+1:(ie2+1)*np,noj+ie1*noi+1:noj+(ie1+1)*noi),
     &            FabricMesh_attr(i,j,iMpD0_3)*
     &            (timeMarchcoef(3)*
     &             FabricMesh_X_np1(1:noi,ie1+1)
     &             -FabricMesh_dX_in(1:noi,ie1+1))
     &             + FabricMesh_X_na(1:noi,ie1+1) 
     &           ) 

         ie2=2
      f_link3_fbc(i,1:np)=
     &f_link3_fbc(i,1:np)
     &   +matmul(kkb(ie2*np+1:(ie2+1)*np,noj+ie1*noi+1:noj+(ie1+1)*noi),
     &            FabricMesh_attr(i,j,iMpD0_3)*
     &            (timeMarchcoef(3)*
     &             FabricMesh_X_np1(1:noi,ie1+1)
     &             -FabricMesh_dX_in(1:noi,ie1+1))
     &             + FabricMesh_X_na(1:noi,ie1+1) 
     &           ) 
         enddo      
         noi=np+noi
      endif
      if(FabricLineFlag_fbc(i)) then
         noj=3*noi
         noi=FabricLine_numrecord(i)
         do ie1=0,2
         ie2=0
         f_link1_fbc(i,1:np)=
     &   f_link1_fbc(i,1:np)
     &   +matmul(kkb(ie2*np+1:(ie2+1)*np,noj+ie1*noi+1:noj+(ie1+1)*noi),
     &            FabricLine_attr(i,j,iLpD0_3)*
     &            (timeMarchcoef(3)*
     &             FabricLine_X_np1(1:noi,ie1+1)
     &             -FabricLine_dX_in(1:noi,ie1+1))
     &             + FabricLine_X_na(1:noi,ie1+1) 
     &           ) 

         ie2=1
         f_link2_fbc(i,1:np)=
     &   f_link2_fbc(i,1:np)
     &   +matmul(kkb(ie2*np+1:(ie2+1)*np,noj+ie1*noi+1:noj+(ie1+1)*noi),
     &            FabricLine_attr(i,j,iLpD0_3)*
     &            (timeMarchcoef(3)*
     &             FabricLine_X_np1(1:noi,ie1+1)
     &             -FabricLine_dX_in(1:noi,ie1+1))
     &             + FabricLine_X_na(1:noi,ie1+1) 
     &           ) 

         ie2=2
         f_link3_fbc(i,1:np)=
     &   f_link3_fbc(i,1:np)
     &   +matmul(kkb(ie2*np+1:(ie2+1)*np,noj+ie1*noi+1:noj+(ie1+1)*noi),
     &            FabricLine_attr(i,j,iLpD0_3)*
     &            (timeMarchcoef(3)*
     &             FabricLine_X_np1(1:noi,ie1+1)
     &             -FabricLine_dX_in(1:noi,ie1+1))
     &             + FabricLine_X_na(1:noi,ie1+1) 
     &           ) 
         enddo      

      endif

c calculation of total forces 
       i=ibdy

        do j=1,ns_ibm_r_fbc(i) 
           temp_ibm1=mms_fbc(j,j)-density_coefp(i2g)*areapnt_fbc(ibdy,j)
           fibm1_fbc(i,j)=-f_link1_fbc(i,j)
     &                  + (
     &                 -fibm1_fbc(i,j)   
     &                 +temp_ibm1
     &                  *fr*cos(the_grav)*sin(phi_grav)*timetemp2
     &                 ) 
     &                +f_impuls1_fbc(i,j)

           fibm2_fbc(i,j)=-f_link2_fbc(i,j)
     &                  + (
     &                 -fibm2_fbc(i,j)    
     &                 +temp_ibm1
     &                  *fr*sin(the_grav)*sin(phi_grav)*timetemp2
     &                 ) 
     &                 +f_impuls2_fbc(i,j)

           fibm3_fbc(i,j)=-f_link3_fbc(i,j)
     &                  +(
     &                 -fibm3_fbc(i,j)    
     &                 +temp_ibm1
     &                  *fr*cos(phi_grav)*timetemp2
     &                 ) 
     &                 +f_impuls3_fbc(i,j)
        end do
         tmpcoord(1:3)=(/
     &                    cos(the_grav)*sin(phi_grav)
     &                   ,sin(the_grav)*sin(phi_grav)
     &                   ,cos(phi_grav)
     &                   /)

      np=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
      if(FabricMeshFlag_fbc(i)) then
         do j=1,FabricMesh_numrecord(i)
           FabricMesh_force(i,j,1:3)=-1.0*(
     &          (FabricMesh_attr(i,j,iMm0)*
     &          ( timeMarchcoef(2)
     &           +FabricMesh_attr(i,j,iMpD0_1)*timeMarchcoef(3))
     &          +FabricMesh_attr(i,j,iMc0)*timeMarchcoef(3))
     &          *FabricMesh_X_np1(j,1:3)
     &          -FabricMesh_attr(i,j,iMm0)*FabricMesh_ddX_in(j,1:3)
     &          -( FabricMesh_attr(i,j,iMc0)+
     &            +FabricMesh_attr(i,j,iMpD0_1)
     &             *FabricMesh_attr(i,j,iMm0)   )
     &             *FabricMesh_dX_in(j,1:3)
     &           )
     &          -FabricLine_force_points(j,1:3)
     &          -FabricLine_force(i,j,1:3)
     &          +FabricMesh_attr(i,j,iMm0)
     &                   *fr*timetemp2*tmpcoord(1:3)
        enddo
       noi=3*np
       noj=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
       np=FabricMesh_numrecord(i)
       do ie2=0,2
       do ie1=0,2

       FabricMesh_force(i,1:np,ie2)=
     & FabricMesh_force(i,1:np,ie2)
     & -matmul(kkb(noi+ie2*np+1:noi+(ie2+1)*np,ie1*noj+1:(ie1+1)*noj),
     &         FabricMesh_attr(i,j,iMpD0_3)*
     &         (timeMarchcoef(3)*
     &          X_np1_fbc(1:noj,ie1+1)-dX_in_fbc(1:noj,ie1+1))
     &          + X_na_fbc(1:noj,ie1+1) 
     &        ) 
       enddo
       enddo
       do ie2=0,2
       do ie1=0,2
       FabricMesh_force(i,1:np,ie2)=
     & FabricMesh_force(i,1:np,ie2)
     & -matmul(kkb(noi+ie2*np+1:noi+(ie2+1)*np
     &            ,noi+ie1*np+1:noi+(ie1+1)*np),
     &         FabricMesh_attr(i,j,iMpD0_2)*
     &         (timeMarchcoef(3)*
     &          FabricMesh_X_np1(1:np,ie1+1)
     &          - FabricMesh_dX_in(1:np,ie1+1))
     &          + FabricMesh_X_na(1:np,ie1+1) 
     &        ) 
       enddo
       enddo
       np=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)+FabricMesh_numrecord(i)
      endif

      if(FabricLineFlag_fbc(i)) then
         do j=1,FabricLine_numrecord(i)
           FabricLine_force(i,j,1:3)=-1.0*(
     &          (FabricLine_attr(i,j,iLm0)*
     &          ( timeMarchcoef(2)
     &           +FabricLine_attr(i,j,iLpD0_1)*timeMarchcoef(3))
     &          +FabricLine_attr(i,j,iLc0)*timeMarchcoef(3))
     &          *FabricLine_X_np1(j,1:3)
     &          -FabricLine_attr(i,j,iLm0)*FabricLine_ddX_in(j,1:3)
     &          -( FabricLine_attr(i,j,iLc0)+
     &            +FabricLine_attr(i,j,iLpD0_1)
     &             *FabricLine_attr(i,j,iLm0)   )
     &             *FabricLine_dX_in(j,1:3)
     &           )
     &          -FabricLine_force_points(j,1:3)
     &          -FabricLine_force(i,j,1:3)
     &          +FabricLine_attr(i,j,iLm0)
     &                   *fr*timetemp2*tmpcoord(1:3)
        enddo
       noi=3*np
       noj=ns_ibm_r_fbc(i)+ns_ibm_i_fbc(i)
       np=FabricLine_numrecord(i)
       do ie2=0,2
       do ie1=0,2

       FabricLine_force(i,1:np,ie2)=
     & FabricLine_force(i,1:np,ie2)
     & -matmul(kkb(noi+ie2*np+1:noi+(ie2+1)*np,ie1*noj+1:(ie1+1)*noj),
     &         FabricLine_attr(i,j,iLpD0_3)*
     &         (timeMarchcoef(3)*
     &          X_np1_fbc(1:noj,ie1+1)-dX_in_fbc(1:noj,ie1+1))
     &          + X_na_fbc(1:noj,ie1+1) 
     &        ) 
       enddo
       enddo
       do ie2=0,2
       do ie1=0,2
       FabricLine_force(i,1:np,ie2)=
     & FabricLine_force(i,1:np,ie2)
     & -matmul(kkb(noi+ie2*np+1:noi+(ie2+1)*np
     &            ,noi+ie1*np+1:noi+(ie1+1)*np),
     &         FabricLine_attr(i,j,iLpD0_2)*
     &         (timeMarchcoef(3)*
     &          FabricLine_X_np1(1:np,ie1+1)
     &          - FabricLine_dX_in(1:np,ie1+1))
     &          + FabricLine_X_na(1:np,ie1+1) 
     &        ) 
       enddo
       enddo
      endif

!=====up here

      ksh_tmp=-1000.0
      k=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)      
      do np=1,ns_ibm_r_fbc(ibdy)  
         ksh_tmp=max(ksh_tmp,aamat_fbc(np,np))
         ksh_tmp=max(ksh_tmp,aamat_fbc(np+k,np+k))
         ksh_tmp=max(ksh_tmp,aamat_fbc(np+2*k,np+2*k))
      enddo
      np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      if(FabricMeshFlag_fbc(i)) then
         noi=FabricMesh_numrecord(i)
         do j=1,FabricMesh_numrecord(i)
            jq=j+3*np
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq,jq)) 
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq+noi,jq+2*noi))
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq+2*noi,jq+2*noi))
         enddo
         np=np+FabricMesh_numrecord(i)
      endif  
      if(FabricLineFlag_fbc(i)) then
         noi=FabricLine_numrecord(i)
         do j=1,FabricLine_numrecord(i)
            jq=j+3*np
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq,jq)) 
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq+noi,jq+2*noi))
            ksh_tmp=max(ksh_tmp,aamat_fbc(jq+2*noi,jq+2*noi))
         enddo
         np=np+FabricLine_numrecord(i)
      endif                  

      k=np
      noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      do np=1,ns_ibm_i_fbc(ibdy)  
         npg=ns_ibm_r_fbc(ibdy)+np
         bodypoint(1)=boundrylist_fbc(ibdy,np,1)
         bodypoint(2)=boundrylist_fbc(ibdy,np,2)
         bodypoint(3)=boundrylist_fbc(ibdy,np,3)

         if(bndycnd_fbc(ibdy,npg) .eq. 1) then
            do j=1,3
             aamat_fbc(npg+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(npg+(j-1)*noi,npg+(j-1)*noi)=ksh_tmp
             aamat_fbc(npg+(j-1)*noi,bodypoint(1)+(j-1)*noi)=
     &              aamat_fbc(npg+(j-1)*noi,bodypoint(1)+(j-1)*noi)
     &              -ksh_tmp
             aamat_fbc(npg+(j-1)*noi,bodypoint(2)+(j-1)*k)=
     &              aamat_fbc(npg+(j-1)*k,bodypoint(2)+(j-1)*noi)
     &              -ksh_tmp
             aamat_fbc(npg+(j-1)*noi,bodypoint(3)+(j-1)*noi)=
     &              aamat_fbc(npg+(j-1)*noi,bodypoint(3)+(j-1)*noi)
     &              +ksh_tmp
            enddo
          elseif(bndycnd_fbc(ibdy,npg) .eq. 2) then
            do j=1,3
             aamat_fbc(npg+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(npg+(j-1)*noi,npg+(j-1)*noi)=ksh_tmp

             aamat_fbc(bodypoint(1)+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(bodypoint(1)+(j-1)*noi,bodypoint(1)+(j-1)*noi)=
     &              ksh_tmp

             aamat_fbc(bodypoint(2)+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(bodypoint(2)+(j-1)*noi,bodypoint(2)+(j-1)*noi)=
     &              ksh_tmp
            enddo
          elseif(bndycnd_fbc(ibdy,npg) .eq. 3) then   
            do j=1,3
             aamat_fbc(npg+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(npg+(j-1)*noi,npg+(j-1)*noi)=ksh_tmp

             aamat_fbc(npg+(j-1)*noi,bodypoint(1)+(j-1)*noi)=
     &              aamat_fbc(npg+(j-1)*noi,bodypoint(1)+(j-1)*noi)
     &              -ksh_tmp
             aamat_fbc(npg+(j-1)*noi,bodypoint(2)+(j-1)*noi)=
     &              aamat_fbc(npg+(j-1)*noi,bodypoint(2)+(j-1)*noi)
     &              -ksh_tmp
             aamat_fbc(npg+(j-1)*noi,bodypoint(3)+(j-1)*noi)=
     &              aamat_fbc(npg+(j-1)*noi,bodypoint(3)+(j-1)*noi)
     &              +ksh_tmp

             aamat_fbc(bodypoint(1)+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(bodypoint(1)+(j-1)*noi,bodypoint(1)+(j-1)*noi)=
     &              ksh_tmp

             aamat_fbc(bodypoint(2)+(j-1)*noi,1:3*k)=0.0
             aamat_fbc(bodypoint(2)+(j-1)*noi,bodypoint(2)+(j-1)*noi)=
     &              ksh_tmp
            enddo
         endif
      end do   


      do np=1,ns_ibm_i_fbc(ibdy)  
         npg=ns_ibm_r_fbc(ibdy)+np
         bodypoint(1)=boundrylist_fbc(ibdy,np,1)
         bodypoint(2)=boundrylist_fbc(ibdy,np,2)
         bodypoint(3)=boundrylist_fbc(ibdy,np,3)
		 
         if(bndycnd_fbc(ibdy,npg) .eq. 1) then		 
            fibm1_fbc(ibdy,npg)=0.0
            fibm2_fbc(ibdy,npg)=0.0
            fibm3_fbc(ibdy,npg)=0.0
         elseif(bndycnd_fbc(ibdy,npg) .eq. 2) then
            fibm1_fbc(ibdy,npg)=ksh_tmp*coef_iter
     &      *(X0_np1_fbc(npg,1)-gx_bp_fbc(ibdy,npg))
            fibm1_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(1),1)-gx_bp_fbc(ibdy,bodypoint(1)))

            fibm1_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(2),1)-gx_bp_fbc(ibdy,bodypoint(2)))

            fibm2_fbc(ibdy,npg)=ksh_tmp*coef_iter
     &      *(X0_np1_fbc(npg,2)         -gy_bp_fbc(ibdy,npg))

            fibm2_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(1),2)-gy_bp_fbc(ibdy,bodypoint(1)))

            fibm2_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(2),2)-gy_bp_fbc(ibdy,bodypoint(2)))

            fibm3_fbc(ibdy,npg)=ksh_tmp*coef_iter
     &      *(X0_np1_fbc(npg,3)         -gz_bp_fbc(ibdy,npg))

            fibm3_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(1),3)-gz_bp_fbc(ibdy,bodypoint(1)))

            fibm3_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(2),3)-gz_bp_fbc(ibdy,bodypoint(2)))
		 
         elseif(bndycnd_fbc(ibdy,npg) .eq. 3) then	!need to change
             fibm1_fbc(ibdy,npg)=0.0

             fibm2_fbc(ibdy,npg)=0.0

             fibm3_fbc(ibdy,npg)=0.0

            fibm1_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(1),1)-gx_bp_fbc(ibdy,bodypoint(1)))

            fibm1_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(2),1)-gx_bp_fbc(ibdy,bodypoint(2)))

            fibm2_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(1),2)-gy_bp_fbc(ibdy,bodypoint(1)))

            fibm2_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(2),2)-gy_bp_fbc(ibdy,bodypoint(2)))

            fibm3_fbc(ibdy,bodypoint(1))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(1),3)-gz_bp_fbc(ibdy,bodypoint(1)))

            fibm3_fbc(ibdy,bodypoint(2))=
     &             ksh_tmp*coef_iter
     &      *(X0_np1_fbc(bodypoint(2),3)-gz_bp_fbc(ibdy,bodypoint(2)))

         endif
      enddo
      np=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      if(FabricMeshFlag_fbc(ibdy)) then
         do j=1,FabricMesh_target_num(ibdy)
            if(FabricMesh_flagfixed(ibdy,j) .eq. 1000) then
               do ie1=0,2
               jq2=FabricMesh_target_point_num(ibdy,j) 
               jq=jq2
     &           +3*np 
     &           +ie1*FabricMesh_numrecord(ibdy)
               aamat_fbc(jq,1:3*k)=0.0
               aamat_fbc(jq,jq)=ksh_tmp
               FabricMesh_force(i,jq2,ie1+1)=ksh_tmp*coef_iter 
     &                *( FabricMesh_X0_np1(jq2,ie1+1) 
     &                  -FabricMesh_coordbp(ibdy,jq,ie1+1) )
               enddo
            endif
         enddo
         np=np+FabricMesh_numrecord(ibdy)
      endif  
      if(FabricLineFlag_fbc(ibdy)) then
         do j=1,FabricLine_target_num(ibdy)
            if(FabricLine_flagfixed(ibdy,j) .eq. 1000) then
               do ie1=0,2
               jq2=FabricLine_target_point_num(ibdy,j) 
               jq=jq2
     &           +3*np 
     &           +ie1*FabricLine_numrecord(ibdy)
               aamat_fbc(jq,1:3*k)=0.0
               aamat_fbc(jq,jq)=ksh_tmp
               FabricLine_force(i,jq2,ie1+1)=ksh_tmp*coef_iter 
     &                *( FabricLine_X0_np1(jq2,ie1+1) 
     &                  -FabricLine_coordbp(ibdy,jq,ie1+1) )
               enddo
            endif
         enddo
         np=np+FabricLine_numrecord(ibdy)
      endif      

      if(allocated(aacsr))  then 
        deallocate(iacsr, jacsr,aacsr,x0LHS,vecRHS)
      endif
        allocate(iacsr(np+1),x0LHS(3,np),vecRHS(3,np))       
        ntemi=0
        do noj=1,3*np
        iacsr(noj)=ntemi+1
        do noi=1,3*np
           ksh_tmp=aamat_fbc(noj,noi)
           if(abs(ksh_tmp) .ge. 1.0d-16) then
            ntemi=ntemi+1
           endif
         enddo
         enddo
         ntermiMAX=ntemi+1 
         allocate(aacsr(ntermiMAX),jacsr(ntermiMAX))
        iacsr=0
        aacsr=0.0
        jacsr=0

      noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)

      do noj=1,noi
         x0LHS(1:3,noj)=(/
     &                   0.0
     &                  ,0.0
     &                  ,0.0
     &                  /)
         vecRHS(1:3,noj)=(/
     &                   fibm1_fbc(i,noj)
     &                  ,fibm2_fbc(i,noj)
     &                  ,fibm3_fbc(i,noj)
     &                  /)
      enddo
      if(FabricMeshFlag_fbc(ibdy)) then
        k=noi
        do jq2=1,FabricMesh_numrecord(ibdy)
           noj=k+jq2
           x0LHS(1:3,noj)= 0.0 
           vecRHS(1:3,noj)= FabricMesh_force(i,jq2,1:3)  
        enddo
        k=k+FabricMesh_numrecord(ibdy)
      endif     
      if(FabricLineFlag_fbc(ibdy)) then
        do jq2=1,FabricLine_numrecord(ibdy)
           noj=k+jq2
           x0LHS(1:3,noj)= 0.0 
           vecRHS(1:3,noj)= FabricLine_force(i,jq2,1:3)  
        enddo
      endif      


      ntemi=0
      do noj=1,3*np
      iacsr(noj)=ntemi+1
      do noi=1,3*np
         ksh_tmp=aamat_fbc(noj,noi)
         if(abs(ksh_tmp) .ge. 1.0d-16) then
            ntemi=ntemi+1
            aacsr(ntemi)=ksh_tmp
            jacsr(ntemi)=noi
         endif
      enddo
      enddo
      noj=1+3*np
      iacsr(noj)=ntemi+1 
      j=3*np


      if(SolverILU .eq. 1) then
      if(iter .eq. 1) then
       ilucal_flag=.true.
      else
       ilucal_flag=.false.
      endif
      else
       ilucal_flag=.true.
      endif

       call pmgmres_ilu2_crBigRHS (j
     &     ,ntermiMAX
     &     ,iacsr(1: 3*j+1)
     &     ,jacsr(1: ntermiMAX)
     &     ,aacsr(1: ntermiMAX)
     &     ,x0LHS(1,1:j)
     &     ,x0LHS(2,1:j)
     &     ,x0LHS(3,1:j)
     &     ,vecRHS(1,1:j)
     &     ,vecRHS(2,1:j)
     &     ,vecRHS(3,1:j)
     &     ,SolverOutiter,SolverIniter
     &     ,Solverabstol,Solverreltol,SolverPre,ilucal_flag,monitorON)

      noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      do jq=1,3
        X_np1_fbc(1:noi,jq) =X_np1_fbc(1:noi,jq)
     &                      +x0LHS(jq,1:noi)
      enddo
      if(FabricMeshFlag_fbc(ibdy)) then
        k=noi
        noi=FabricMesh_numrecord(ibdy)
        do jq=1,3
          FabricMesh_X_np1(1:noi,jq) =FabricMesh_X_np1(1:noi,jq)
     &                               +x0LHS(jq,k+1:k+noi)
        enddo
        noi=k+noi
      endif     
      if(FabricLineFlag_fbc(ibdy)) then
        k=noi
        noi=FabricLine_numrecord(ibdy)
        do jq=1,3
          FabricLine_X_np1(1:noi,jq) =FabricLine_X_np1(1:noi,jq)
     &                               +x0LHS(jq,k+1:k+noi)
        enddo
      endif  


      dxcont(1:3)=0.0
      outcont(1:3)=0.0
      noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
      do npg=1,noi
        dxcont(1:3)=dxcont(1:3)+x0LHS(1:3,npg)**2
        outcont(1:3)=outcont(1:3)
     &     +(X_np1_fbc(npg,1:3)-X_n_fbc(npg,1:3))**2
       enddo
      if(FabricMeshFlag_fbc(ibdy)) then
        k=noi
        noi=FabricMesh_numrecord(ibdy)
        do jq=1,noi
        npg=k+jq
        dxcont(1:3)=dxcont(1:3)+x0LHS(1:3,npg)**2
        outcont(1:3)=outcont(1:3)
     &     +(FabricMesh_X_np1(jq,1:3)-FabricMesh_X_n(jq,1:3))**2
        enddo
        noi=k+FabricMesh_numrecord(ibdy)
      endif     
      if(FabricLineFlag_fbc(ibdy)) then
        k=noi
        noi=FabricLine_numrecord(ibdy)
        do jq=1,noi
        npg=k+jq
        dxcont(1:3)=dxcont(1:3)+x0LHS(1:3,npg)**2
        outcont(1:3)=outcont(1:3)
     &     +(FabricLine_X_np1(jq,1:3)-FabricLine_X_n(jq,1:3))**2
        enddo
      endif  

       dxcont(1)=sqrt(dxcont(1)+dxcont(2)+dxcont(3))
       outcont(1)=sqrt(outcont(1)+outcont(2)+outcont(3))
       if(monitorON)
     & print*, 'Error= ',j,dxcont(1),outcont(1),dxcont(1)/outcont(1)

      noi=ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
        do npg=1,noi
           dX_np1_fbc(npg,1:3)=
     &       timeMarchcoef(10)*(X_np1_fbc(npg,1:3)-X_n_fbc(npg,1:3))
     &      +timeMarchcoef(11)*dX_n_fbc(npg,1:3)
     &      +timeMarchcoef(12)*ddX_n_fbc(npg,1:3)
          ddX_np1_fbc(npg,1:3)=
     &       timeMarchcoef(13)*(X_np1_fbc(npg,1:3)-X_n_fbc(npg,1:3))
     &      +timeMarchcoef(14)*dX_n_fbc(npg,1:3)
     &      +timeMarchcoef(15)*ddX_n_fbc(npg,1:3)
        enddo
      if(FabricMeshFlag_fbc(ibdy)) then
        do npg=1,FabricMesh_numrecord(ibdy)
           FabricMesh_dX_np1(npg,1:3)=
     &       timeMarchcoef(10)*(FabricMesh_X_np1(npg,1:3)
     &                         -FabricMesh_X_n(npg,1:3))
     &      +timeMarchcoef(11)*FabricMesh_dX_n(npg,1:3)
     &      +timeMarchcoef(12)*FabricMesh_ddX_n(npg,1:3)
          FabricMesh_ddX_np1(npg,1:3)=
     &       timeMarchcoef(13)*(FabricMesh_X_np1(npg,1:3)
     &                         -FabricMesh_X_n(npg,1:3))
     &      +timeMarchcoef(14)*FabricMesh_dX_n(npg,1:3)
     &      +timeMarchcoef(15)*FabricMesh_ddX_n(npg,1:3)
        enddo
      endif     
      if(FabricLineFlag_fbc(ibdy)) then
        do npg=1,FabricLine_numrecord(ibdy)
           FabricLine_dX_np1(npg,1:3)=
     &       timeMarchcoef(10)*(FabricLine_X_np1(npg,1:3)
     &                         -FabricLine_X_n(npg,1:3))
     &      +timeMarchcoef(11)*FabricLine_dX_n(npg,1:3)
     &      +timeMarchcoef(12)*FabricLine_ddX_n(npg,1:3)
          FabricLine_ddX_np1(npg,1:3)=
     &       timeMarchcoef(13)*(FabricLine_X_np1(npg,1:3)
     &                         -FabricLine_X_n(npg,1:3))
     &      +timeMarchcoef(14)*FabricLine_dX_n(npg,1:3)
     &      +timeMarchcoef(15)*FabricLine_ddX_n(npg,1:3)
        enddo
      endif  
!==============================================   END ITERATION
       if(dxcont(1)/outcont(1) .lt. maxErrorstruct) exit

      enddo       
      do npg=1,ns_ibm_r_fbc(ibdy)+ns_ibm_i_fbc(ibdy)
         gx_ibm_massive_fbc(ibdy,npg)=X_np1_fbc(npg,1)
         gy_ibm_massive_fbc(ibdy,npg)=X_np1_fbc(npg,2)
         gz_ibm_massive_fbc(ibdy,npg)=X_np1_fbc(npg,3)

         vibm1_fbc(ibdy,npg)=dX_np1_fbc(npg,1)
         vibm2_fbc(ibdy,npg)=dX_np1_fbc(npg,2)
         vibm3_fbc(ibdy,npg)=dX_np1_fbc(npg,3)

         aibm1_fbc(ibdy,npg)=ddX_np1_fbc(npg,1)
         aibm2_fbc(ibdy,npg)=ddX_np1_fbc(npg,2)
         aibm3_fbc(ibdy,npg)=ddX_np1_fbc(npg,3)
       
       enddo
       if(FabricMeshFlag_fbc(ibdy)) then
        do npg=1,FabricMesh_numrecord(ibdy)
           FabricMesh_coordMass(ibdy,npg,1:3)=FabricMesh_X_np1(npg,1:3)
           FabricMesh_v(ibdy,npg,1:3)=FabricMesh_dX_np1(npg,1:3)
           FabricMesh_a(ibdy,npg,1:3)=FabricMesh_ddX_np1(npg,1:3)
        enddo
       endif     
       if(FabricLineFlag_fbc(ibdy)) then
        do npg=1,FabricLine_numrecord(ibdy)
           FabricLine_coordMass(ibdy,npg,1:3)=FabricLine_X_np1(npg,1:3)
           FabricLine_v(ibdy,npg,1:3)=FabricLine_dX_np1(npg,1:3)
           FabricLine_a(ibdy,npg,1:3)=FabricLine_ddX_np1(npg,1:3)
        enddo
       endif  


        deallocate(
     &       aamat_fbc
     &      ,kkb
     &      ,mms_fbc)

      endif !Genalpha_timesolver((ibdyg))


