

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  20000   # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  1000.0  # maximum problem time
thickness = 0.1

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  -1.0   0.0 -0.5
geometry.prob_hi   =  3.0  1.0 1.5
ns.show_mem=1
ns.global_constraint=0

ns.FSI_flag=0 0 2
ns.mapspread=1.0e+9  # 0.25

mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0

Lp.smooth_type=2  # 0 GSRB 1 ICRB  2 ILU
# dx=1/256 if 4 levels
# for viscous force to be meaningful, dx/U=dx^2/mu
# mu=dx
amr.n_cell    = 64 16 32
amr.max_level =  2  # 4 is finer

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 20       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4  # number of buffer cells in error est
amr.grid_eff        = 0.75   # what constitutes an efficient grid MS
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 8    # block factor in grid generation MS
amr.check_int       = 500     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int	  = 500  # or 50 MS
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 64
amr.plotfile_on_restart=1
#amr.restart         = chk0010
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10


ns.redist_on_init=0

ns.cfl            = 0.9      # cfl number for hyperbolic system MS
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 0.0005      # coef of viscosity STABLE make 0.0005
mac.visc_abs_tol   = 1.0e-7
ns.init_iter      = 0      # number of init iters to def pressure
ns.gravity        = 0.0 # MS ZERO if no FREE SURFACE
ns.tension        = 0.0
#ns.fixed_dt	  = 0.004    # dz_coarse=1/64  max_level=1 => dz=1/128
                             # u dt = (1/2) dz  dt=1/256
ns.sum_interval   = 20       # timesteps between computing mass 
ns.usekluge       = 0

ns.axis_dir=2  # 0 whaletailup, 2 whalenormal, 3 open mouth, 
               # 4 animated whalenormal 5 whaletaildown 6 whalepregnant
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=5.0
ns.advbot=0.0
ns.adv_vel=1.0   # problem should always be scaled so this is 1
ns.adv_dir=1
ns.viscunburn=1.0
ns.viscburn=1.0
ns.viscvapor=1.0

ns.tcenter=1.0e-9  # adapt if radius of curvature<tcenter*dx
ns.solidradius=1.0   # adapt if solid radius of curv<solidradius*dx
ns.denwater=1.0
ns.denair=1.0
ns.denvapor=0.001
ns.xblob=0.5
ns.yblob=0.25
ns.zblob=0.25
ns.zblob2=999.0  # MS free surface height (999.0 if no free surface)
# scale
ns.radblob=0.2
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=562

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 1 3 5
ns.hi_bc          = 1 5 5

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

