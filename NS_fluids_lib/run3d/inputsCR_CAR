# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*

max_step  = 8000   # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  300  # maximum problem time

# ------------------ Dimention version 08/02/18 ---------------
# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0 0.0
geometry.prob_hi   =  5.0 5.0 5.0    # D*5/3 MS 

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
#Lp.v = 1

amr.n_cell    = 32 32 32
amr.max_level = 0
 
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2    # number of buffer cells in error est
amr.grid_eff        = 0.70   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 10
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024
#amr.restart         = chk1400
amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 5.0e-7  # truncate u if u dt_cut>dx

mac.mac_abs_tol    = 1.0e-8

ns.pcav=220.2726
ns.dencav=0.0001
ns.pchopp=220.2726
ns.denchopp=0.0001
ns.soundchopp=1.0
ns.bubble_pressure=0.0
ns.bubble_density=0.001

ns.hydrostatic_pressure=10.0
ns.visual_lo = -1 -1 -1
ns.visual_hi = 1024 1024 1024

ns.is_compressible=0

ns.redist_on_init=0                   

ns.conserve_vof=4   # default
ns.uncoupled_viscosity=0

ns.overlap=2.0
ns.is_twophase=1

ns.transposegradu=0
ns.is_viscoelastic=1
ns.elastic_time=4.641E-01      # relaxation time or Deborah number
ns.elastic_viscosity=9.99000999 # c*eta_solvent or c*eta_solvent/(eta_total*Re)
ns.polymer_factor=0.1        # parameter, 1/L
ns.Carreau_alpha=2.0
ns.Carreau_beta=1.0
ns.Carreau_n=0.5

ns.cfl            = 0.500      # cfl number for hyperbolic system

ns.init_shrink    = 1.0   # scale back initial timestep
ns.change_max     = 1.1 
ns.visc_coef      = 1.0      # viscosity 1.0 or
                            # (eta_solvent/eta_total)*(1/Re(based on eta_total))
mac.visc_abs_tol   = 1.0e-8
#ns.init_iter      = 5       # number of init iters to def pressure
ns.gravity        =-980   # gravity or 1/Fr
ns.gravityangle = 0.0
ns.tension        = 50.0     # interfacial tension coefficient or 1/We
#ns.fixed_dt	  = 0.0025   # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass 

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=-0.0
ns.adv_dir=3
ns.viscunburn=10.00      # (1+c)eta_s
ns.viscburn=1.800E-4       # bubble viscosity or viscosity ratio 
ns.viscvapor=1.800E-04      # bubble viscosity or viscosity ratio 
ns.tcenter=4.0  # adapt if radius<tcenter*dx    =1.0
ns.denspread=2.0
ns.denwater=1.0         # solvent density or 1.0
ns.denair=1.2E-03          # bubble density or density ratio 
ns.denvapor=1.2E-03        # bubble density or density ratio 
ns.xblob=2.5          # D*5/6 MS
ns.yblob=2.5          # D*5/6 MS
ns.zblob=2.5          # D*5/6 MS
ns.radblob=1.5		# bubble/drop radius
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=36

proj.bogus_value = 5.0e+5
proj.Pcode = 0                     
#proj.Pcode = 2

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 2 2 2
ns.hi_bc          = 2 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
# contour.level = 1
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => same as 2 except show Up and not Ud
# win_siz     = number of pixels in max window direction
#
# file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
# ---------  --------   ------  ----  ------  ------- ------- ---- ---- ---- 
contour.verbose = 1
contour.plot = triple triple 1     1    -1       2      600    2.5   0   yz
contour.plot = triple triple 1     1    -1       2      600    2.5   1   xz
contour.plot = triple triple 1     1    -1       2      400    2.5   2   xy
