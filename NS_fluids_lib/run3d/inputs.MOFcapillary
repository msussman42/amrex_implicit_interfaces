

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  5     # maximum timestep
stop_time =  1. # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0 -0.0024
geometry.prob_hi   =  0.0048 0.0048 0.0072  # units of cm
geometry.is_periodic = 0 0 0

# MARCO: this option is important since symmetric BCs on all walls.
# MARCO: ns.v=1 outputs residual which guides choice of 
#      projection_pressure_scale (scale chosen so that initial residual O(1))
ns.projection_pressure_scale=1000.0
ns.v=1
ns.initial_project_cycles=10  
ns.initial_cg_cycles=10  
fab.do_initval=0  # default is 1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 1000
mg.bot_atol = 1.0e-10   # the coarsest coarsening of level 0 in old version;  
                      # level 0 in the new version.
mg.rtol_b = -0.01
Lp.smooth_type=2
Lp.v = 0


ns.num_materials=2      
ns.num_species_var=0
ns.shock_timestep=2 2 2
# MARCO "refluxing" to correct the coarse grid solution 
#  not important for this problem I think.
ns.visual_option=-2 # tecplot (amr hierarchy preserved)

# MARCO: for testing on my laptop, I must use AMR instead of 128x128x256 grid
amr.n_cell    = 16 16 32
amr.max_level =  3
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4      # block factor in grid generation
amr.check_int       = -1  # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
# MARCO: changed from -1 to 5 for debugging
amr.plot_int        = 5
amr.plot_file       = plt 
#amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32  # old version: 48  new version: 16
#amr.restart         = chk000499
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.0000005  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-8  # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-8
ns.minimum_relative_error=1.0e-18

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max     = 1.1      
ns.visc_coef      = 1.0
mac.visc_abs_tol   = 2.0e-5
ns.gravity        = 0.0   # body force  (gravity in MKS units)
ns.gravityangle = 0.0
ns.tension        = 24. 
# MARCO: for the small length scales, there is no surface tension
# time step stability constraint. The viscous forces damp out quickly
# any surface tension waves (this is found using linear stability
# analysis "ns.use_lsa=1").
# The following option essentially prescribes a suitable "dt_max"
# at t=0.  (dt>dxmin/min_velocity_for_dt)
ns.min_velocity_for_dt=1.0
ns.use_lsa=1  # this is the default
#ns.fixed_dt	  = 1.0e-7     # hardwire dt
ns.sum_interval   = -1       # timesteps between computing mass 

ns.axis_dir=1
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0  # inflow velocity at nozzle at the bottom (cm/s)x10^-3
ns.adv_vel=0.0    # inflow of air from the side x10^-3
ns.adv_dir=1      # inflow in x-direction
ns.material_type=0 0 
ns.heatviscconst=0.0 0.0  # g/(cm s)
ns.viscconst=0.021 0.00019  # g/(cm s)
ns.denconst=0.825 0.041
ns.tempconst=290.36 290.36  # corresponds to 1atm
ns.pressure_error_cutoff=0.0 0.0 

ns.xblob=0.0024
ns.yblob=0.0024
ns.zblob=0.0024
ns.zblob2=12e-4 # wavelength
ns.radblob=3.58e-4  # max thickness (cm)
ns.radblob2=1.0e-4  # volume = 7.3226e-10 cm3
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=390


# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 3 3
ns.hi_bc          = 3 3 3

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE
