# log M=-3.69  M=|1-lambda|WE^3/(FR^2 RE^4)
# E0=|1-lambda| WE/FR^2= (1-.767541) (12.739097/0.117325)=25.4
# FR^2=U^2/(gL)=1/gravity=0.117325
# lambda=0.767541
# WE=1/tension=1/0.0784985=12.739097
# eta=1.94 or eta=100
# RE=1/0.0149254=67.0
# FOR 21.8:
# Two possible derivations of parameters are provided:
# log M=-3.69  M=|1-lambda|WE^3/(FR^2 RE^4)
# E0=|1-lambda| WE/FR^2= (1-.767541) (12.739097/0.117325)=25.4
# FR^2=U^2/(gL)=1/gravity=0.117325
# lambda=0.767541
# WE=1/tension=1/0.0784985=12.739097
# eta=1.94 
# RE=1/0.0149254=67.0
# to get E0=21.8,
# tension=tension * 25.4/21.8=0.091461555
# since WE^3 new = (21.8/25.4)^3 WE^3 old we must have
# RE^4 new / RE^4 old = (21.8/25.4)^3
# RE new=59.743668
# WE new=10.933556      
# 
# From Mitsuhiro:  
# visc_coef=1/RE=0.0163934
# gravity=1/FR^2=-8.1729078
# tension=1/WE=0.0877224
# adv_vel=-0.88
# eta=1.9433962
# E0=|1-lambda| WE/FR^2= (1-.767541) 8.1729078/0.0877224=21.66
# M=|1-lambda|WE^3/(FR^2 RE^4)=0.000203267  log M=-3.69

max_step  = 15001   # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  300  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0 0.0
geometry.prob_hi   =  8.0 8.0 8.0

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
#Lp.v = 1

amr.n_cell    = 32 32 32 
amr.max_level = 1   # 3 for comparison with OhtaAkamaYoshidaSussman2014.pdf

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4    # number of buffer cells in error est
amr.grid_eff        = 0.70   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 8       # block factor in grid generation
amr.check_int       = 100      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100     
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32
#amr.restart         = chk5100
amr.trace   =1

# 0MGPCG 1PCG 2 MINV=I
ns.project_solver_type=0
Lp.smooth_type=2
Lp.bottom_smooth_type=2
Lp.gpucount=1

ns.MOFITERMAX=15
ns.EILE_flag=-1  # Weymouth Yue

ns.num_materials=2
ns.num_species_var=0


ns.minimum_relative_error=1.0e-18
ns.initial_project_cycles=10  # number of initial jacobi iterations
ns.initial_cg_cycles=10  # number of MGPCG steps to do in order to get
                         # decent sized residual.


# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-8  # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-8


ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 0.0149254  #coef of viscosity
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = -8.5233331  # body force  (gravity in MKS units)
ns.gravityangle = 0.0
ns.tension        = 0.0784985   # interfacial tension force
#ns.fixed_dt	  = 0.0025   # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass 
ns.usekluge       = 0

ns.axis_dir=0
ns.vorterr=0.0 0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=-0.84  # same for eta=100 or eta=1.94
ns.adv_dir=3
ns.viscconst=1.0 1.9433962    # eta=1.94
ns.denconst=1.0 0.7675408
ns.heatviscconst=0.0 0.0 0.0 
ns.tempconst=293.0 293.0 293.0
ns.material_type=0 0 0
ns.pressure_error_cutoff=0.0 0.0 0.0 
ns.tcenter=-1.0
ns.xblob=4.0
ns.yblob=4.0
ns.zblob=4.2
ns.radblob=0.5
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=36

proj.bogus_value = 5.0e+5
proj.Pcode = 0
#proj.Pcode = 2

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 2 2 2
ns.hi_bc          = 2 2 1

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

