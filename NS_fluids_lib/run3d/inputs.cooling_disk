max_step  =  99999    # maximum timestep
#max_step  =  600    # maximum timestep
stop_time =  4.32e+5  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 XYZ,XY 1 RZ
geometry.prob_lo   =  -100000.0 -100000.0 0.0   # 0.0 0.0 RZ
geometry.prob_hi   =  100000.0 100000.0 100000.0  # 100000.0 100000.0 RZ
geometry.is_periodic = 0 0 0     
ns.projection_pressure_scale=1.0e+6

# 0MGPCG 1PCG 2 MINV=I
ns.project_solver_type=0
Lp.smooth_type=2
Lp.bottom_smooth_type=2
Lp.gpucount=1

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
#Lp.v = 1

ns.MOFITERMAX=15
ns.num_materials=2
ns.num_species_var=0

ns.post_init_pressure_solve=0 


ns.minimum_relative_error=1.0e-18
ns.initial_project_cycles=10  # number of initial jacobi iterations
ns.initial_cg_cycles=10  # number of MGPCG steps to do in order to get
                         # decent sized residual.
amr.n_cell    = 32 32 16
amr.max_level = 2
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.85   # what constitutes an efficient grid
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100 
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32
#amr.restart         = chk00200
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-8  # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-8

ns.visual_option=-2


ns.cfl            = 0.5
ns.init_shrink    = 0.1   
ns.change_max     = 1.1  
ns.visc_coef      = 1.0   
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = -1000.0
ns.use_lsa=0
ns.tension        = 0.0
# delta_t=20 in MIT test
ns.min_velocity_for_dt=20.0
#ns.fixed_dt	  = 0.0025     # hardwire dt
ns.sum_interval   = 5        # timesteps between computing mass 

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=1  # 1,.., sdim
# a=(2 omega sin(phi) v  -2 omega sin(phi) u  0)=(f v  -f u  0)
# 2 omega sin(phi)=f
# angular_velocity=f/2=1E-4/2=0.5E-4=5E-5
ns.angular_velocity=5.0e-5
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)
# water: k=0.58 W/(M K)=58000 ERG/(S CM K)
# water: cv=4.1855E+7 ERG/(g K) = 4.1855 J/(g K)=4.1855E+3 J/(kg K)
# for MIT test, k=0.04 W/(M K) instead of k=0.6  why?
ns.heatviscconst=4000.0 4000.0
# Pa s = kg/(m s)=10 g/(cm s)
# for MIT test mu=0.04 kg/(m s) instead of 0.001  why?
ns.viscconst=0.4 0.4
ns.denconst=1.0 1.0
ns.tempconst=293.0 293.0 
ns.override_density=1 0
# MIT beta=-2E-4 1/K  
# for MIT:
# rho=rho0(1+beta(T-T0))  drho/dT=rho0 beta  drho/dT=-2E-1 (kg/m^3)/K
# rho=1000  T=0
# rho=960   T=100
# drho/dT=-40/100=-4.0E-1 (kg/m^3) /K=-4.0E-4 (g/cm^3)/K
# more precisely,
# rho=999.7026 T=10
# rho=998.2071 T=20
# drho/dT=-1.5E-1 (kg/m^3)/K = -1.5E-4 (g/cm^3)/K
ns.DrhoDT=-2.0e-4 0.0
ns.DrhoDz=-1.0 0.0
ns.shock_timestep=2 2 
ns.material_type=0 0  
ns.pressure_error_cutoff=0.0 0.0 
ns.temperature_error_cutoff=1.0e-3 0.0
ns.xblob=0.0
ns.yblob=0.0
ns.zblob=100000.0
ns.radblob=60000.0
# Q0=800 k grad T dot n
# units: W/(M K)  * (K/M)=10^5 ERG/(S CM K) * (1/100) (K/cm)
# 8E2 MKS = 8E+5 CGS
ns.radblob2=8.0e+5
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=601

proj.bogus_value = 5.0e+5
proj.Pcode = 0
#proj.Pcode = 2

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 4 4 4  # 4 4 4 XYZ 3 4 RZ
ns.hi_bc          = 4 4 5  # 4 4 1 XYZ 4 1 RZ

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats

fab.do_initval=1

# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

