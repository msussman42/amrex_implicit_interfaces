
# When GAS PRESSURE exceeds a threshold, then use AMR.
#
max_step  =  999999   # maximum timestep
#max_step  =  220    # maximum timestep
stop_time =  50.0e-3     # JCP PAPER
#stop_time =  38.0e-6  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
#
geometry.coord_sys      = 0        # 1=RZ 0=XYZ
geometry.prob_lo   =  0.0 0.0 0.0  # 0 0 = RZ   0 0 0=XYZ 
geometry.prob_hi   =  5.12 1.28 2.56  # JCP PAPER (with symmetric bc)
amr.regrid_on_restart=1
amr.plotfile_on_restart=1
#ns.nblocks=2
# 1.3-2.3  1.38-2.3  0.34-0.63
#ns.xblocks=1.8 1.84
#ns.rxblocks=0.5 0.46
#ns.yblocks=0.0 0.0
#ns.ryblocks=0.16 0.16
#ns.zblocks=0.0 0.485
#ns.rzblocks=0.34 0.145

# for axis_dir=2 case:
# only model a quarter of the domain
# small domain: 0.25 x 0.5
# big domain  : 1.0  x 2.0
#geometry.prob_hi   =  0.25 0.25 0.5  # 1 2 = RZ   1 1 2=XYZ

geometry.is_periodic = 0 0 0 # 0 0 = RZ  0 0 0 = XYZ
# 1.0e+8 appropriate for compressible or incompressible
ns.projection_pressure_scale=1.0e+8
ns.MOFITERMAX=15
ns.continuous_mof=0
# EILE_flag=-1 Weymouth and Yue
# EILE_flag=1 alternate EI-LE
ns.EILE_flag=1
# even though truncate_volume_fractions==1, the algorithm in the present
# code is much better at selecting which material to truncate than from the
# 2015 version.  In otherwords, the more modern versions will use more
# degrees of freedom in order to maintain the extra droplets in the domain.
ns.truncate_volume_fractions=1 1 1


# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-14
mg.rtol_b = -0.01
Lp.smooth_type=2
Lp.v = 0
ns.minimum_relative_error=1.0e-18
ns.initial_project_cycles=3
ns.initial_cg_cycles=5

ns.num_materials=2 # JCP paper
#ns.num_materials=3
ns.num_species_var=0


amr.n_cell    = 64 16 32  # JCP PAPER (symmetric bc)
amr.max_level =  4  # 4 for production runs JCP PAPER

# for big domain (axis_dir=2):
# max_level=6 fine, max_level=7 finest
# max_level=5 coarsest
# max_level=4 really coarse
# for small domain (axis_dir=2):
# subtract 2 from max_level
#amr.n_cell    = 32 32 64  # 32 64=RZ  32 32 64=XYZ
#amr.max_level =  2  # max_level=3 => dx=1/256=0.0039 (radblob=0.0089)

ns.shock_timestep=2 2 2
ns.min_velocity_for_dt=1000.0  

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
ns.ns_tiling=false
fabarray.mfiter_tile_size=4 4 4
amr.blocking_factor = 4 4 4 4 4 4  # block factor in grid generation
amr.space_blocking_factor = 2 2 2 2 2
amr.time_blocking_factor=2
#  grad dot (u_GL u_GG) - u_GG div u_GL, no sync project
ns.enable_spectral=1
ns.viscous_enable_spectral=0

# number of timesteps between checkpoints
# IF THIS VALUE IS TOO SMALL, THEN PERFORMANCE WILL BE EFFECTED!
# TO GRAB A CHECKPOINT ON THE FLY, CREATE AN EMPTY FILE IN THE
# RUN DIRECTORY CALLED:
# "dump_and_continue" or
# "dump_and_stop"
amr.check_int       = 50     
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100 
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32  # 64=RZ 32=XYZ
#amr.restart         = chk02350
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000000001  # not used

mac.mac_abs_tol    = 1.0e-11

ns.cfl            = 0.4      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max     = 1.1      
ns.change_max_init = 1.0e+4
ns.visc_coef      = 1.0     
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = 0.0  
ns.tension        = 24.0 24.0 24.0  # JCP paper 
#ns.tension        = 72.8 72.8 72.8  # 90 degree contact angle 
#ns.fixed_dt	  = 0.02     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

ns.axis_dir=0  # no nozzle JCP PAPER
#ns.axis_dir=2  # 0=no nozzle  1=nozzle  2=nozzle+pressure BC

ns.vorterr=0.0 0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
# u dt = dx
# (p dt)dt = dx
# dt=sqrt(dx/p) u=dx/dt=sqrt(dx p) dx~1/100  u~sqrt(10^6)=1000

ns.advbot=1.165e+3   # JCP PAPER

#ns.advbot=0.0     # pressure bc used instead
#ns.outflow_pressure=1.0e+6 # this is "general_hydrostatic_pressure"
#ns.inflow_pressure=0.5e+8  # pressure is specified at inflow  (80 MPa)
#ns.inflow_pressure=8.0e+8  # pressure is specified at inflow  (80 MPa)
                  # 0.1 Pa=1 ba  1Pa=10ba
                  # 80 MPa=800 Mba=8E+8 ba = 800 atm
                  # 1 atm=10^5 Pa=10^6 ba

ns.adv_vel=6.9e+3 # JCP PAPER

#ns.adv_vel=0.0 # inflow of air from the side is zero (it will be outflow bc)
ns.adv_dir=1       # inflow in x-dir (outflow bc will be prescribed though)
ns.viscconst=0.013 0.000142 0.013  # g/(cm s)  0.000142
ns.uncoupled_viscosity=0
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)  k/cv=2400/6E+6=0.0004
# water: k=0.58 W/(M K)
ns.heatviscconst=0.0 0.0 0.0
ns.denconst=0.78 0.00125 1.0  # 0.00125 for air (0.00627 for?)
# 7,4,999 compressible liquid, 0,4,999 incompressible liquid
# 0 0 999=incompressible liquid and gas.
ns.material_type=0 0 999  # material 4 is SF6 material, 7=tait w/rho0=den(1)

# 0 1.3 0 = compressible
# 0 0 0 = incompressible
ns.pressure_error_cutoff=0.0 0.0 0.0

# initial gas pressure and density give T_initial=280
ns.tempconst=280.0 280.0 280.0   

ns.xblob=1.28 # cm JCP PAPER
#ns.xblob=0.0 # x component of nozzle center
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=0.0381  # cm JCP PAPER
#ns.radblob=0.0089 # diameter of orifice is 178 microns=0.0178 cm
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=53  # axis_dir=2 if nozzle+pressure BC

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 1 3 1  # 3 2=RZ 3 3 2=XYZ  JCP PAPER
ns.hi_bc          = 2 2 2  # 2 2=RZ 2 2 2=XYZ
#ns.lo_bc          = 3 3 2  # 3 2=RZ 3 3 2=XYZ
#ns.hi_bc          = 2 2 2  # 2 2=RZ 2 2 2=XYZ

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

