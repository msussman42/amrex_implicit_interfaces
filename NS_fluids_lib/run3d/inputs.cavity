

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  99999    # maximum timestep
#max_step  =  2    # maximum timestep
stop_time = 4.0  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   = -2.0  0.0 -0.5
geometry.prob_hi   =  2.0  1.0  0.5
#geometry.is_periodic = 1 0 0
ns.FSI_flag=0 0 2

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-6  # >1.0e-7 on SUPERCOMPUTER
mg.rtol_b = -0.01
Lp.v = 1

ns.densolid=-1.0 # 1.0e+8 PRESSURE
ns.mapspreadx=0.5  
ns.mapspready=0.25
ns.mapspreadz=0.25
Lp.smooth_type=2  # 0 GSRB 1 line 2 ILU
amr.n_cell    = 256 64 64
amr.max_level = 0   # 2 or more on SUPERCOMPUTER
ns.conservative_advection=1
ns.sharp_solid=0
ns.rho_wtd_initial_project=0

ns.ncoarseblocks=1
ns.xcoarseblocks=0.0
ns.rxcoarseblocks=1.5
ns.ycoarseblocks=0.0
ns.rycoarseblocks=0.25
ns.zcoarseblocks=0.0
ns.rzcoarseblocks=0.06

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2 # number of buffer cells in error est
amr.grid_eff        = 0.75   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 15      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 15      # SUPERCOMPUTER
amr.plot_file       = pltNewDen 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 64     # 64 on SUPERCOMPUTER
#amr.restart         = chk1500 # SUPERCOMPUTER
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
mac.mac_abs_tol    = 1.0e-4  # >1.0e-5 on SUPERCOMPUTER

ns.pcav=0.0
ns.dencav=0.0
ns.pchopp=0.0
ns.denchopp=0.0
ns.soundchopp=0.0
ns.bubble_pressure=0.0
ns.bubble_density=0.001

ns.is_compressible=0
ns.is_twophase=1
ns.hydrostatic_pressure=0.0

# this is window (relative to coarsest grid) that gets displayed or output
ns.visual_lo =0  0 0
ns.visual_hi =256 64 64

ns.visual_header=1  # 3=Viorel binary 2=Amira binary  1=tecplot ascii
#SUPERCOMPUTER

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max=1.01      # 
ns.visc_coef      = 0.0002   # water=0.01poise  mu/(rho L U)=5.7e-8 
mac.visc_abs_tol   = 1.0e-7   # above: 1/17697680
ns.gravity        = 5.95     # Fr^2=U^2/gL g=980 L=572 U=309.4cm/s (6.02knots)
ns.gravityangle = 0.0
ns.tension        = 0.0
ns.fixed_dt	  = -1.0  # SUPERCOMPUTER 
ns.dt_cutoff      = 1.0e-8   # 0.0005 for max_level=2
ns.sum_interval   = 1        # timesteps between computing mass 
ns.visctimestep=1

ns.axis_dir=2
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=1.0
ns.adv_dir=1
ns.viscunburn=1.0
ns.viscburn=0.01
ns.viscvapor=0.01
ns.tcenter=1.0e-9  # adapt if radius of curvature<tcenter*dx
ns.solidradius=1.0e-9  # adapt if radius of curvature<solidradius*dx
ns.denspread=1.0
ns.overlap=1.0
ns.denwater=1.0
ns.denair=0.001
ns.denvapor=0.001
ns.xblob=0.5
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=1.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=9

proj.bogus_value = 5.0e+5
proj.Pcode = 0
#proj.Pcode = 2

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 1 3 2
ns.hi_bc          = 2 2 2
ns.livepressureoverride=1

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
# contour.level = 1
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => same as 2 except show Up and not Ud
# win_siz     = number of pixels in max window direction
#
# slice values relative to 0,0,0 and relative to computational coordinates!
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.verbose = 1
contour.maxpoints=16
contour.arrow_factor=0.5
# SUPERCOMPUTER
contour.plot = triple triple 1   1    -1        2      1600  1.0e-8 1   xz
contour.plot = triple triple 2   15    -1        2      800  1.0e-8 1   xz
#contour.plot = triple triple 2   100    -1        2      800  1.0e-8 1   xz
contour.plot = triple triple 1   1    -1        2      800  1.7 0   yz
