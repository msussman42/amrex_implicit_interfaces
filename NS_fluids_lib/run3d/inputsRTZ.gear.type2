

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  20000   # maximum timestep
stop_time =  0.012  # maximum problem time
thickness = 0.1

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ, 3=>RTHETA
geometry.coord_sys_override = 3    # 0 => cart, 1 => RZ, 3=>RTHETA
geometry.prob_lo   =  6.0  0.0 0.0 
geometry.prob_hi   =  9.0  6.283185306 0.75
# quadruple the torque to get the proper value; width of gear is 3.0
#ns.show_mem=1  # 1 => do a "top" every time step to check node usage.
ns.show_mem=0
geometry.is_periodic = 0 1 0
ns.redistance_narrow_band=2
ns.use_colonius=1

ns.FSI_flag=0 0 2
ns.mapspread=1.0e+9  

mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0

Lp.smooth_type=2  # 0 GSRB 1 ICRB 2 ILU
Lp.bottom_smooth_type=2
ns.initial_project_cycles=0
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.minimum_relative_error=1.0e-12
ns.initial_cg_cycles=0

amr.n_cell    = 48 1024 8
amr.max_level =  0

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.85   # what constitutes an efficient grid MS
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 2    # block factor in grid generation MS
amr.check_int       = 500     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int	  = 100 # or 50 MS
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 2048
amr.plotfile_on_restart=1
#amr.restart         = chk0010
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 5.0e-8  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.pcav=220.2726
ns.dencav=0.999958
ns.pchopp=220.2726
ns.denchopp=0.999958
ns.soundchopp=100.0
ns.bubble_pressure=0.0
ns.bubble_density=0.001
 
ns.hydrostatic_pressure=0.0
ns.visual_header=1  # 2=output Amira binary files 1=tecplot ascii files
ns.visual_lo =-1 -1 -1  # MS
ns.visual_hi =256 256 256  # MS

ns.overlap=2.0
ns.redist_on_init=0
ns.conserve_vof=0

ns.is_compressible=0
ns.is_twophase=1  

ns.cfl            = 0.5      # cfl number for hyperbolic system MS
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 0.01      
mac.visc_abs_tol   = 1.0e-7
ns.init_iter      = 0      # number of init iters to def pressure
ns.gravity        = 0.0 
ns.gravityangle = 0.0
ns.tension        = 0.0
#ns.fixed_dt	  = 1.e-04    # dz_coarse=1/64  max_level=1 => dz=1/128
                             # u dt = (1/2) dz  dt=1/256
ns.sum_interval   = 1       # timesteps between computing mass 

ns.axis_dir=2
ns.vorterr=999999.0
ns.rgasinlet=1.57
# power=w x torque  w=radians/s=2 pi RPM/60
# w=11459.16*2*pi/60=1200 radians/s
# paper reports torque in N*m=kg m/s^2 m=1000 g m^2/s^2=10^7 g cm^2/s^2
# gear radius 7.5 cm
# radians/s=RPM * 2 pi/60=1200
# tip velocity about 7.5*1200=9000 cm/s
# Artificial viscosity necessary to resolve this speed:
# u dt = dx
# mu dt = rho dx^2  dx=2 pi 7.5/1024=0.046  or dx=3/48=0.063
# mu=rho dx^2/(dx/u)=u rho dx=9000*0.001*(0.046)=0.41

ns.vinletgas=11459.16  # RPM: set negative to compute in gear       
                       # frame of reference.  (RTZ only)
ns.twall=5.0
ns.advbot=0.0  # liquid jet inflow velocity
ns.adv_vel=0.0   # inflow velocity of gas
ns.adv_dir=1  # x direction
ns.viscunburn=1.0
ns.viscburn=0.41   # physical value 0.02
ns.viscvapor=0.41

ns.tcenter=1.0e-9  # adapt if radius of curvature<tcenter*dx
ns.solidradius=1.0   # adapt if solid radius of curv<solidradius*dx
ns.denwater=1.0
ns.denair=0.001
ns.denvapor=0.001
ns.xblob=999999  # position of jet at inflow
ns.yblob=999999
ns.zblob=999999
ns.zblob2=-20.0  # free surface height (>zhi if all liquid <zlo if all gas)
ns.radblob=0.5  # positive if liquid jet comes into domain
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=563  # gear problem

#ns.mem_debug = 1
ns.v = 0
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 4 0 3 
ns.hi_bc          = 1 0 3  

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
# contour.level = 1
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => same as 2 except show Umac and not Ucell
# win_siz     = number of pixels in max window direction
#
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.verbose = 1
#contour.arrow_factor=4.0
#contour.maxpoints=8
contour.plot = triple triple 1   1     -1       2      700    1.0E-10 2  xy
#contour.plot = triple triple 1   1     -1       2      400    3.14 1  xz
#contour.plot = triple triple 1   1     -1       2      400    1.5 0  yz
