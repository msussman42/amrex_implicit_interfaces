max_step  =  20000   # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  1000.0  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0   0.0 0.0
geometry.prob_hi   =  2.0  0.5 1.0
geometry.is_periodic = 0 0 0     

ns.FSI_flag=0 2 # 1=solid from PROB.F90  2=solid from Lagrangian data

mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-8
mg.rtol_b = -0.01
Lp.v = 0

ns.MOFITERMAX=15
ns.continuous_mof=0
ns.MOF_TURN_OFF_LS=0
ns.num_materials=2
ns.num_species_var=0

ns.EILE_flag=-1  # Weymouth and Yue
ns.post_init_pressure_solve=1 

ns.project_solver_type=0 # 0=MGPCG 1=PCG 2=MG

amr.n_cell    = 32 8 16
amr.max_level =  3  # 4 is finer


ns.minimum_relative_error=1.0e-18
ns.initial_project_cycles=10  # number of initial jacobi iterations
ns.initial_cg_cycles=10  # number of MGPCG steps to do in order to get
                         # decent sized residual.
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.9   # what constitutes an efficient grid MS
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4    # block factor in grid generation MS
amr.check_int       = 500     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int	  = 50  # or 50 MS
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024   # 32 if MPI
amr.plotfile_on_restart=1
#amr.restart         = chk0001
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-8
mac.visc_abs_tol    = 1.0e-8


ns.cfl            = 0.5  
ns.init_shrink    = 0.1 
ns.change_max=1.01    # scale back initial timestep
ns.visc_coef=0.0
ns.gravity = 0.0 # MS ZERO if no FREE SURFACE
ns.gravityangle = 0.0
ns.tension=0.0

ns.fixed_dt	  = 0.002    # dz_coarse=1/16  max_level=3 => dz=1/128
                             # u=2   u dt = (1/2) dz  dt=1/512
ns.sum_interval   = 10       # timesteps between computing mass 

ns.axis_dir=4  # 0 whaletailup, 2 whalenormal, 3 open mouth, 
               # 4 animated whalenormal 5 whaletaildown 6 whalepregnant

ns.shock_timestep=2 2 
ns.material_type=0 999
ns.pressure_error_cutoff=0.0 0.0

ns.vorterr=0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=5.0
ns.advbot=0.0
ns.adv_vel=1.0   # problem should always be scaled so this is 1
ns.adv_dir=1
ns.viscconst=1.0 1.0
ns.denconst=1.0 1.0
ns.heatviscconst=0.0 0.0 
ns.tempconst=293.0 293.0 
ns.xblob=0.5
ns.yblob=0.25
ns.zblob=0.25
ns.zblob2=999.0  # MS free surface height (999.0 if no free surface)
# scale
ns.radblob=0.2
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=562

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 1 3 5
ns.hi_bc          = 2 5 5

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE
