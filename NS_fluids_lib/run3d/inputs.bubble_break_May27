max_step  = 200000   # maximum timestep
#max_step  =  2    # maximum timestep
stop_time = 200  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0 0.0
#geometry.prob_hi   = 12.0 3.0 3.0 
geometry.prob_hi   = 3.0 3.0 3.0  # DEBUG

geometry.is_periodic = 1 1 0 

# 0MGPCG 1PCG 2 MINV=I
ns.project_solver_type=0
Lp.smooth_type=2
Lp.bottom_smooth_type=2

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
#Lp.v = 1

ns.continuous_mof=2
ns.EILE_flag=-1  
ns.MOFITERMAX=5
ns.num_materials=2

ns.num_species_var=0
ns.minimum_relative_error=1.0e-18
# M.OHTA: scale set in order that initial residual O(1)
ns.projection_pressure_scale=100.0



ns.minimum_relative_error=1.0e-18
ns.initial_project_cycles=3  # number of initial jacobi iterations
ns.initial_cg_cycles=3  # number of MGPCG steps to do in order to get
                         # decent sized residual.

ns.ns_tiling=false

# 48^3 max_level=2
#amr.n_cell    = 192 48 48
amr.n_cell    = 48 48 48  # DEBUG
amr.max_level = 1
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2   # number of buffer cells in error est
amr.grid_eff        = 0.85   # what constitutes an efficient grid
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
# JULY 30 - made this smaller to speed up testing
#amr.plot_int        = 100      # 1000
amr.plot_int        = 5   #DEBUG 
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
# M.OHTA 32 is more optimal than 16 I think.
amr.max_grid_size   = 16
#amr.restart         = chk07000

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-8

# M.OHTA this option not used in 3d since output files already
# binary format.

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 1.0        # 1/Re
mac.visc_abs_tol   = 1.0e-10
ns.gravity        = 0.0      # 1/Fr
ns.tension        = 25    # 1/We
ns.ignition       = -30000.0
ns.anelastic      = 0        # 0 => no anelastic approx
#ns.fixed_dt	  = 0.0025     # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass

# probtype=1, axis_dir=11
ns.axis_dir=11 # LS<0 inside of drop ("gas")  LS>0 outside drop ("liquid")
# M.OHTA vorterr meaning has changed a little - make sure values are all 0.0.
ns.vorterr=0.0 0.0 0.0
ns.rgasinlet=1.57
# if xblob10=0, then u(zhi)=vinletgas, u(0)=-vinletgas
#   ( u(z)=vinletgas*(z/zblob-1)  if zblob>0 ) 
#   ( u(z)=vinletgas*(z/probhiz)  if zblob=0 ) 
# if xblob10=1.0, zblob=zhi/2, then u(zhi)=vinletgas, u(0)=radblob10
ns.vinletgas=111.4450537
ns.xblob10=0.0   # set xblob10=1 inorder to override bc at the bottom
                 # i.e. set xblob10=1 and radblob10=0 so that
                 # top wall moves and bottom wall is fixed.
ns.radblob10=0.0 # this will be the overridden velocity at the bottom
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=3

ns.heatviscconst=0.0 0.0 0.0
ns.viscconst=0.201893213 0.00018 0.0 
ns.denconst=1.0 0.0012 1.0 
ns.tempconst=293.0 293.0 293.0 
ns.material_type=0 0 0 
ns.pressure_error_cutoff=0.0 0.0 0.0 
#ns.xblob=6.0
ns.xblob=1.5 # DEBUG
ns.yblob=1.5
ns.zblob=1.5  # zhi=2*zblob
ns.radblob=0.5
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=1

#ns.mem_debug = 1
ns.v = 1 #DEBUG
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 0 0 5
ns.hi_bc          = 0 0 5

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats

# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

