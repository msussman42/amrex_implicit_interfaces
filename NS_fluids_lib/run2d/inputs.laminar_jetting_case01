

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  999999  # maximum timestep
stop_time =  999999  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  2.0 2.0  # units of cm
geometry.is_periodic = 0 0 0

ns.shock_timestep=2 2  # 2=do not use sound speed 0=use sound speed t=0 only

ns.minimum_relative_error=1.0e-24
ns.initial_project_cycles=10  # initial number of Jacobi iterations on the
                              # whole AMR hierarchy. 
ns.initial_cg_cycles=10
fab.do_initval=0

ns.num_materials=2
ns.num_species_var=0

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-15
mg.rtol_b = -0.01
Lp.v = 0


amr.n_cell    = 32 32
amr.max_level =  3  # 4 for production runs  3 for debugging
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2 2 2 2 2   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100     # 100 for production runs
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32
#amr.restart         = chk28000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
#ns.dt_cutoff      = 8.0e-4  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-13

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max=1.01      # scale back initial timestep
ns.visc_coef      = 1.0 # Re=rho L U/mu  U=1
ns.gravity        = 0.0   
ns.gravityangle = 0.0
ns.tension        = 24.0 # We=rho U^2 L/sigma  U=1
#ns.fixed_dt	  = 4.0e-4   # hardwire dt
ns.sum_interval   = 10       # timesteps between computing mass 

ns.axis_dir=0  # no nozzle
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=210.0    # inflow velocity at nozzle at the bottom 
ns.adv_vel=2060.0   # inflow of air from the side 
ns.adv_dir=1       # inflow in x-direction
ns.viscconst=0.0099 0.0002   # g/(cm s)  0.0099 0.0002
ns.heatviscconst=0.0 0.0
# material_type=7: p=B( (rho/rho0)^N  - 1) +A  rho0=denconst(1)
# material_type=5: p=(cp-cv) rho e/cv
ns.denconst=0.77 0.0012 
# R=0.287E+7  cv=0.72E+7
# cp=cv+R  gamma=cp/cv=1+R/cv=1.39861111
# p=rho R T
# T=p/(rho R)=1.0e+6/(.0012 x .287E+7)=290.36
ns.tempconst=290.36 290.36 
ns.material_type=7 5  # 7=tait(rho0=denconst(1))  5=air  8=airADIABAT
ns.pressure_error_cutoff=0.0 0.0  # 0 => disable cutoff

ns.xblob=0.6 # cm
ns.yblob=0.0  
ns.zblob=0.0
ns.radblob=0.024  # cm
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=53

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 1 1
ns.hi_bc          = 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

