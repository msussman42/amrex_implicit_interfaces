max_step  = 99999    # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  1000  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  2.4 9.6
geometry.is_periodic = 0 0 0     

# 0MGPCG 1PCG 2 MINV=I
ns.project_solver_type=0
Lp.smooth_type=2
Lp.bottom_smooth_type=2

# multigrid class
#mg.verbose = 2
#cg.verbose = 2
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
#Lp.v = 1

ns.num_materials=2
ns.num_species_var=0
ns.minimum_relative_error=1.0e-18
# MITSUHIRO: changed scale from 1000 to 10E6
ns.projection_pressure_scale=1.0e+6


ns.initial_project_cycles=10  # number of initial jacobi iterations
ns.initial_cg_cycles=10  # number of MGPCG steps to do in order to get
                         # decent sized residual.

amr.n_cell    = 64 256 
amr.max_level = 1

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
# just in case, make 8.  (buckmaster requires error_buf=8)
amr.n_error_buf     = 8 8 8 8 8    # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 500      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
# MITSUHIRO: changed from 500 to 100 for debugging.
amr.plot_int        = 100  
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 64
#amr.restart         = chk23500
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000001  # level 0 timestep below which we halt

mac.mac_abs_tol        = 1.0e-8   # tolerence for mac projections

# MITSUHIRO: changed from 1 to 2 for debugging.

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max=1.01      # scale back initial timestep
ns.visc_coef      = 1.0      # was 0.2749, now included in viscconst
                             # must have visc_coef=1 if some shear-thinning
                             # materials
mac.visc_abs_tol   = 1.0e-6
ns.gravity        = -980    # body force  (gravity in MKS units)
# 12, 13, 23
# material 1 is liquid (ambient phase)
# material 2 will be gas
# material 3 is solid
# sigma_{i,j}cos(theta_{i,k})=sigma_{j,k}-sigma_{i,k}
# 90 degree contact angle:
ns.tension        = 50.0 0.0 0.0 
#ns.fixed_dt	  = 0.0025     # hardwire dt
ns.sum_interval   = 5        # timesteps between computing mass 

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=2
# these are shear thinning parameters
# viscconst*(1+(beta*gamma_dot)**alpha)**((n-1)/alpha)
# material 1 is the ambient material, so make
# beta>0 for material 1, and leave beta=0 for the other 2 materials.
ns.Carreau_alpha=2.0 0.0 0.0
ns.Carreau_beta=1.0 0.0 0.0
ns.Carreau_n=0.5 0.0 0.0

# these are viscoelastic parameters for future reference.
# Bingham model can be added too in the future.
ns.elastic_time=0.0 0.0 0.0
ns.elastic_viscosity=0.0 0.0 0.0
ns.polymer_factor=0.0 0.0 0.0

ns.heatviscconst=0.0 0.0 0.0 
ns.viscconst=10.0 1.822E-4 0.0
ns.denconst=1.0 0.001205 0.0 
ns.tempconst=293.0 293.0 293.0 
ns.material_type=0 0 0
ns.pressure_error_cutoff=0.0 0.0 0.0 
ns.xblob=0.0
ns.yblob=1.2 
ns.zblob=0.0
ns.radblob=0.30
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=36

proj.bogus_value = 5.0e+5
proj.Pcode = 0
#proj.Pcode = 2

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 2 
ns.hi_bc          = 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

