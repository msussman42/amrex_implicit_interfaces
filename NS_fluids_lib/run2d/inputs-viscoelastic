# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# Figure 5 (radius =0.3cm) in paper of Pillapakkam et al.
#
#max_step  =  99999    # maximum timestep
max_step  =  3000000    # maximum timestep
stop_time =  300   # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0 
geometry.prob_hi   =  1.0 4.0

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
#Lp.v = 1
# 0=GSRB 1=ICRB 2=ILU

ns.num_materials=2
ns.num_species_var=0
ns.initial_project_cycles=10
ns.initial_cg_cycles=10

amr.n_cell    = 32 128
amr.max_level = 2
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1            # how often to regrid
amr.n_error_buf     = 2 2 2 2 2    # number of buffer cells in error est
amr.grid_eff        = 0.70         # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4            # block factor in grid generation
amr.check_int       = 1000         # number of timesteps between checkpoints
amr.check_file      = chk          # root name of checkpoint file
amr.plot_int        = 100
amr.plot_file       = plt 
amr.grid_log        = grdlog       # name of grid logging file
amr.max_grid_size   = 512
#amr.restart         = chk80000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-8


ns.transposegradu=0
ns.elastic_time=0.1 0.0          # relaxation time
ns.elastic_viscosity=8.751 0.0   # c=5.8375  eta_s=1.5  c*eta_s=8.751
ns.polymer_factor=0.01 0.0        # parameter, 1/L

ns.cfl            = 0.50     # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max=1.01      # scale back initial timestep
ns.visc_coef      = 1.0      # coef of viscosity
mac.visc_abs_tol   = 1.0e-8
ns.gravity        =-980.0 
ns.gravityangle = 0.0
ns.tension        = 10.0     # interfacial tension force, 1/We
#ns.fixed_dt	  = 0.1875     # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass 

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=-0.0
ns.adv_dir=2
ns.heatviscconst=0.0 0.0
ns.viscconst=1.50 0.15     # 1 kg/(m s) = 10 g/(cm s)
ns.tcenter=4.0  # adapt if radius<tcenter*dx
ns.denconst=1.0 0.1
ns.material_type=0 0
ns.xblob=0.0
ns.yblob=0.8
ns.zblob=0.0
ns.radblob=0.3
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=36

proj.bogus_value = 5.0e+5

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 2
ns.hi_bc          = 2 1

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE


