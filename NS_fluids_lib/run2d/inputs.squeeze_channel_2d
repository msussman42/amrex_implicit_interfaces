max_step  =  999999   # maximum timestep
stop_time =  999999  # maximum problem time

ns.num_materials=3
ns.num_species_var=0

ns.FSI_flag=0 0 1
ns.minimum_relative_error=1.0e-18
ns.projection_pressure_scale=100.0
ns.initial_project_cycles=10  # number of initial jacobi iterations
ns.initial_cg_cycles=10  # number of MGPCG steps to do in order to get
                         # decent sized residual.
# 0=GSRB 1=ICRB 2=ILU
Lp.smooth_type=2
Lp.bottom_smooth_type=2
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I

# ------------------  INPUTS TO CLASS AMR ---------------------

# these dimensions based on: h=10E-4=1E-3cm  w=30E-4=3E-3cm 
# cross section: h=0.001cm w=0.003 cm 
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo  =  0.0   -0.004 
geometry.prob_hi  =  0.032  0.004 
geometry.is_periodic = 0 0 0

ns.MOFITERMAX=3
                            # and no gravity.


# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0


amr.n_cell    = 128 32 
amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 1000    # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 1000    # change to 1000
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32
#amr.restart         = chk0033
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-12  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      
ns.change_max     = 1.1   
ns.visc_coef      = 1.0       
                             # Re=rho L U/mu  L=0.01  U=1
ns.gravity        = 0.0   
# contact angle 135
# We=rho L U^2/sigma
ns.tension        = 50.0 85.4 50.0 # 50.0 cgs 
ns.capillary_artificial_viscosity=0.0 0.0 0.0
ns.Lref=0.0  # if Lref=0 then use dx
ns.Uref=0.0  # reduce capillary_artificial_viscosity until
             # cap_wave_speed>Uref, do nothing if Uref=0

ns.sum_interval   = 100      # timesteps between computing mass 

# 0 Roper's geometry  1 Comsol's 2 squeezing geom. 5=hardwire sqze.
ns.axis_dir=5
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.twall=0.1
# in paper, oil (dark, dispersed fluid) comes from the bottom, 
# but here, oil comes from top.
# h=0.001cm w=0.003cm
# cross section area is about 3.0E-6
# 1 liter=1000cm^3
# 1ml=1 cm^3
# Q_o=0.1 micro liter/min = 1E-4 ml/min=1.67E-6 ml/s=1.67E-6 cm^3/s
# u_o=1.67E-6/3E-6=0.56 cm/s
# Q_w=0.05 micro liter/min u_w=0.28 cm/s
# capillary number=mu_c U_c/sigma=.28 0.01/50=5.6E-5
# dist=y-yblob  if x>xblob, dist=-9999
ns.advbot=-5.6e-1     # inflow velocity from yhi position (oil, dispersed)
ns.adv_vel=0.0       # make this zero otherwise all 6 walls will have this.
ns.vinletgas=2.8e-1    # inflow velocity ylo (water, continuous)
ns.adv_dir=1       # inflow in x-direction (do not change this)
ns.material_type=0 0 999
ns.tempconst=293.0 293.0 293.0
ns.viscconst=0.05 0.01 0.01 # visc oil g/(cm s) (dispersed), water (cont)
ns.pressure_error_cutoff=0.0 0.0 0.0
ns.heatviscconst=0.0 0.0 0.0
ns.denconst=1.9 1.0 2.0 # den of oil (perfluorodecalin, dispersed), water
ns.xblob=0.0
ns.xblob2=0.0
ns.xblob3=0.003
ns.yblob2=-0.0015
ns.yblob3=0.0015
ns.zblob2=-0.0005
ns.zblob3=0.0005
ns.yblob=0.003  # init location oil (top)/water interface  phi=y-yblob
ns.zblob=0.0
ns.radblob=0.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=5700

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 2 1 
ns.hi_bc          = 2 1
ns.v=1

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

