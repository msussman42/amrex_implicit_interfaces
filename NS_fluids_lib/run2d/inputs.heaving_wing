max_step  =  99999      # maximum timestep 
#max_step  =  1      # maximum timestep 
stop_time =  16.0     # maximum problem time
ns.FSI_flag=0 2 2 # 1=solid prescribed in PROB_[23]D.F90, 2=sci_clsvof.F90
ns.project_solver_type=0  # 0 MGPCG 1 PCG
mg.presmooth=2
mg.postsmooth=2

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
# XYZ
#geometry.prob_lo   =  -1.0 -0.2 -0.5
#geometry.prob_hi   =   2.0 0.3 0.5
# XY
geometry.prob_lo   =  -0.5 -4.1
geometry.prob_hi   =   7.5 3.9
geometry.is_periodic = 0 0 0

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-12  # the coarsest coarsening of level 0 in old version;
                       # level 0 in the new version.
mg.rtol_b = -0.01
Lp.smooth_type=2
Lp.v = 0
ns.minimum_relative_error=1.0e-18
ns.initial_cg_cycles=10  # number of MGPCG steps to do in order to get
                         # decent sized residual.
ns.initial_project_cycles=10  # number of initial jacobi iterations

ns.num_materials=2
ns.num_species_var=0


fab.do_initval=0  # default is 1


# XYZ
# amr.n_cell    = 96 16 32
# XY
amr.n_cell    = 128 128  
amr.max_level = 3  

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 200      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100
amr.plot_file       = plt 
#amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024
#amr.restart         = chk05400
#amr.trace   =1
#DistributionMapping.strategy        = ROUNDROBIN
#DistributionMapping.strategy        = SFC

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 4.0e-12 # level 0 timestep below which we halt
mac.mac_tol        = 1.0e-10
mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 1.0
mac.visc_abs_tol   = 1.0e-7
ns.gravity        = 0.0  
ns.tension        = 0.0 0.0 0.0  
ns.shock_timestep=0 0 0      # 0=use "c" at t=0, 1=always use "c", 2=never
#ns.fixed_dt	  = 2.0e-8   # hardwire dt
ns.sum_interval   = 10      # timesteps between computing mass 

ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1

# foreWing.sci
ns.axis_dir=2  # 0=1 wing   1=2 wings 2=heaving wing
ns.advbot=0   # inflow velocity at nozzle at the bottom (cm/s)
#ns.outflow_pressure=2.0e+7
#ns.inflow_pressure=1.50e+9
ns.adv_vel=1.0
ns.adv_dir=1
ns.material_type=0 999 999  # material_type=5 EOS for air
ns.tempconst=293.0 293.0 293.0       # nominal initial values
ns.viscconst=0.0147 0.0147 0.0147 # g/(cm s)
ns.heatviscconst=0.0 0.0 0.0
ns.denconst=1.0 1.0 1.0


ns.vorterr=20.0 0.0 0.0
ns.pressure_error_cutoff=0.0 0.0 0.0

ns.xblob=0.0 # cm
ns.yblob=0.1 # amplitude of heaving motion if axis_dir=2
ns.zblob=999.0  # height of free surface
ns.radblob=0.0  
ns.denfact=1.0
ns.velfact=0.0
# the 2 wing procedure follows probtype=538 procedure (but not exactly)
# remember to make axis_dir=1 for 2 wing case.
# sci_clsvof.F90 has cross section of wing in the x-z plane so that
# for 2D, x3d -> x2d  z3d -> y2d  y3d -> 0.05
# see initflapping and for probtype=538, see initinjector   
ns.probtype=701   # flapping wing or heaving wing
ns.v=1

# ----------------  PROBLEM DEPENDENT INPUTS
# no slip at top and bottom walls, but the tangential velocity
# is prescribed to be "adv_vel"
ns.lo_bc          = 1 5
ns.hi_bc          = 2 5

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

