#Based on the MishchenkoETAL2010 - figure 3
# radius=0.15 cm
# T_substrate>-25 degrees celcius => bounce 
# BUT: current algorithm starts the freezing process immediately which
#  means the predicted threshold temperature will be warmer than the
#  experimental value.
# ST=(TSAT-TCOLD)CP/L=25 4.1855e+7/3.34e+9=0.32  
# dimensionless latent heat=-3.125
max_step  =  999999    # maximum timestep
#max_step  =  1    # maximum timestep

stop_time = 1.0  # 20 if dimensional, 1 if dimensionless

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  6.0 12.0  
ns.EILE_flag=-1


# 1  => tag cell if this material is primary material in the cell stencil.
# 0  => tag cell if this material and another *qualified* 
#       material are both primary materials in this cell stencil.
# -1 => do not tag a cell in which this material is the primary
#       material in the cell stencil and a triple point is not nearby.
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=30
ns.initial_cg_cycles=20
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0e+8
ns.num_materials=3 # 1: liquid 2: air 3: ice/substrate
ns.mof_ordering=4 4 1
# solidheat_flag=0=>diffuse in solid 
# solidheat_flag=1=>dirichlet  (must have heatvisc(im_solid)>0)
# solidheat_flag=2=>neumann
ns.solidheat_flag=0  

ns.num_species_var=0
ns.post_init_pressure_solve=1 
ns.MOFITERMAX=30

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0

amr.plotfile_on_restart=1
#ns.visual_revolve=32

amr.n_cell    = 32 64 # 6x12
amr.max_level = 2
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 1000      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024
#amr.restart         = chk01000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.01 
# 1.0 if dimensional; Prandtl=CPL muL/kL=14.4 if dimensionless
ns.visc_coef      = 14.4
mac.visc_abs_tol   = 1.0e-10
# Bond=0.3
# Weber=1.7E-7  BO/WE=1.8e+6
# 1/Weber=5.9e+6  (BO/WE=3.9e+6 if R=0.2 cm instead of 0.15 cm)
ns.gravity        = 1.8e+6
# sigma_{SV}-sigma_{SL}=sigma_{LV}cos(theta)
# material 1=liquid 2=gas  3=ice 4=substrate
# 12,13,23
# cos(theta)=(5.9-11.7)/5.9
# cos(173)=(5.9-x)/5.9  x=11.75
ns.tension = 5.9e+6 2.0e+6 5.9e+6 
ns.prefreeze_tension = 5.9e+6 4.0e+5 5.9e+6 

# material 1=liquid 2=gas  3=ice  4=substrate
ns.stiffCP=1.0 0.2389200812 0.4778401625 0.2

# ST=(TSAT-TCOLD)CP/L
# units of latent_heat: 1 J/kg=10^7 erg/(1000 g)=10^4 erg/g
# L=334 J/g=3.34E+9 erg/g=334 J/(kg/1000)=3.34E+5 J/kg
#ns.latent_heat = -3.34e+9 0.0 # 12,21 liquid-> ice, ice -> liquid FREEZING
# <0 if condensation or solidification
# >0 if boiling or melting
#12 13 23 then reverse
# -1.042 for 75 degress supercool
# -3.125 for 25 degrees supercool
ns.latent_heat = 0.0 -3.125 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
# 1->2 liquid-> gas
# 1->3 liquid->ice 
# ....
#12 13 23 then reverse
ns.saturation_temp = 0.0 273.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
ns.nucleation_temp = 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
# 
#ns.fixed_dt	  = 0.01     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

# initial droplet with small layer of ice at its bottom, on a solid substrate.
# probtype=55
ns.axis_dir=1
ns.vorterr=0.0 0.0 0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=263  # not used
# dimensionless impact speed=
#    14569+sqrt(2Lg)=14569+sqrt(2 1.8e+6 0.2125)=14569+875=15444
# U=0.009
# dimensional impact velocity: 139
# dimensionless: 139/0.009=15444
ns.advbot=14569.0 # initial falling (downward) speed of drop if axis_dir=1
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=1 # adv_dir=1 x direction  adv_dir=2 y direction   
ns.pressure_error_cutoff=0.0 0.0 0.0 0.0
ns.material_type=0 0 0 999
# Latent heat: 1 J/kg = 10^7 erg/kg=10^4 erg/g
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)
# water: k=0.58 W/(M K)
# cp default to be 4.1855E+7 erg/(g K) (all incompressible materials)
# MKS: cp=4.1855 J/((kg/1000)K)=4.1855E+3 J/(kg K)
#ns.heatviscconst=58000.0 2400.0 218000.0 # liquid/air/ice
ns.heatviscconst=1.0 0.04 3.76 1.8 # dimensionless
#ns.viscconst=0.02 0.0001 0.02 # dimensional
ns.viscconst=1.0 0.005 1.0 0.01 # dimensionless
ns.denconst=1.0 0.000623 0.934 0.934
ns.FSI_flag=0 0 3 1

ns.tempconst=272.666 272.0 272.0 272.0 # dimensionless
ns.xblob=0.0  # center of water drop
ns.yblob=1.4 #dimensionless
ns.zblob=0.0
ns.xblob2=0.0 # center of surface of cold plate (xblob2,yblob2)(inclined)  
ns.yblob2=0.1875
ns.zblob2=0.1875
ns.radblob2=0.0 # zero degrees incline (radians)
# thickness of underside of droplet that is already frozen:
# ns.radblob3
# 15 microliter drop= 15 x 10^{-6} x 10^3=15 x 10^-3 cm
# (4/3) pi r^3 = 0.015  r^3=3(0.015)/(4pi)  r^3=0.0036  r=0.15 cm
# initial height is 10cm
# g t^2/2=9.85  
# t=0.14  v=g t=139 cm/s
# g t^2/2 = L  t=sqrt(2L/g)   v=sqrt(2Lg)
# tau=rho CP R^2/K=(1)4.1855e+7(0.15)^2/58000=16.24 seconds
# U=0.15/16.24=0.009 cm/s
# BO=rho g R^2/sigma=1(980)(.15^2)/72.8=0.30
# WE=rho U^2 R/sigma=.009^2 (.15)/72.8=1.7E-7
# BO/WE=1.8E+6
ns.radblob=1.0 #dimensionless
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
# boundary conditions 
#ns.prescribe_temperature_outflow=0 # =0 for stefan problem
#ns.prescribe_temperature_outflow=1 # =1 for sucking problem
ns.prescribe_temperature_outflow=3 # dirichlet for inflow,outflow,wall
ns.lo_bc          = 3 5
ns.hi_bc          = 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

