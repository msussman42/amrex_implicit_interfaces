


# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
#max_step  =  99999999    # maximum timestep
#max_step  =  1.0e-5    # maximum timestep
# bubble radius should double at 3E-7
# when dimensionless time=3E-7/5E-8=(3/5)*10=6
stop_time = 6.0  # T=L/U=5E-5/1E+3=5E-8
thickness = 0.1

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  10.0 10.0  #  scaled by L
# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 100
mg.bot_atol = 1.0e-13
mg.rtol_b = -0.01
Lp.v = 0
ns.be_cn_theta=1.0
ns.rk_theta=1.0
ns.pcav=220.2726e-6   # pressure in bars 
#ns.dencav=0.999958
ns.dencav=0.9
ns.pchopp=220.0e-6   # pressure in bars
ns.denchopp=0.9
ns.soundchopp=0.1    # velocity scaled by 1000
ns.bubble_pressure=0.0
ns.bubble_density=0.0017574
// 1.013 is 1 atm
ns.hydrostatic_pressure=1.0  # in bars psat(tliquid) 3.18823
ns.independent_pres=1
ns.visual_lo = 0 0
ns.visual_hi = 512 512
ns.visual_side_max = 512
amr.n_cell    = 32 32
amr.max_level =  1
ns.leemerte=0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4      # block factor in grid generation
amr.check_int       = 1000      # number of timesteps between checkpoints
amr.check_file      =try64last     # root name of checkpoint file
amr.plot_int        = 0 
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 256
#amr.restart         =try64last5518
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-14  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-11   # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-11

ns.edgeextraptype=0
ns.tvdrk=0
ns.overlap=1.0
ns.conserve_vof=0
ns.is_compressible=1
ns.icompvapor=1
ns.icompliquid=0
ns.is_phasechange=1
ns.is_twophase=1
ns.solvevapor=1
ns.conservation_law=2
ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max     = 1.1    # scale back initial timestep
ns.visc_coef      = 20.0     # 1/(LU)=1/(5E-5*1E+3)=1/5E-2=20
mac.visc_abs_tol   = 1.0e-11
ns.init_iter      = 1  # number of init iters to def pressure
#ns.gravity        = -4.9e-8 # -980e-6  cgs x L/U^2
ns.gravity=0.0
ns.gravityangle = 0.0
ns.tension=2.67751532  # a number between 1 and 1.16 cgs/LU^2
ns.tensionslope=-0.00401539
ns.shock_timestep=1
#ns.fixed_dt	  = 0.01     # hardwire dt 10^-8sec=0.2
ns.sum_interval   = 1        # timesteps between computing mass 
ns.RUNGAKUTTA = 0
ns.visctimestep=1
ns.axis_dir=0
#JPW ns.vorterr=4.0
ns.vorterr=1.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=2
ns.viscunburn=8.9e-3   # mu_s=1 
ns.viscburn=0.0
ns.viscvapor=0.0
ns.tcenter=-1.0
ns.denspread=1.0
ns.denwater=0.929522
ns.rho0tait=0.929522
ns.gammawater=7.15
ns.atait=1.0 # psat(tliquid)=3.18823
ns.btait=3.31e+03
ns.denair=1.0
ns.denvapor=0.0017574
ns.rho0gas=0.0017574
ns.contactangle=2.62
ns.xblob=0.0
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=1.0  #  scaled by 5E-5
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55
ns.walltemp=408.76
ns.twater=408.76
ns.tsatdef=-1.0   # -1.0
ns.ajwl=3.1975  # psat(tvapor)
ns.bjwl=3.1975
ns.tvapor=408.86
ns.cpwater=4.21850e+1  # scaled by 10^6
ns.cvwater=3.77472e+1  # scaled by 10^6
ns.kwater=1.35776    # divide by LU k_s = (5E-5)(1E+3)(1E+6)
ns.cpvapor=2.06244e+1  # scaled by 10^6 (cp-cv=5.1555)
ns.cvvapor=1.54689e+1  # scaled by 10^6
ns.gas_constant=4.45   # 4.45*denvapor*tvapor=3.1975=psat(tvapor)
ns.kvapor=0.0    # 0.051092 divide by LU k_s=(5E-5)(1E+3)(1E+6)
ns.latentheat=2.257e+4 # scaled by 10^6
ns.gammavapor=1.4
#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 3
ns.hi_bc          = 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
#contour.level = 0
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => same as 2 except show Up and not Ud
# win_siz     = number of pixels in max window direction
#
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.verbose = 1
contour.plot = triple1 triple 1   10    -1         2      400   -1   -1   0
#contour.plot = triple2 triple 1   1    -1         3      400   -1   -1   0
#contour.plot = triple3 triple 1   1    -1         4      400   -1   -1   0
#contour.plot = sound sound  1 1 10      2      400   1.0e-10 0 r
#contour.plot = vsound vsound  1 1 10    2      400   1.0e-10 0 r
#contour.plot = presliquid presliquid 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vpresliquid vpresliquid 1 1 10    2      400   1.0e-10 0 r
#contour.plot = denliquid denliquid 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vdenliquid vdenliquid 1 1 10    2      400   1.0e-10 0 r
#contour.plot = temperature temperature 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vtemperature vtemperature 1 1 10    2      400   1.0e-10 2 r
#contour.plot = yvelcombine yvelcombine 1 1 10    2      400   1.0e-10 0 r
#contour.plot = xvelcombine xvelcombine 1 1 10    2      400   1.0e-10 1 z
#contour.plot = pcombine pcombine 1 1 10      2      400   1.0e-10  0 r
#contour.plot = tcombine tcombine 1 10 10      2      400   1.0e-10 0 r
#contour.plot = tcombine tcombine 1 1 10      2      400   1.0e-10 1 z
#contour.plot = dencombine dencombine 1 1 10  2      400   1.0e-10 0 r
