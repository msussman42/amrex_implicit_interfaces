
# When GAS PRESSURE exceeds a threshold, then use AMR.
#
max_step  = 99401     # maximum timestep
stop_time = 1         # maximum problem time
ns.FSI_flag=0 0 1 # 1=solid prescribed in PROB_[23]D.F90, 2=sci_clsvof.F90
ns.invert_solid_levelset=1

# ------------------  INPUTS TO CLASS AMR ---------------------
#
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  -1.0  -0.45
geometry.prob_hi   =  3.5  0.45    # units of cm
geometry.is_periodic = 0 0 0

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 1000
ns.minimum_relative_error=1.0e-18
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
Lp.smooth_type=2
Lp.v = 0

ns.num_materials=3
ns.num_species_var=0


amr.n_cell    = 160 32
amr.max_level =  5  # 5 for production runs  
ns.shock_timestep=2 1 2 # take sound speed into account for 2nd material,
                        # but not the first. ("2" means only use velocity
                        # for determining dt, "1" means use velocity and
                        # sound speed. "0" means use sound speed only for
                        # very first timestep.
                        # for incomp. materials, sound speed never used.

# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.9   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = -1      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = -1      # -1 for production runs
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32 
#amr.restart         = chk18000 # temperature problem occurs at 18000 steps
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # not used

mac.mac_tol        = 1.0e-8  # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-8

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max     = 1.1      
ns.visc_coef      = 1.0
mac.visc_abs_tol   = 2.0e-5
ns.gravity        = 0.0  
ns.tension        = 12.0 12.0 12.0  # 90 degree contact angle 
#ns.fixed_dt	  = 4.0e-9   # hardwire dt
ns.sum_interval   = 20        # timesteps between computing mass 

ns.axis_dir=2  # 0=no nozzle  1=nozzle  2=nozzle+pressure BC
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0  # jet velocity
ns.adv_vel=0.0 # inflow of air from the side is zero (it will be outflow bc)
ns.adv_dir=1       # inflow in x-dir (outflow bc will be prescribed though)
ns.inflow_pressure=5.0e+6
ns.outflow_pressure=1.0e+6
ns.viscconst=20.0 0.0002 20.0  # g/(cm s)  
ns.heatviscconst=0.0 0.0 0.0
ns.denconst=0.75 0.00125 1.0  # 0.00125 for air
# SUSSMAN material_type=14 EOS_air_rho2 uses denconst
# SUSSMAN material_type=5  EOS_air (does not use denconst in EOS)
ns.material_type=0 5 999  # material 4 is SF6 material, material 5 is air
ns.pressure_error_flag=1 # look at pressure variation.
ns.pressure_error_cutoff=0.0 2.0e+6 0.0
ns.tempconst=513.0 300.0 513.0

ns.xblob=-0.9046
ns.yblob=-0.45
ns.zblob= 0.
ns.radblob=0.0186 
ns.xblob2= 1.86948 # tangent of injection angle wrt vertical
ns.yblob2= -0.02   # absolute height of injection
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=539  # axis_dir=2 if nozzle+pressure BC

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 2 2
ns.hi_bc          = 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

