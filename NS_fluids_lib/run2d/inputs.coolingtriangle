

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  9999999    # maximum timestep
stop_time = 1.0e+10

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  10.0 1.0  # 10.0 x 2.0 for two-phase 
ns.cvapor=1000.0
ns.cwater=1000.0
ns.pseudo_transient_steps=20
ns.is_ocean=1
ns.conservative_advection=0
ns.temperature_conservative_advection=0

ns.implicit_surface_tension=1
ns.ls_curvature=1
ns.projection_order=1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 50
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
Lp.v = 0

ns.pcav=220.2726e-6 # pressure in bars
ns.dencav=0.9 
ns.pchopp=220.0e-6  # pressure in bars
ns.denchopp=0.9
ns.soundchopp=0.1  # velocity scaled by 1000
ns.bubble_pressure=0.0
ns.bubble_density=0.00063

ns.visual_lo = -1 -1
ns.visual_hi = 1024 1024
ns.visual_side_max = 512

ns.mapspread=1.0e+10
Lp.smooth_type=2
amr.n_cell    = 192 32   # 192x32 just water, 192x64 two-phase
amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.75   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 1000    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
amr.plot_int        = 1000
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024      # SUPERCOMPUTER
amr.restart         = chk42000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-8

ns.overlap=1.0  # 1.0
ns.conserve_vof=4   # truncate all
ns.is_compressible=0
ns.is_twophase=1
ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max=1.01   
ns.visc_coef      = 0.045  # 1/Gr^1/2
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = -980.0    #  1/Fr   assume Fr=1/980
ns.gravityangle = 0.0
ns.tension        = 0.0  
#ns.fixed_dt	  = 10.0     # hardwire dt 0.00025
ns.sum_interval   = 1        # timesteps between computing mass 
ns.visctimestep=1

ns.axis_dir=0  
ns.vorterr=1.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1  
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=2
ns.viscunburn=1.0
ns.viscburn=0.01
ns.viscvapor=0.01
ns.tcenter=1.0e-10  # adapt when radius<tcenter*dx
ns.solidradius=1.0
ns.denwater=1.0
ns.rho0tait=1.0
ns.gammawater=7.15
ns.atait=1.0
ns.btait=3.31e+03
ns.denair=0.001
ns.denvapor=0.001  
ns.contactangle=0.663 # 38 deg.=0.663  90 deg=1.570796
ns.xblob=10.0  # width of triangle
ns.yblob=1.0   # height of triangle
ns.yblob2=2.0  # position of free surface  1.0
ns.yblob3=0.0  # offset from top to avoid singularity
ns.zblob=0.0
ns.radblob=1.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=81
ns.walltemp=0.0
ns.twater=0.0
ns.tsatdef=0.0
ns.tvapor=0.0
ns.cpwater=1.0
ns.cvwater=1.0
ns.kwater=0.0064 # 1/(Gr^(1/2) Pr) 
ns.gas_constant=4.62   # scaled by 10^6 (cp-cv)  4.62
ns.hydrostatic_pressure=1.0  # in bars 1.013=1atm  1.0
ns.cpvapor=1.0
ns.cvvapor=1.0
ns.kgas=0.000064  # 1/(100 * Gr^(1/2) * Pr)
ns.kvapor=0.000064  # 1/(100 * Gr^(1/2) * Pr)
# -Fr
ns.dRhodT=-0.001 #  rho=rho(1+beta*(t-twater))
ns.dRhodTvapor=-0.001
#ns.dgdT=-0.001 
ns.tempflux=-1.0 # -100 if two-phase problem  -1.0 if just water
ns.gammavapor=1.4

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 5 5
ns.hi_bc          = 5 5
ns.livepressureoverride=0

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
#contour.level = 0
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => overlay liquid vel.  4 => overlay vapor velocity
# win_siz     = number of pixels in max window direction
#
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.verbose = 1
contour.arrow_factor=4.0
contour.maxpoints=16
#contour.plot = tcombine tcombine 1 10 10   1      800   -1 -1  0 
#contour.plot = temperature temperature 1 10 10      1      800   -1 -1 0
#contour.plot = denliquid denliquid 1 20 10        2      400   -1   -1  0
#contour.plot = triple triple 1   10    -1          2     1000   -1   -1   0
#contour.plot = sound sound  1 1 10      2      400   1.0e-10 0 r
#contour.plot = vsound vsound  1 1 10    2      400   1.0e-10 0 r
#contour.plot = presliquid presliquid 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vpresliquid vpresliquid 1 1 10    2      400   1.0e-10 0 r
#contour.plot = denliquid denliquid 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vdenliquid vdenliquid 1 1 10    2      400   1.0e-10 0 r
#contour.plot = temperature temperature 1 1 10      2      400   1.0e-10 -1 r
#contour.plot = vtemperature vtemperature 1 1 10    2      400   1.0e-10 -1 r
#contour.plot = yvelcombine yvelcombine 1 1 10    2      400   1.0e-10 0 r
#contour.plot = xvelcombine xvelcombine 1 1 10    2      400   1.0e-10 1 z
#contour.plot = pcombine pcombine 1 1 10      2      400   1.0e-10 0 r
#contour.plot = dencombine dencombine 1 1 10  2      400   1.0e-10 0 r

