# MODEL 5: 
#  The difference between MODEL 5 and MODEL 2 is that for MODEL 5 
#  the substrate-fluid boundary condition is [k grad T dot n]=0 instead
#  of T=T_substrate_fluid.  Another difference is that for MODEL 5, the
#  temperature is maintained, via a heat source term, at T=T_substrate_fluid
#  in a user prescribed region just below the substrate-fluid boundary.
#   
# The growth rate for MODEL 2 will usually be proportional to t^(1/2).
#
# If the "heat source" region for MODEL 5 does not occupy the whole
# length of the domain, then the growth rate for MODEL 5 will be 
# proportional to t^(1/2) in the beginning stages, then t^(1/3) later on.
# NOTE FOR MODEL 5: In the very beginning, the bubble will grow very slowly
#  if the substrate temperature is initialized the same as the saturation
#  temperature and the heat source is far from the substrate-fluid interface.
#
#          ns.microlayer_size=0.0 0.0 ... 0.0
#          ns.macrolayer_size=0.0 ... 0.0  
#          ns.microlayer_substrate=0 0 0 0
#          ns.microlayer_temperature_substrate=0.0 0.0 0.0 0.0
#          ns.microlayer_angle=0.0 0.0 0.0 0.0 
#          ns_initial_temperature_diffuse_duration=0.0
#          ns_initial_temperature=373.0 373.0 373.0
#          ns.saturation_temp=373.0 0.0 0.0 0.0 0.0 0.0
#          ns.tempconst=373.0 373.0 400.0
#          ns.solidheat_flag=0  (diffuse in the substrate)
#          ns.yblob3=1.0e-15 (initial thermal layer is negligible)
#          ns.temperature_source=400.0 
#          ns.temperature_source_cen=0.0 1.041665e-4 0.0
#          ns.temperature_source_rad=0.001 1.041665e-4 0.0
# force tagging in the heater region
# ns.nblocks=1
# ns.xblocks=0.0
# ns.yblocks=1.041665e-4
# ns.zblocks=0.0
# ns.rxblocks=0.001
# ns.ryblocks=1.041665e-4
# ns.rzblocks=0.0
#
# original: Figure 2:
# "Direct Numerical Simulations of Flows with Phase Change"
# Tryggvason and Lu, Procedia IUTAM volume 15, 2015, 2-13
#
# also original:
# Son, G., V. K. Dhir, and N. Ramanujapu. 
# "Dynamics and heat transfer associated with a single bubble 
# during nucleate boiling on a horizontal surface." 
# Journal of Heat Transfer 121.3 (1999): 623-631.
#
# NOW: Earth Gravity, Water boiling, from Dhir 2001.


# Derive the dimensionless character value 
# At 1 atm: 
# \rho_l = 958.4 kg/m^3 \rho_v =  0.597kg/m^3
# G = gravity acceleration = 9.8 m/s^2
# sigma = 0.0588N/m
# 
# character length: l_0 = \sqrt(sigma/(G*(\rho_l-\rho_v))) = 0.002507 m 
#                     testify (N/m) / (m/s^2*kg/m^3) = (kg*m/s^2/m) / (kg/(m^2*s^2)) = m^2
# character velocity: u_0 = \sqrt(g*l_0) = 0.156744
# character time: t_0 = l0/u0 = 0.0159942
# 

max_step  =  99999999    # maximum timestep
stop_time = 2.0

geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
#geometry.prob_hi   =  1.0 2.0    # r/l_0  y/l_0
geometry.prob_hi   =  5.0e-3 20.0e-3   # MKS
ns.freezing_model=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# distribute_from_target=0: mdot in dest material (vapor), 
#   V=[k grad T dot n]/rho_source
# distribute_from_target=1: mdot in source material (liquid), 
#   V=[k grad T dot n]/rho_dest
# liquid, vapor, gas, solid
# 12,13,14
ns.distribute_from_target=0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# 1..2*nten=1..2*(num_interfaces)
# 1 => mdot distributed in the vapor with cellvol weighting
# 2 => mdot distributed in the vapor with constant weighting
ns.distribute_mdot_evenly=1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

ns.EILE_flag=-1
#   continuous_mof=2 CMOF everywhere 
ns.continuous_mof=2
ns.MOFITERMAX=15
ns.num_divu_outer_sweeps=1
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=3
ns.initial_cg_cycles=3
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
#ns.projection_pressure_scale=1.0e+6  # non-dimensional
ns.projection_pressure_scale=1.0
#ns.num_materials=3 # 1: liquid 2: vapor 3: solid (3 materials)
ns.num_materials=4 # 1: liquid 2: vapor 3: gas 4: solid (4 materials)
ns.num_species_var=0
ns.post_init_pressure_solve=1
ns.output_drop_distribution=1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-11
Lp.bottom_bottom_tol_factor=0.0001
Lp.smooth_type=0 # GSRB
Lp.bottom_smooth_type=2 # ILU
mg.presmooth=2
mg.postsmooth=2
mg.rtol_b = -0.01
Lp.v = 0

amr.plotfile_on_restart=1
#ns.visual_revolve=32
ns.visual_tessellate_vfrac=1

amr.n_cell    = 128 512
amr.max_level =  1  
# NOV 2018 (3 or 4 materials)
# liquid, vapor, gas, substrate 4 mat
# liquid, vapor, substrate 3 mat
# 0=never adapt   1=if radius< 1 * dx then adapt
# -1=always adapt
# An interface changing phase will always be adapted
# to the finest possible level.
# Triple junctions will always be adapted to the finest possible level.

ns.ns_tiling=false
fabarray.mfiter_tile_size=16 16
amr.n_error_buf     = 4 4 4 4 4 4 4  # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 8 8 8 8 8 8 8 8 8    # block factor in grid generation
amr.space_blocking_factor = 1 1 1 1 1 1
amr.time_blocking_factor=1
ns.enable_spectral=0
amr.regrid_int      = 1       # how often to regrid
#amr.check_int       = 200    # number of timesteps between checkpoints
amr.check_int       = 500    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
#amr.plot_int        = 200
amr.plot_int        = 500
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 128 64
#amr.restart         = chk20000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-9

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max     = 1.1    # scale back initial timestep
# viscous force term: rho u_t = visc_coef * div ( 2 mu D)
# mu corresponds to "viscconst"
ns.visc_coef      = 1.0    
mac.visc_abs_tol   = 1.0e-9

#ns.gravity        = -1.0     # nondimensional 
#  G = -9.8 m/s^2  G0 = G/l_0*t_0^2 = -9.8/0.002507*(0.0159942)^2
# NOV 2018 (3 or 4 materials)
ns.gravity_dir = 2  # 1,2, or 3  (2 in 2D is default)
ns.gravity        = -9.8 #  dimensional  MKS
# =1 (default) grad p_hydro(z)/rho_hydro(z)
# =0  -|g|

# rhohydro+fort_denconst(im)*DrhoDT(im)*(T-fort_tempconst(im))
#ns.DrhoDT = -0.0007 0.0 0.0   # units: 1/degree K
ns.DrhoDT = 0.0 0.0 0.0 0.0   # units: 1/degree K
# override_density=1 => rho=rho(T,z)
# "default_hydrostatic_pressure_density" called if override_density=1.
# gravity force is grad (-|g| denconst(1) y)/denconst(1) = -|g| 
# rho_liq=denconst(1)+denconst(1)*DrhoDT(1)*(T-tempconst(1))
# override_density=2 0 0 0 => P_hydro=P_hydro(rho(T,z)) (like Boussinesq) 
ns.override_density=0 0 0 0
# sigma_{SV}-sigma_{SL}=sigma_{LV}cos(theta)
# sigma_{SL}=sigma_{LV}
# sigma_{SV}=(1+cos(theta)) sigma_{LV}
# theta=38 sigma_{SV}/sigma_{LV}= 1 + cos38 =  1.788
# 12 13 23  (LV SL SV)
# N/m
# 38 degrees contact angle (angle between liquid and substrate)
# theta=80 sigma_{SV}/sigma_{LV}=1.17  
# theta=140 sigma_{SV}/sigma{LV}=0.23
# theta=45 sigma_{SV}/sigma_{LV}=1+1/sqrt{2}
# 12 13 14 23 24 34 (LV LG SL VG VS GS)


# ns.tension=58.8e-3 58.8e-3 105.1344e-3    # dimensional   (N/m) = (kg/s^2)
# sigma = 58.8e-3 (N/m) = (kg/s^2) 
# sigma_0 = 58.8e-3 (kg/s^2) * t_0^2 =  1.504e-5
#ns.tension=1.504e-5 1.504e-5 268.9152e-3    # dimensionless  (kg/(1))
# OCT 2018 (4 materials)
# 49.995 degrees contact angle (Liquid-vapor-solid)
# 90 degrees contact angle (Liquid-gas-solid)
# Make the angle smaller to induce faster pinch-off?
ns.tension=58.8e-3 58.8e-3 58.8e-3 0.0 96.6e-3 58.8e-3 
# NOV 2018 (3 materials)
#ns.tension=58.8e-3 58.8e-3 96.6e-3

# Joule/(kg Kelvin)
# ns.stiffCP=4217.0 2029.0 700.0                         # dimensional
# 1 J/(kg*K) = 1 kg*m^2/s^2/(kg*K) = 1 m^2/(s^2*K)
# CP_0 = CP/(l_0^2)*(t_0^2) =  (1/K)
#ns.stiffCP=1.7164e+5 8.25845e+4 2.849144e+4              # dimensionless
# OCT 2018 (4 materials)
ns.stiffCP=4217.0 2029.0 2029.0 385.0
# NOV 2018 (3 materials)
#ns.stiffCP=4217.0 2029.0 385.0

# 12 13 23 21 31 32  (12 liquid->vapor (boiling) 21 vapor->liquid condensate)
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]
# 12 13 14 23 24 34 21 31 41 32 42 43 
# (12 liquid->vapor (boiling) 21 vapor->liquid condensate)

# Joule/kg
# ns.latent_heat=2257e+3 0.0 0.0 0.0 0.0 0.0     # dimensional 
# latent_0 = latent /(l_0^2)* (t_0^2)
#ns.latent_heat=9.18645e+7 0.0 0.0 0.0 0.0 0.0     #  dimensionless
# NOV 2018 (3 or 4 materials)
ns.latent_heat=2257e+3 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 

# if latent_heat<>0,
# if nucleation_period==0.0, only nucleate one bubble, 
# if nucleation_period>0.0, periodically nucleate bubbles.
#ns.nucleation_period= 37.28
#ns.saturation_temp=373.0 0.0 0.0 0.0 0.0 0.0
# NUCLEATION: UNDER CONSTRUCTION
# NavierStokes::level_phase_change_rate
# FORT_RATEMASSCHANGE in MASS_TRANSFER_3D.F90
#ns.nucleation_period=0.07	#Every 90ms?
ns.nucleation_period=0.05
#ns.nucleation_period=0.260
# default is 1.
# pos_sites_random_flag=0 => use pos_sites
# pos_sites_random_flag=1 => if RZ, then r=0.0, use pos_sites for z
#                            if XYZ, then x,y are random, use pos_sites
#                             for z.
ns.pos_sites_random_flag=0
ns.nucleation_init_time=0.0  #have bubbles nucleated at t=0

# NOV 2018 (3 or 4 materials)
ns.saturation_temp=373.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

#ns.fixed_dt	  = 0.1     # hardwire dt
ns.sum_interval   = 1      # timesteps between computing mass 
# see subroutine VISC_dodecane in GLOBALUTIL.F90
ns.viscosity_state_model=0 0 0 0

# 6 instead of 5 signals nucleate boiling
ns.axis_dir=6
ns.xblob3=0.0  # unused
# see subroutine outside_temperature in PROB.F90

#ns.yblob3=6.17e-4 # initial thermal layer (meters)       
#  = h/2
ns.yblob3=6.38e-4  # initial thermal layer (meters) (was 6.95e-4)

# December 21, 2017:
#ns.yblob3=0.1e-4 #growth rate sensitive to the thermal layer and contact angle
# see subroutine get_internal_heat_source in PROB.F90
# see subroutine microcell_heat_model in PROB.F90
# if zblob3>0, heatcoeff=heatcoeff*dx/zblob3 (where LS_SOLID changes sign)
# if zblob3<0, then heat source in solid cells that adjoin fluid.
# if zblob3<0, then solidheat_flag should be 0. (diffuse in solid)
# if zblob3=0, then Dirichlet BC at z=zlo (no internal heat flux or 
#  other internal BC)
#  solidheat_flag=1 (dirichlet in solid),zblob3>0:
#  microlayer flux is (T-TSOLID)/zblob3 
#
# February 21, 2018:
# An improved microlayer model has been implemented.  Recommend
# ns.zblob3=0.0 for cases with Dirichlet BC at wall/fluid boundary.
#
# heat flux in the solid cells that adjoin a fluid cell:
# page 30, Sato Niceno (2015): "heater power maintained at 30kW/m^2"
# rho cp DT/dt=-div q + Q
# Q=(area) * |zblob3|/(volume)=(m^2)(W/m^2)/(m^3)=W/m^3
# for Tryggvason problem: T=383 degrees at the wall.
ns.zblob3=0.0
ns.vorterr=0.0 0.0 0.0 0.0
ns.rgasinlet=1.57 # not used
ns.vinletgas=0.0
ns.twall=0.0  # not used
ns.advbot=0.0 # initial falling (downward) speed of liquid drop (always 0)
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=2 # adv_dir=1 x direction  adv_dir=2 y direction
ns.pressure_error_cutoff=0.0 0.0 0.0 0.0
# OCT 2018 (4 materials)
ns.material_type=0 0 0 999
# NOV 2018 (3 materials)
#ns.material_type=0 0 999
# thermal conductivity: Watts/(meter Kelvin)
# ns.heatviscconst=0.680 0.0248 148.0                    # dimensional
# 1 W/(m*K) = 1(kg*m^2/s^3/(m*K)) = 1(kg*m/(s^3*K)) 
# 0.68/l_0*t_0^3 (kg/K)
#ns.heatviscconst= 1.1098e-3 4.0475e-5 0.24154    # dimensionless
# OCT 2018 (4 materials)
ns.heatviscconst=0.680 0.0248 0.0248 377
# NOV 2018 (3 materials)
#ns.heatviscconst=0.680 0.0248 377

# liquid-vapor, liquid-solid, vapor-solid
# 0.0 means do not use.
# December 21: changed to all zeros (since substrate is only 2 cells from 
# bottom of the domain).
#JULY 17 
# OCT 2018 (4 materials)
# 12 13 14 23 24 34 (LV LG SL VG VS GS)
# NOV 2018 (3 materials)
ns.heatviscconst_interface=0.0 0.0 0.0 0.0 0.0 0.0  # 4 materials
#ns.heatviscconst_interface=0.0 0.0 0.0
# dynamic viscosity Pa * s = N s / m^2
# ns.viscconst=279E-6 12.02e-6 279E-6               # dimensional
# 1 (N/m^2)*s = 1 (kg*m/s^2/m^2)*s = 1 (kg/(m*s))
# 279e-6 *l_0 *t_0  (kg)
#ns.viscconst= 1.1187e-8 4.8197e-10 1.1187e-8  # dimensionless
# OCT 2018 (4 materials)
# was 279E-6 for the liquid and solid.
#ns.viscconst=279E-3 12.02e-6 12.02e-6 279E-3
ns.viscconst=279E-5 12.02e-6 12.02e-6 279E-5
# NOV 2018 (3 materials)
#ns.viscconst=279E-6 12.02e-6 279E-6

# density: kg/m^3
# ns.denconst=958 0.5956 2329             # dimensional
# 958 * l_0^3  (kg)
#ns.denconst= 1.50948e-5 9.38464E-9 3.6697e-5  # dimensionless
#ns.FSI_flag=0 0 1
# OCT 2018 (4 materials)
ns.denconst=958 0.5956 0.5956 8960
# NOV 2018 (3 materials)
#ns.denconst=958 0.5956 8960
# 4 materials
ns.FSI_flag=0 0 0 1
# 3 materials
#ns.FSI_flag=0 0 1

# 0=diffuse in solid, 1=dirichlet, 2=neumann
# if solidheat_flag=2, then "tempfluxsolid" is called.
# February 21, 2018 new microlayer model: solidheat_flag=1 instead of 0.
ns.solidheat_flag=1

# February 21, 2018: parameters for new microlayer model:
# material id for the substrate material that neighbors the thin film
# microlayer liquid:
#ns.microlayer_substrate=3 0 0
# microlayer contact angle (radians): 38 degrees            
#ns.microlayer_angle=0.663 0.0 0.0

# OCT 2018 (4 materials)
ns.microlayer_substrate=4 0 0 0
# NOV 2018 (3 materials)
#ns.microlayer_substrate=3 0 0 0

# microlayer contact angle (radians): 38 degrees
# microscale contact angle between liquid and substrate    
# NOV 2018 (3 or 4 materials)
ns.microlayer_angle=0.663225 0.0 0.0 0.0

# minimum thickness of thin liquid film (MKS)
# make this zero in order to disable the microlayer model.
# diameter of water molecule is about 2.9e-10
# 2.9e-10/l_0
# ns.microlayer_size=1.0e-9  0.0 0.0                      # dimensional
#ns.microlayer_size=  1.157e-7 0.0 0.0                    # dimensionless

# resolvable scale size (2 * dx for a representative dx):
# 2.5e-3/72=3.5e-5
#ns.macrolayer_size=3.5e-5 0.0 0.0                         #dimensional
#ns.macrolayer_size=0.01396 0.0 0.0                         #dimensionless

#ns.microlayer_size=  1.157e-7 0.0 0.0                    # dimensionless
#size of thin liquid film (size of a few liquid molecules)
# JULY 17
#ns.microlayer_size=  0.0 0.0 0.0  
# NOV 2018 (3 or 4 materials)
# NOV 2020 increase microlayer_size from 1.0e-9 to 1.0e-7
#ns.microlayer_size=  1.0e-7 0.0 0.0 0.0 
#Feb 12, 2021 
ns.microlayer_size=  1.0e-9 0.0 0.0 0.0 
#ns.microlayer_size=  1.157e-7 0.0 0.0                    # dimensionless
# 2 * dx_coarse=2 * 5.0e-3/48=2.08333e-4
ns.macrolayer_size=3.9063e-5 0.0 0.0 0.0   #dimensionless
#JULY 17
# no Temp BC at substrate/vapor interface
# NOV 2018 (3 or 4 materials)
ns.microlayer_temperature_substrate=0.0 0.0 0.0 0.0
# Temp=373 at substrate/vapor interface
#ns.microlayer_temperature_substrate=373.0 0.0 0.0 
# OCT 2018 (4 materials)
ns.tempconst=373.0 373.0 373.0 383.0
# NOV 2018 (3 materials)
#ns.tempconst=373.0 373.0 383.0
ns.temperature_source=0.0 #default=0.0 => "get_local_heat_source" returns 0
ns.temperature_source_cen=0.0 3.90625e-5 0.0
ns.temperature_source_rad=0.001 3.90625e-5 0.0
# force tagging in the heater region
ns.nblocks=1
ns.xblocks=0.0
ns.yblocks=3.90625e-5
ns.zblocks=0.0
ns.rxblocks=0.001
ns.ryblocks=3.90625e-5
ns.rzblocks=0.0


#JULY 17
# OCT 2018 (4 materials)
ns.initial_temperature=373.0 373.0 373.0 383.0
# NOV 2018 (3 materials)
#ns.initial_temperature=373.0 373.0 383.0
#JULY 17
# make this positive in order to initialize the bubble/liquid/substrate
# system with a smoothed temperature that obeys the appropriate
# boundary conditions.
ns.initial_temperature_diffuse_duration=0.0
# NOV 2018 (3 or 4 materials)
ns.tempcutoff=373.0 373.0 373.0 373.0
ns.tempcutoffmax=383.0 383.0 383.0 383.0

#ns.tempconst=373.0 373.0 379.2        # delta T = 6.2
#ns.tempcutoff=373.0 373.0 373.0 
#ns.tempcutoffmax=383.0 383.0 383.0 
#(xblob,yblob)=center of vapor bubble
ns.xblob=0.0  
# 38 degrees: center-substrate=R * cos(theta)= 1.97e-4
# center=0.6944+1.97=2.6644e-4
# 2.6644e-4/l_0
#ns.yblob= 0.106278             # dimensionless
#ns.yblob=2.366e-4  
ns.yblob=3.169e-4  
ns.zblob=0.0
#ns.radblob=0.25e-3  # radius of nucleated seed.
#ns.radblob=0.09972   # dimensionless

ns.radblob=0.125e-3  # radius of nucleated seed (initial perimeter L(0)=0.00126)
#ns.max_contact_line_size=0.005 0.0 0.0
# OCT 2018 (4 materials)
# thickness of initial gas layer at outflow (orientation determined by
# ns.gravity_dir)
#ns.radblob10=1.0e-3 
# NOV 2018 3 materials, no gas layer at outflow
ns.radblob10=10.0e-3
# NOV 2018 use outflow_velocity_buffer_size
# (1,1),(2,1),(3,1),(1,2),(2,2),(3,2)   3D
# (1,1),(2,1),(1,2),(2,2)   2D
#ns.outflow_velocity_buffer_size=0.0 0.0 0.0 5.0e-4
ns.outflow_velocity_buffer_size=0.0 0.0 0.0 0.0

#JULY 17: WARNING: results are sensitive to the initial contact angle;
# if initial angle far from static condition, then bubble can
# prematurely lift off.
# yblob=yblob2+R cos(contact_angle)=2.08333e-4+2E-4 cos(49.995 deg)=3.369e-4
# NavierStokes::level_phase_change_rate

ns.n_sites=1
#ns.pos_sites=0.0 2.6644e-4 0.0 0.25e-3 
#ns.pos_sites=0.0 0.106278 0.0 0.09972       # dimensionless
# pos_sites=x1 y1 z1 r1 x2 y2 z2 r2 ....
# in new version: it could be that r is not used.
#ns.pos_sites=0.0 2.366e-4 0.0 0.125e-3 
ns.pos_sites=0.0 3.169e-4 0.0 0.25e-3 

# x,y center of surface of HOT plate (xblob2,yblob2) (inclined)
ns.xblob2=0.0 
#ns.yblob2=0.6944e-4 # 2 * dxcoarsest=2 * 2.5e-3/72=2.5e-3/36=0.6944e-4
#ns.yblob2=0.027698                         # dimensionless
#n_cell=32 128
#prob_hi=5e-3  20e-3
#dxcoarsest=1.5625e-4
#3.125e-4/1.5625e-4=2
ns.yblob2=1.5625e-4 # 4 * dxcoarsest=4 * 5.0e-3/128

ns.zblob2=0.0
ns.radblob2=0.0 # zero degrees incline (radians)
ns.radblob3=0.0
ns.denfact=1.0
ns.velfact=0.0
# see subroutine GENERAL_PHASE_CHANGE_SUMINT in GENERAL_PHASE_CHANGE.F90
ns.probtype=55

# make this >0, in order to output the 
# Nusselt number.
ns.ncomp_sum_int_user1=4 # user defined number of integrated quantities

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=3

#ns.lo_bc          = 3 3  # this option if heat source
ns.lo_bc          = 3 5
ns.hi_bc          = 3 2
ns.temperature_lo_bc          = 3 5
ns.temperature_hi_bc          = 3 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

