# Shetabivash, Dolatabadi, Paraschivoiu, JCP 2020 test problem
max_step  = 999999    # maximum timestep

stop_time = 20.0

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi=0.015 0.01  # meters
ns.slice_dir=1
ns.xslice=0.0 0.0
ns.EILE_flag=-1
ns.truncate_thickness=2.0

ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=5
ns.initial_cg_cycles=10
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0e+6
ns.num_materials=4 # 1: liquid 2: air 3: ice 4: solid
ns.num_species_var=0
ns.post_init_pressure_solve=1 
ns.MOFITERMAX=15
ns.MOF_TURN_OFF_LS=0
ns.MOF_DEBUG_RECON=0
ns.continuous_mof=2
# 0 - centroid furthest from uncaptured centroid
# 1 - use MOF error
ns.mof_error_ordering=0
# water,air,ice,solid
ns.mof_ordering=0 2 0 1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0

ns.multilevel_maxcycle=200
ns.multilevel_restart_period=25
cg.restart_period=25
cg.maxiter = 200

amr.plotfile_on_restart=1
#ns.visual_revolve=32

amr.n_cell=96 64
amr.max_level = 0
# water, gas, ice, substrate
# -1=> always adapt  0=> never adapt
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 # number of buffer cells in error est
amr.grid_eff        = 0.8     # what constitutes an efficient grid
ns.ns_tiling=false
amr.blocking_factor = 8 8 8 8  # block factor in grid generation
amr.check_int       = 500
#amr.check_int       = 10000  # static freezing test 10 
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 200 # 200
#amr.plot_int        = 500 # static freezing test 10
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024
amr.file_name_digits=7
#amr.restart         = chk0000750
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.01 
ns.visc_coef      = 1.0
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = -9.8 # m/s^2

#advection, surface tension, gravity
#Note: if gravity turned off, then surface tension force can be significantly
#reduced so that advection and freezing time steps
#can be used instead (simulation would run 100 times faster, giving similar
#freezing times?).  
ns.fixed_dt_scales=0.0 0.0 0.0
# 12,13,14,23,24,34
# LG,LI,LS,IG,GS,SI  
#initial theta_liquid (CL_tensions_from_angles.f):
# sigma_{SG}-sigma_{SL}=sigma_{LG}cos(theta_L_initial)
#    let sigma_{SG}=sigma_{LG} =>
# 1-sigma_{SL}/sigma_{LG}=cos(theta_L_initial)
#
#triple point (tensions_from_angles.f):
# sin(theta_G)/sigma_LI = sin(theta_I)/sigma_LG = sin(theta_L)/sigma_GI

#triple point: (silicone) theta_liq=60.0, theta_ice=132.0, theta_gas=168.0
#contact line: theta_L_initial=45 degrees
# LG,LI,LS,IG,GS,SI  (SI not used)
#ns.tension=0.831 0.232 0.243 0.968 0.831 0.243
# if theta_L_initial=33 degrees then:
ns.tension=0.831 0.232 0.134 0.968 0.831 0.243

#ns.unscaled_min_curvature_radius=10.0

# specific heat of glass: 0.84E+3 J/(kg K)
# specific heat of water: 4.186E+3 J/(kg K)
# specific heat of ice: 2.05E+3 J/(kg K)
# material 1=liquid 2=gas  3=ice 4=solid  
ns.stiffCP = 1.10e+3 1.10e+3 1.10e+3 3.850e+2  # dimensional J/(kg K)
# units of latent_heat: 1 J/kg=10^7 erg/(1000 g)=10^4 erg/g
# L=334 J/g=3.34E+9 erg/g=334 J/(kg/1000)=3.34E+5 J/kg
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]
#12 13 14 23 24 34 then reverse
# dimensional J/kg:
ns.latent_heat = 0.0 -1.81e+5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
# 1->2 liquid-> gas
# 1->3 liquid->ice 
# ....
#12 13 14 23 24 34 then reverse
ns.saturation_temp = 0.0 1683 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
# 
ns.temperature_primitive_variable=1 1 1 1
#ns.fixed_dt	  = 0.01     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

# initial droplet with small layer of ice at its bottom, on a solid substrate.
# probtype=55
ns.axis_dir=5   
ns.vorterr=0.0 0.0 0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=263  # not used
ns.advbot=0.0  # initial falling (downward) speed of liquid drop if axis_dir=1
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=1 # adv_dir=1 x direction  adv_dir=2 y direction   
ns.pressure_error_cutoff=0.0 0.0 0.0 0.0
# material 1=liquid 2=gas  3=ice 4=solid
ns.material_type=0 0 0 999
# Latent heat: 1 J/kg = 10^7 erg/kg=10^4 erg/g
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)
# water: k=0.58 W/(M K)
# MKS: cp=4.1855 J/((kg/1000)K)=4.1855E+3 J/(kg K)
ns.heatviscconst=62 0.62 31 386 # W/(m K)
# 12 13 14 23 24 34  
ns.heatviscconst_interface=0.0 0.0 0.0 0.0 0.0 0.0
ns.damping_coefficient=0.0 0.0 0.0 0.0
ns.viscconst=0.000557 0.0000279 0.0279 100.0 # dimensional Pa s
ns.denconst=2580 129 2350 8960
ns.FSI_flag=0 0 3 1
ns.recalesce_flag=0 0 0 0
# solidheat_flag=0=>diffuse in solid 
# solidheat_flag=1=>dirichlet  (must have heatvisc(im_solid)>0)
# solidheat_flag=2=>neumann
ns.solidheat_flag=1
ns.tempconst=1683 1683 1683 1663  
ns.initial_temperature=1683 1683 1683 1663  
ns.xblob=0.0  # center of water drop
ns.yblob=0.000625 #4*dxcoarse=0.0000625
ns.zblob=0.0
ns.xblob2=0.0 # center of surface of cold plate (xblob2,yblob2) (inclined)  
ns.yblob2=0.000625 #dxcoarse=0.001/64  4*dxcoarse=0.001/16=0.0000625
ns.zblob2=0.0
ns.radblob2=0.0 # zero degrees incline (radians)
# thickness of underside of droplet that is already frozen
ns.radblob3=0.0003125 #dimensionless 2*dxcoarse=0.001/32=0.00003125
# effective radius of water/ice drop: volume=(1/2)  (4/3)pi r^3=
# 3.2724923E-11 m^3
#ns.zblob4=0.0000625
#transitional substrate temperature
ns.zblob4=0.0 #substrate tempreture=wall temperature(atylo)
ns.radblob=500.0e-5 # meters
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55

#ns.mem_debug = 1
#ns.v = 2
ns.output_drop_distribution=1
#ns.show_mem=1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
# boundary conditions 
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=0
ns.lo_bc          = 3 5
ns.hi_bc          = 3 2
ns.temperature_lo_bc=3 1
ns.temperature_hi_bc=3 3

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

