max_step  =  99999  # maximum timestep
stop_time =  0.0006  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# need a resolution of at least 1.0/(32*2^4)
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  -0.1 0.0
geometry.prob_hi   =  0.1 1.2  # units of cm
geometry.is_periodic = 0 0

ns.minimum_relative_error=1.0e-24
ns.initial_project_cycles=10  
ns.initial_cg_cycles=10  
fab.do_initval=0  # default is 1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-12  # the coarsest coarsening of level 0 in old version;  
                      # level 0 in the new version.
mg.rtol_b = -0.01
Lp.v = 0


ns.num_materials=2      
ns.num_species_var=0
ns.shock_timestep=2 2 2

# for max_level=3,
# mass=0.00010487+0.00341176*t
amr.n_cell    = 16 96
amr.max_level =  3  
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4      # block factor in grid generation
amr.check_int       = 100  # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 10   # change to 50
amr.plot_file       = plt 
#amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 32  
#amr.restart         = chk000499
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.0000005  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 1.0   
ns.gravity        = 0.0   # body force  (gravity in MKS units)
ns.gravityangle = 0.0
ns.tension        = 73.0 
#ns.fixed_dt	  = 0.02     # hardwire dt
ns.sum_interval   = 10      # timesteps between computing mass 

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=1240.0  # inflow velocity at nozzle at the bottom (cm/s)x10^-3
ns.adv_vel=0.0    # inflow of air from the side x10^-3
ns.adv_dir=1      # inflow in x-direction
ns.material_type=0 0 
ns.heatviscconst=0.0 0.0  # g/(cm s)
ns.viscconst=0.010 0.0002  # g/(cm s)
ns.denconst=0.998 0.0012 
ns.tempconst=290.36 290.36 290.36  # corresponds to 1atm
ns.pressure_error_cutoff=0.0 0.0 
ns.xblob=0.0 
ns.yblob=0.0
ns.zblob=0.025  # level0: dz=1.2/96=0.0125  zblob=bottom of cylinder at y=.1
ns.xblob2=0.0
ns.radblob=0.032  # cm (radius of jet in x-y plane)
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=532  # probtype=530 jet starts from bottom, 532 from side

ns.UseLagrangianModel=0;
ns.droplet_size_factor=2.0
ns.droplet_sphericity=2.0
ns.x_measure_plan=999999
ns.n_radblob_critical_plane=0


#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 1 2
ns.hi_bc          = 1 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

