amr.n_cell      = 80 120 # 2/3 aspect ratio
amr.max_grid_size   = 40
cg.min_max_grid_size=128

# grid : 4 * 7 = 28
amr.plot_int    = 100   
ns.sum_interval = 50     # timesteps between computing mass

# microlayer contact angle (radians): 50 degrees            
ns.microlayer_angle=0.872664626 0.0 0.0
ns.microlayer_size=4.4661E-09 0.0 0.0        
ns.macrolayer_size=5.0000E-02 0.0 0.0           

# Density
ns.denconst=1.0000E+00 6.2171E-04 1.0438E+00
ns.density_ratio_relaxation_factor=1000.0
ns.lamb_capillary_wave_speed=1 #def=1 (rho_a+rho_w)/2

# Surface tension: 50 degrees contact angle
# LG,LS,GS
# sigma_LG cos(thetaL)=sigma_GS-sigma_LS
ns.tension=9.9938E-01 9.4440E-01 1.5868E+00

# Specific Heat Capacity
ns.stiffCP=1.9218E+05 9.2466E+04 1.9218E+05

# Latent heat
ns.latent_heat=1.0286E+08 0.0 0.0 0.0 0.0 0.0  

# Thermal conductivity
ns.heatviscconst=9.7526E+01 3.5568E+00 9.7526E+01

# Dynamic viscosity
ns.viscconst=8.7804E-04 3.7828E-05 8.7804E-04


max_step  =  99999999    # maximum timestep
stop_time = 6.0

geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   = 0 0.0
geometry.prob_hi   = 2.0 3.0 
ns.EILE_flag=-1
#NOTE:
#bubble pinch off frequency might not equilibrate until the 3rd or 4th
#ejection.
#(see "nucleation_period" below)
#in GNUmakefile if particles:
#USE_PARTICLES=TRUE ("PARTICLES" appears in the executable name)
#in GNUmakefile if no particles:
#USE_PARTICLES=FALSE
#MOF
#ns.continuous_mof=0
#CMOF or particle CMOF
ns.continuous_mof=1
ns.MOFITERMAX=30
#MOF or CMOF
#ns.MOFITERMAX_AFTER_PREDICT=30
#MOF or CMOF with particles
ns.MOFITERMAX_AFTER_PREDICT=0
#MOF or CMOF or CMOF w/particles; no machine learning
ns.mof_decision_tree_learning=0
ns.temperatureface_flag=0   # 0=use LS  1=use VOF
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=3
ns.initial_cg_cycles=3
ns.solvability_projection=0 # 0 since must allow for expansion
ns.project_solver_type=0 # 0MGPCG 1PCG 2MG
ns.projection_pressure_scale=1.0  # non-dimensional
#ns.projection_pressure_scale=1.0  # dimensional ?
ns.num_materials=3 # 1: liquid 2: vapor 3: solid
ns.num_species_var=0
ns.configuration_tensor_var=0
ns.post_init_pressure_solve=1

# FSI_flag for present phase/material
# FSI_FLUID=0 fluid (default)
# FSI_PRESCRIBED_PROBF90=1 solid (PROB_[23]D.F90)
# FSI_PRESCRIBED_NODES=2 solid (lagrangian)
# FSI_ICE_PROBF90=3 ice
ns.FSI_flag=0 0 1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
mg.maxiter = 100
cg.maxiter = 400
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0
Lp.harmavg = 0
godunov.printMinMax=0

amr.plotfile_on_restart=1
#ns.visual_revolve=32
ns.visual_nddata_format=0 #0 tecplot 1 native AMReX or HDF5 2 tecplot cells

amr.max_level =  0
ns.ns_tiling=false
fabarray.mfiter_tile_size=16 16
#amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.n_error_buf     = 2 2 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4 4 4 4 4 4 4    # block factor in grid generation
amr.space_blocking_factor = 1 1 1 1 1 1
amr.time_blocking_factor=1
ns.num_SDC_outer_sweeps=1
ns.enable_spectral=0
ns.diffusion_enable_spectral=0
amr.regrid_int      = 1       # how often to regrid
amr.check_int       = 1000    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.file_name_digits= 7
#amr.restart         = chk0010000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

#ns.fixed_dt	  = 0.0004   # hardwire dt
#ns.init_shrink    = 1.0      # scale back initial timestep

ns.cfl            = 0.75      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max     = 1.01    # scale back initial timestep
# viscous force term: rho u_t = visc_coef * div ( 2 mu D)
# mu corresponds to "viscconst"
ns.visc_coef      = 1.0  
ns.visc_abs_tol   = 1.0e-10
ns.gravity        = -1.0 #  dimensional  MKS
# rhohydro+fort_denconst(im)*DrhoDT(im)*(T-fort_tempconst(im))
ns.DrhoDT = -0.0007 0.0 0.0   # units: 1/degree K
ns.DrhoDz = 0.0 0.0 0.0
# override_density=1 => rho=rho(T,z)
# "default_hydrostatic_pressure_density" called if override_density=1.
# since DrhoDz=0.0,
# gravity force is grad (-|g| denconst(1) y)/denconst(1) = -|g| 
# rho_liq=denconst(1)+denconst(1)*DrhoDT(1)*(T-tempconst(1))
ns.override_density=2 0 0


# 12 13 23 21 31 32  (12 liquid->vapor (boiling) 21 vapor->liquid condensate)
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]
# Joule/kg
ns.saturation_temp=373.0 0.0 0.0 0.0 0.0 0.0

# 6 instead of 5 signals nucleate boiling
ns.axis_dir=6
ns.xblob3=0.0  # unused
# see subroutine outside_temperature in PROB.F90
ns.yblob3=1.0e-10  # initial thermal layer 
#ns.yblob3=9.1363E-01  # initial thermal layer 
#ns.yblob10=1.1253E+00  # initial velocity boundary layer

# see subroutine get_internal_heat_source in PROB.F90
# see subroutine microcell_heat_model in PROB.F90
# if zblob3>0, heatcoeff=heatcoeff*dx/zblob3 (where LS_SOLID changes sign)
# if zblob3<0, then heat source in solid cells that adjoin fluid.
# if zblob3<0, then solidheat_flag should be 0. (diffuse in solid)
# if zblob3=0, then Dirichlet BC at z=zlo (no internal heat flux or 
#  other internal BC)
#  solidheat_flag=1 (dirichlet in solid),zblob3>0:
#  microlayer flux is (T-TSOLID)/zblob3 
#
# heat flux in the solid cells that adjoin a fluid cell:
# page 30, Sato Niceno (2015): "heater power maintained at 30kW/m^2"
# rho cp DT/dt=-div q + Q
# Q=(area) * |zblob3|/(volume)=(m^2)(W/m^2)/(m^3)=W/m^3
# for Tryggvason problem: T=383 degrees at the wall.
ns.zblob3=0.0
ns.vorterr=0.0 0.0 0.0
ns.rgasinlet=1.57 # not used
ns.vinletgas=0.0
ns.twall=0.0  # not used
ns.advbot=0.0 # initial falling (downward) speed of liquid drop (always 0)
ns.adv_vel=0.0 # inflow velocity
ns.adv_dir=1 # adv_dir=1 x direction  adv_dir=2 y direction
ns.pressure_error_cutoff=0.0 0.0 0.0 
ns.material_type=0 0 999
# liquid-vapor, liquid-solid, vapor-solid
# 0.0 means do not use.
ns.heatviscconst_interface=0.0 0.0 0.0


# 0=diffuse in solid, 1=dirichlet, 2=neumann
# if solidheat_flag=2, then "tempfluxsolid" is called.
ns.solidheat_flag=1
#ns.solidheat_flag=0

# February 21, 2018: parameters for new microlayer model:
# material id for the substrate material that neighbors the thin film
# microlayer liquid:
ns.microlayer_substrate=3 0 0


# minimum thickness of thin liquid film (MKS)
# make this zero in order to disable the microlayer model.
# diameter of water molecule is about 2.9e-10
# 2.9e-10/l_0
# ns.microlayer_size=  1.157e-7 0.0 0.0                    # dimensionless
# ns.microlayer_size=  0.0 0.0 0.0  

# resolvable scale size (2 * dx for a representative dx):
# 3.75e-3/(32*2^3) *2
#ns.macrolayer_size=0.01396 0.0 0.0                         #dimensionless

ns.tempconst=373.0 373.0 380.0  # Delta T=380-373
#ns.initial_temperature=373.0 373.0 373.0
#ns.initial_temperature_diffuse_duration=6.0
ns.tempcutoff=373.0 373.0 373.0 
ns.tempcutoffmax=500.0 500.0 500.0 
#(xblob,yblob)=center of vapor bubble
ns.xblob=0.0
ns.yblob=0.1385681355
ns.zblob=0.0
ns.radblob=0.06  # radius of nucleated seed.

ns.n_sites=1
ns.pos_sites=0.0 0.1385681355 0.0 0.06

# if latent_heat<>0,
# if nucleation_period==0.0, only nucleate one bubble, 
# if nucleation_period>0.0, periodically nucleate bubbles.
ns.nucleation_period=0.0


# x,y center of surface of HOT plate (xblob2,yblob2) (inclined)
ns.xblob2=0.0 
ns.yblob2=0.1 # 4 * dxcoarsest
ns.zblob2=0.0
ns.radblob2=0.0 # zero degrees incline (radians)
ns.radblob3=0.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55

#ns.mem_debug = 1
ns.v = 0
#ns.d = 1
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=3

#ns.lo_bc          = 3 3  # this option if heat source
ns.lo_bc          = 3 5
ns.hi_bc          = 3 2
#ns.temperature_lo_bc          = 3 2
#ns.temperature_hi_bc          = 3 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats
RunStats.statvar = godunov_box level_project sync_project


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

