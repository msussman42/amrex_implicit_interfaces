# 001_Sussman_Ohta_SIAM_2009.pdf
# 010_Sussman_Smith_Hussaini_Ohta_Zhi-Wei_JCP_2007.pdf
# [35] and [18] from the latter paper. 
max_step  =  99999    # maximum timestep
#max_step  =  350    # maximum timestep (350 * 0.006 = 2.1)
stop_time =  250.0 

# ------------------  INPUTS TO CLASS AMR ---------------------
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  2.5 2.5
geometry.is_periodic = 1 0
ns.show_timings=0

ns.num_materials=2
ns.num_species_var=0
ns.material_type=0 0
ns.pressure_error_cutoff=0.0 0.0 

ns.EILE_flag=-1
ns.continuous_mof=2
ns.MOFITERMAX=15

ns.minimum_relative_error=1.0e-18
# number of Jacobi method cycles elliptic solver initially does.
ns.initial_project_cycles=3
ns.project_solver_type=0
# do 1 MGPCG cycles, then restart the MGPCG iteration
# and do as many cycles as necessary in order to achieve convergence.
ns.initial_cg_cycles=1

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-14
mg.rtol_b = -0.01
#Lp.v = 1

amr.n_cell    = 32 32
amr.max_level = 0 
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4    # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = chk1000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-12  # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-12

ns.visual_option=-2

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
ns.visc_coef      = 0.000083333  # coef of viscosity 1/12000
ns.gravity        = 0    # body force  (gravity in MKS units)
ns.gravityangle = 0.0
ns.tension        = 0.000083333  # interfacial tension force 1/12000
ns.fixed_dt	  = 0.56  # 0.56, 0.28, 0.14
ns.sum_interval   = 100        # timesteps between computing mass 

# material 1 is on the outside, material 2 is inside.
ns.axis_dir=0
ns.probtype=36

ns.vorterr=0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=2
ns.heatviscconst=0.0 0.0
ns.viscconst=1.0 1.0
ns.denconst=1.0 1.0
ns.tempconst=293.0 293.0 # default values for incomp flows

ns.tcenter=-1.0
ns.xblob=1.25
ns.yblob=1.25
ns.zblob=0.0
ns.radblob=0.5
ns.denfact=1.0
ns.velfact=0.0

proj.bogus_value = 5.0e+5
proj.Pcode = 0
#proj.Pcode = 2

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 0 3
ns.hi_bc          = 0 3

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

