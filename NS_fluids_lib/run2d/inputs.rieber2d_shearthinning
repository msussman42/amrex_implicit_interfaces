max_step  =  999999   # maximum timestep
stop_time =  20.0  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0  
geometry.prob_hi   =  2.5 10.0 
geometry.is_periodic = 0 0 0

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-11
mg.rtol_b = -0.01
Lp.v = 1

ns.num_materials=3
ns.num_species_var=0
# 0=no limiter 1=minmod 2=minmod with slope=0 at interface 
# 3=no limiter with slope=0 at interface
ns.continuous_mof=0
ns.EILE_flag=-1
ns.projection_pressure_scale=1.0e+6
#ns.show_mem=1
ns.MOFITERMAX=15
ns.truncate_thickness=2.0 # default ok, now that solids are immersed.

amr.n_cell    = 16 64
amr.max_level =  1  # =1 for production runs.

ns.minimum_relative_error=1.0e-18
ns.initial_cg_cycles=10
ns.initial_project_cycles=3
ns.initial_viscosity_cycles=1
ns.initial_thermal_cycles=1
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
# 0=GSRB 1=ICRB 2=ILU
Lp.smooth_type=2
Lp.bottom_smooth_type=2

ns.shock_timestep=2 2 2

amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 50
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = chk08700
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-10  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-11

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1      # scale back initial timestep
# OH/sqrt(WE)  A=0.0014/sqrt(250)=0.000089    
# OH/sqrt(WE)  B=0.0016/sqrt(437)=0.000077 
# OH/sqrt(WE)  C=0.0014/sqrt(598)=0.000057 

ns.visc_coef      = 1.0     # coef of viscosity
ns.gravity        = -980
# sigma_{SV}-sigma_{SL}=sigma_{LV}cos(theta)
# 45 degrees=>sigma_{SV}=sigma_{LV}  and
# sigma_{SL}/sigma_{LV}=1-2^{-1/2}
# A=1/250=0.004  B=1/437=0.0023  C=1/598=0.00167
# 12 13 14 23 24 34 or 12 13 23 or 12
ns.tension        = 66.8 0.0 66.8   
#ns.fixed_dt	  = 5.0e-5   # hardwire dt
ns.sum_interval   = 10       # timesteps between computing mass 
ns.twall=0.0

ns.axis_dir=0
ns.vorterr=0.0 0.0 0.0 0.0
ns.pressure_error_cutoff=0.0 0.0 0.0 0.0
ns.rgasinlet=0.0
ns.vinletgas=0.0
ns.advbot=0  # velocity of drop
ns.adv_vel=0.0
ns.adv_dir=3      # 1<=adv_dir<=sdim+1
ns.xblob=0.0  # center of falling droplet
ns.yblob=8.0
ns.zblob=8.0
ns.radblob=0.5
# if radblob2<>0 => num_materials=2
# if radblob3<>0 => num_materials=3
#ns.radblob2=0.001  # thickness of thin film A=0.116 B=0.1 C=0.116
# thickness of thin film if thin film is material 3
# if radblob3<>0:
# 1. material 1: drop
# 2. material 2: outside drop and above z=radblob3
# 3. material 3: outside drop and below z=radblob3
#
ns.radblob3=5.0  # thickness of thin film A=0.116 B=0.1 C=0.116
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=540
ns.material_type=0 0 0 0
ns.viscconst=50 1.822E-4 50 0.0
# set Carreau_beta>0 in order to activate shear thinning.
# viscosity=visc_coef * etaL* 
#   (1+(beta*gamma_dot)**alpha)**((n-1)/alpha)
# etaL=viscconst
ns.Carreau_beta=25 0.0 25
ns.Carreau_alpha=3.0 0.0 3.0 
ns.Carreau_n=0.25 0.0 0.25 
ns.Carreau_mu_inf=0.135 0 0.135 
ns.denconst=1.0 0.001205 1.0 0.0
ns.tempconst=293.0 293.0 293.0 293.0
ns.heatviscconst=0.0 0.0 0.0 0.0
ns.v=1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 5
ns.hi_bc          = 5 5

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE
