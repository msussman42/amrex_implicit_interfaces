

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# Corresponds to test in Renardy et al JCP 171, 243-263 (2001)
#
max_step  =  9999999    # maximum timestep
#max_step  =  2    # maximum timestep
stop_time=0.022  # stop_time=100/4562.5=0.022

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  1.0 1.0
geometry.is_periodic=0 0   

ns.wait_time=0.0  
ns.diffuse_solid_temp=1
ns.implicit_surface_tension=0
ns.slipcoeff=0.0  # 1.0E-8 or 1/10

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
Lp.v = 0

ns.pcav=220.2726e-6 # pressure in bars
ns.dencav=0.9 
ns.pchopp=220.0e-6  # pressure in bars
ns.denchopp=0.9
ns.soundchopp=0.1  # velocity scaled by 1000
ns.bubble_pressure=0.0
ns.bubble_density=0.00063

ns.visual_lo = -1 -1
ns.visual_hi = 512 512

ns.mapspread=1.0e+10
amr.n_cell    = 128 128  # coarsest 64x64
amr.max_level = 0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.75   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 500    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
amr.plot_int        = -1
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 256
#amr.restart         = chk0300
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-8

ns.overlap=1.0  # overlap=1.0 TWO (0.0 o.t.)
ns.conserve_vof=4   # truncate all
ns.is_compressible=0
ns.is_phasechange=0
ns.is_twophase=1
ns.cfl            = 1.0      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max=1.01    # scale back initial timestep
ns.visc_coef      = 0.01    
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = 0.0
ns.gravityangle = 0.0
ns.tension        = 73.0 
#ns.fixed_dt	  = 1.6e-5 # viscous solver guaranteed to converge for this dt
ns.sum_interval   = 1        # timesteps between computing mass 

# probtype=55,axis_dir=7  droplet on substrate, not bubble
ns.axis_dir=7  # PROB_2D has initial temp. gradient+possibly AMR at base
ns.vorterr=1.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1  
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=2
ns.viscunburn=1.0
ns.viscburn=0.0182 
ns.viscvapor=0.0182 
ns.tcenter=1.0e-10  # adapt when radius<tcenter*dx
ns.solidradius=1.0
ns.denwater=1.0
ns.rho0tait=1.0
ns.gammawater=7.15
ns.atait=1.0
ns.btait=3.31e+03
ns.denair=0.001205
ns.denvapor=0.001205
ns.contactangle=1.0471976 # 38d=0.663 90d=1.570796 70.53d=1.23 109.47d=1.9106
# 60d=1.0471976
ns.xblob=0.0
ns.yblob=-0.4
ns.zblob=0.0
ns.xblob9=0.0  
ns.yblob9=0.0
ns.radblob=0.8  # bubble radius so that initial area is pi/8
ns.radblob2=0.8  # must be positive   
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55
ns.walltemp=0.0
ns.twater=0.0
ns.tsatdef=0.0
ns.tvapor=0.0
ns.cpwater=1.0
ns.cvwater=1.0
ns.kwater=0.0
ns.gas_constant=4.62   # scaled by 10^6 (cp-cv)  4.62
ns.hydrostatic_pressure=1.0  # in bars 1.013=1atm  1.0
ns.cpvapor=1.0
ns.cvvapor=1.0
ns.kvapor=0.0
ns.latentheat=86.3  # del T=6.2
ns.dRhodT=-0.00472  # del T=6.2
ns.gammavapor=1.4

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 5  # 4 5 TWO (0 5 o.t.)
ns.hi_bc          = 2 2  # 3 5 TWO (0 5 o.t.)
ns.projection_order=1

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
#contour.level = 0
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => overlay liquid vel.  4 => overlay vapor velocity
# win_siz     = number of pixels in max window direction
#
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.verbose = 1
#contour.arrow_factor=4.0
#contour.maxpoints=32
contour.plot = triple triple 1  10    -1         2      400   -1   -1   0

