max_step  =  99999    # maximum timestep
#max_step  =  1    # maximum timestep
# Jacob number=rho_liq * cp_liquid * Delta T/(rho_vap * L)
stop_time = 0.45548  # Jacob number=3
#stop_time = 0.17945  # Jacob number=5
#stop_time = 0.04823338  # Jacob number=10

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  0.006 0.006  # meters
#0=weight by rho c_v F   1=weight by H(F-1/2)
ns.EILE_flag=-1 # -1 Weymouth and Yue  1=alternate EI LE
ns.continuous_mof=2
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=3
ns.initial_cg_cycles=3
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0e+4
ns.num_materials=2  # 1: liquid (outer)  2: ice (inner)
ns.num_species_var=0
ns.post_init_pressure_solve=1 
ns.MOFITERMAX=15

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-13
mg.rtol_b = -0.01
Lp.v = 0

amr.plotfile_on_restart=1
#ns.visual_revolve=32

amr.n_cell    = 64 64
amr.max_level = 1
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 8 8 8 8 8   # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 8       # block factor in grid generation
amr.check_int       = 500      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 50
#ns.visual_phase_change_plot_int=1
amr.slice_int=50
ns.slice_dir=0
ns.xslice=0.0 0.0 0.0
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = chk0160
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-11

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.01
ns.visc_coef      = 1.0  # 1.0
mac.visc_abs_tol   = 1.0e-10
ns.gravity        = 0.0     # Bo/We=0.025/5E-5=500.0
ns.tension        = 0.000001  # 12 - liquid/gas (0.060)
ns.stiffCP = 4216.0 2034.0  # 4.2e+7 cgs
ns.latent_heat=2.257e+6 0.0 # 2257E+7 cgs
ns.freezing_model=0 0
ns.distribute_target=0 0
ns.saturation_temp = 373.0 0.0 # 12,21   
# E=(1/2) u^2 + e(rho,T)
#ns.fixed_dt	  = 0.01     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

ns.axis_dir=3   #  0 - x direction  1- y direction 2 - z direction 3=circular
ns.vorterr=0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0 # no prescribed boiling rate
ns.twall=0.1  # not used
ns.advbot=0.0
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=1 # adv_dir=1 x direction  adv_dir=2 y direction   
ns.pressure_error_cutoff=0.0 0.0
# 0=temperature diffusion implicit, velocity diffusion "implicit"
ns.material_type=0 0
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)
# water: k=0.58 W/(M K)
ns.heatviscconst=0.6 0.026
# vapor viscosity is 1.78e-4 cgs but until we institute 
# the proper jump conditions
# we have to make it 0.
ns.viscconst=2.82e-4 0.0
ns.denconst=958.0 0.59
ns.FSI_flag=0 0
ns.tempconst=373.9891 373.0  # Jacob number=3
#ns.tempconst=374.6485 373.0  # Jacob number=5
#ns.tempconst=376.2970 373.0  # Jacob number=10
ns.xblob=0.0
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=0.001
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=801 

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
# 0=dirichlet at inflow
# boundary conditions (axis_dir=0)
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
#ns.prescribe_temperature_outflow=0 # =0 for stefan problem
#ns.prescribe_temperature_outflow=1 # =1 for sucking problem
ns.prescribe_temperature_outflow=1
ns.lo_bc          = 3 3
ns.hi_bc          = 2 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

