# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  999999    # maximum timestep
#max_step  =  2        # maximum timestep
stop_time =  1.1e+9    # maximum problem time  (divide by U to get real time)
thickness = 0.1

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys  = 1        # 0 => cart, 1 => RZ
geometry.prob_lo    = 0.0 0.0
geometry.prob_hi    = 0.3 0.45

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-8
mg.rtol_b = -0.01
Lp.v = 0
ns.be_cn_theta=1.0
ns.be_cn_theta_crossterms=0.0
ns.rk_theta=1.0

amr.n_cell          = 64 96  # MS
amr.max_level       = 2       # MS 3
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2    # number of buffer cells in error est MS
amr.grid_eff        = 0.7     # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation MS
amr.check_int       = 50      # number of timesteps between checkpoints MS
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 0       # MS
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 2000
#amr.restart         = chk0960
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff       = 1.0e-10  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-6   # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-6

ns.pcav=0.0
ns.dencav=0.0
ns.pchopp=0.0
ns.denchopp=0.0
ns.soundchopp=100.0
ns.bubble_pressure=1.0
ns.bubble_density=0.001                                                                                
ns.hydrostatic_pressure=1.013
ns.visual_lo = 0 0
ns.visual_hi = 2000 2000

ns.mac_mg_precond=2
ns.is_twophase=0
ns.is_compressible=0
ns.shock_capture=0
ns.shock_eta=1.0
ns.shock_timestep=0
ns.limitfactor=1.0e+10
ns.clipfactor=1.0e+10
ns.enoextrap=1
# 0 cell 1 edge 2 conserve
ns.edgeextraptype=0
ns.redist_on_init=0
ns.tvdrk=0
ns.overlap=1.0  # MS

ns.cfl             = 0.2      # cfl number for hyperbolic system
ns.init_shrink     = 1.0e-5   # scale back initial timestep
ns.change_max      = 1.1      # scale back initial timestep

#** [dyne s/cm^2] ** - CGS units!
#ns.visc_coef       = 1.766e-6 # INDIUM coef of viscosity, real 1.7e-2@460K, divide by U
ns.visc_coef       = 1.944e-6  # GALLIUM coef of viscosity, real 1.91e-2@321K, divide by U
mac.visc_abs_tol    = 1.0e-7
ns.init_iter       = 2        # number of init iters to def pressure
ns.gravity         = 0.0      # body force  (gravity in MKS units)
ns.gravityangle    = 0.0

#** [dyne/cm] ** - CGS units!
#ns.tension         = 5.52e-5  # INDIUM surface tension, real 5520, divide by U^2   
ns.tension         = 7.20e-5  # GALLIUM surface tension, real 7200, divide by U^2 
#ns.fixed_dt	   = 0.2     # hardwire dt
ns.sum_interval    = 1        # timesteps between computing mass 
ns.usekluge        = 0
ns.RUNGAKUTTA      = 0
ns.centerpressure  = 1
ns.visctimestep    = 1

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
#***********************
ns.vinletgas=1.0e+4           # scale velocity by 10^4  (eforce scaled by 10^18)
#***********************
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=1
ns.viscunburn=1.0
ns.viscburn=0.018
ns.viscvapor=0.018

ns.tcenter=2.0
ns.solidradius=1.0e-10
ns.denspread=1.0  # MS
ns.denwater=7.0               # indium is 7x heavier than water
ns.denair=0.001
ns.denvapor=0.001
ns.xblob=0.5
ns.xblob2=1.5
ns.yblob=0.5
ns.zblob=1.5
ns.radblob=0.25
ns.radblob2=0.05
ns.radblob3=22.9  # Suvorov's taylor cone problem
ns.zblob2=0.0            # needle height. 0.7 for normal, 0 for test gallium
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=39

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
#geometry.is_periodic = 1 0
ns.lo_bc          = 3 1   # left   bottom
ns.hi_bc          = 1 2   # right  top

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
# contour.level = 1
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => same as 2 except show Umac and not Ucell
# win_siz     = number of pixels in max window direction
#
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.arrow_factor=3.0
contour.verbose = 1
contour.plot = triple triple 1   1      -1     2      600    -1   -1  0
contour.plot = triple triple 2   50     -1     2      600    -1   -1  0
