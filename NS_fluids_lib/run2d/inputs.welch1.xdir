max_step  =  99999    # maximum timestep
#max_step  =  2    # maximum timestep
# stop_time=119.127 for stefan problem
# stop_time=747.816 for stefan problem FREEZING
# stop_time=1.0  for sucking problem
# stop_time=100.0  for sucking problem FREEZING
stop_time = 100.0

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  2.0 0.5  # centimeters 
#geometry.prob_hi   =  0.5 0.125  # centimeters (testing)
ns.EILE_flag=-1 # -1 Weymouth and Yue  1=alternate EI LE
ns.continuous_mof=2
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=10
ns.initial_cg_cycles=10
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0
ns.num_materials=2
ns.num_species_var=0
ns.post_init_pressure_solve=1 
ns.MOFITERMAX=15

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0

ns.visual_option=-2  # -2,-3 zonal tecplot, -1 plot files

amr.n_cell    = 128 32
amr.max_level =  2  # 1 for stefan, 2 for sucking, 0 for testing
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2   # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = chk0160
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.25      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.1 
ns.visc_coef      = 1.0     # coef of viscosity
mac.visc_abs_tol   = 1.0e-10
mac.thermal_abs_tol = 1.0e-6
ns.gravity        = 0.0     
ns.use_lsa=0
# even ice/water interface should have surface tension in order
# to prescribe contact angle .
ns.tension        = 0.0  # 12 - liquid/vapor
#ns.latent_heat = 2.26e+10 0.0 # 12,21 liquid-> vapor, vapor -> liquid
#ns.latent_heat = -3.34e+9 0.0 # 12,21 liquid-> ice, ice -> liquid FREEZING
ns.latent_heat = -3.34e+9 0.0 # 12,21 liquid-> ice, ice -> liquid FREEZING
ns.freezing_model=0 0
ns.distribute_target=0 0
#ns.saturation_temp = 373.0 0.0 # 12,21   
#ns.saturation_temp = 273.0 0.0 # 12,21   FREEZING
ns.saturation_temp = 273.0 0.0 # 12,21   FREEZING
# E=(1/2) u^2 + e(rho,T)
ns.temperature_primitive_variable=1 1 1 1
#ns.fixed_dt	  = 0.01     # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass 

ns.axis_dir=0   #  0 - x direction  1- y direction 2 - z direction
ns.vorterr=0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=1 # adv_dir=1 x direction  adv_dir=2 y direction   
ns.pressure_error_cutoff=0.0 0.0
ns.material_type=0 0
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)
# water: k=0.58 W/(M K)
# cp hardwired to be 4.1855E+7 (all incompressible materials)
#ns.heatviscconst=58000.0 2400.0 0.0 0.0 
#ns.heatviscconst=58000.0 218000.0 0.0 0.0  FREEZING
#ns.heatviscconst=0.0 2400.0 0.0 0.0  # stefan problem (liquid T=constant)
#ns.heatviscconst=0.0 218000.0 0.0 0.0  # stefan (liquid T=constant) FREEZING
#ns.heatviscconst=58000.0 0.0 0.0 0.0 # sucking problem (vapor T=constant)
#ns.heatviscconst=58000.0 0.0 0.0 0.0 # sucking (ice T=constant) FREEZING
ns.heatviscconst=58000.0 0.0 0.0 0.0 # sucking (ice T=constant) FREEZING
# ice viscosity is larger than liquid viscosity
ns.viscconst=0.0 0.0
#ns.denconst=1.0 0.000623  # psat=101.0 => density ratio = 1605.2
#ns.denconst=1.0 0.934  #  FREEZING
ns.denconst=1.0 0.934  #  FREEZING
# FREEZING
ns.FSI_flag=0 3
#ns.tempconst=373.0 398.0 # stefan problem
#ns.tempconst=273.0 263.0 # stefan problem FREEZING
#ns.tempconst=378.0 373.0  # sucking problem
#ns.tempconst=253.0 273.0  # sucking problem FREEZING
ns.tempconst=253.0 273.0  # sucking problem FREEZING
#ns.xblob=0.0078125  # stefan: initial location of interface (axis_dir=0)
#ns.xblob=0.5  # sucking: initial location of interface (axis_dir=0)
ns.xblob=0.5  # sucking: initial location of interface (axis_dir=0)
#ns.xblob=0.25 # (testing)
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=0.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=801 

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
# boundary conditions (axis_dir=0)
#ns.prescribe_temperature_outflow=0 # =0 for stefan problem
#ns.prescribe_temperature_outflow=1 # =1 for sucking problem
ns.prescribe_temperature_outflow=1 # =1 for sucking problem
ns.lo_bc          = 1 3
ns.hi_bc          = 2 3

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

