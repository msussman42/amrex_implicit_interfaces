# This is an example of inputs file that would go with a user defined
# problem defined in PROB.F90.
#
# This is an example of nucleate boiling in which there is a secondary
# rigid material in the domain that is heated to some user prescribed
# temperature.   
#
# The microlayer model used in this example corresponds to MODEL 5.
#
# The steps for creating ones' own new problem setup:
# 1. pick a probtype that is not used (in this example: probtype.eq.311)
# 2. create a fortran module that has routines for initial level set functions,
#    temperature, velocity, ..., boundary conditions, source terms
#    (in this example: sample_user_defined.F90)
# 3. add the module file name to iamrlib/Make.package (put it 
#    immediately following sample_user_defined.F90)
# 4. modify PROB.F90 to call the new user defined routines when 
#    probtype.eq.<selected probtype>  (search for keyword USERDEF in PROB.F90
#    for examples)
#
# in future: it will be possible to take a CAD file from AUTODESK (for example)
# and have it automatically converted into a levelset function.
# Tomas Solano Munoz <ts11h@my.fsu.edu>
max_step  =  99999999    # maximum timestep
stop_time = 1.0

geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
# eta=3+sin(2 pi t)+cos(pi x/3)
geometry.prob_hi   = 12.0 12.0   # MKS
ns.EILE_flag=-1
# OCT 2018  continuous_mof=2 CMOF everywhere 
#           continuous_mof=4 CLSVOF in 2 material cells, CMOF in >2 mat cells
ns.continuous_mof=2 
ns.MOFITERMAX=15
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=3
ns.initial_cg_cycles=3
# =1 if all domain walls are "no penetration"
# =0 if some walls are outflow.
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0
ns.num_materials=3 # 1: liquid 2: vapor 3: solid  4: heated cylinder
ns.num_species_var=0
ns.configuration_tensor_var=0
ns.post_init_pressure_solve=1
ns.output_drop_distribution=1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0
godunov.printMinMax=0

amr.plotfile_on_restart=1
#ns.visual_revolve=32
ns.visual_tessellate_vfrac=1

amr.n_cell    = 48 48
amr.max_level =  2
# NOV 2018 (3 or 4 materials)
# liquid, vapor, gas, substrate 4 mat
# liquid, vapor, substrate 3 mat
# 0=never adapt   1=if radius< 1 * dx then adapt
# -1=always adapt
# An interface changing phase will always be adapted
# to the finest possible level.
# Triple junctions will always be adapted to the finest possible level.

ns.ns_tiling=false
fabarray.mfiter_tile_size=16 16
#amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.n_error_buf     = 2 2 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4 4 4 4 4 4 4    # block factor in grid generation
amr.space_blocking_factor = 1 1 1 1 1 1
amr.time_blocking_factor=1
ns.num_SDC_outer_sweeps=1
ns.enable_spectral=0
amr.regrid_int      = 1       # how often to regrid
amr.check_int       = 500    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
amr.plot_int        = 10  # 500 for production runs
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = chk55200
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max     = 1.1    # scale back initial timestep
# viscous force term: rho u_t = visc_coef * div ( 2 mu D)
# mu corresponds to "viscconst"
ns.visc_coef      = 1.0  
mac.visc_abs_tol   = 1.0e-10
ns.gravity_dir = 2  # 1,2, or 3  (2 in 2D is default)
ns.gravity        = -9.8 #  dimensional  MKS
ns.DrhoDT = 0.0 0.0 0.0 0.0   # units: 1/degree K
ns.override_density=0 0 0 0
# 12,13,23
ns.tension=0.0 0.0 0.0
# Joule/(kg Kelvin)
ns.stiffCP=2000 4200 4200 

# 12 13 14 23 24 34 21 31 41 32 42 43 
# (12 liquid->vapor (boiling) 21 vapor->liquid condensate)
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]
# Joule/kg
ns.latent_heat=0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
ns.saturation_temp=0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
#ns.fixed_dt	  = 0.1     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 
ns.viscosity_statemodel=0 0 0 0

ns.axis_dir=0 #axis_dir=1 is ../run3d/inputs.viscoHelix
# see subroutine outside_temperature in PROB.F90
ns.vorterr=0.0 0.0 0.0 0.0
ns.rgasinlet=1.57 # not used
ns.vinletgas=0.0
ns.twall=0.0  # not used
ns.advbot=0.0 # initial falling (downward) speed of liquid drop (always 0)
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=2 # adv_dir=1 x direction  adv_dir=2 y direction
# NOV 2018 (3 or 4 materials)
ns.pressure_error_cutoff=0.0 0.0 0.0 0.0
ns.material_type=0 0 999
# thermal conductivity: Watts/(meter Kelvin)
ns.heatviscconst=0.0248 0.680 0.680
# 0.0 means do not use.
ns.heatviscconst_interface=0.0 0.0 0.0 0.0 0.0 0.0
# dynamic viscosity Pa * s = N s / m^2
ns.viscconst=1.2E-05 2.79E-04 2.79E-04 
# density: kg/m^3
ns.denconst=1 1000 1000 
ns.FSI_flag=0 0 1 
# 0=diffuse in solid, 1=dirichlet, 2=neumann
ns.solidheat_flag=0  # diffuse in solid (substrate)

ns.tempconst=293.0 293.0 293.0 
ns.initial_temperature=293.0 293.0 293.0 
ns.initial_temperature_diffuse_duration=0.0
ns.tempcutoff=253.0 253.0 253.0 
ns.tempcutoffmax=393.0 393.0 393.0 
ns.xblob=0.0  
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=0.0
ns.radblob10=0.0
# NOV 2018 use outflow_velocity_buffer_size
# (1,1),(2,1),(3,1),(1,2),(2,2),(3,2)   3D
# (1,1),(2,1),(1,2),(2,2)   2D
ns.outflow_velocity_buffer_size=0.0 0.0 0.0 0.0


ns.denfact=1.0
ns.velfact=0.0
ns.probtype=915 #wavy_channel.F90

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=3

#ns.lo_bc          = 3 3  # this option if heat source
ns.lo_bc          = 3 5
ns.hi_bc          = 3 2
ns.temperature_lo_bc          = 3 2
ns.temperature_hi_bc          = 3 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

