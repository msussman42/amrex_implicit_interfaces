# BEFORE:
# Figure 2:
# "Direct Numerical Simulations of Flows with Phase Change"
# Tryggvason and Lu, Procedia IUTAM volume 15, 2015, 2-13
#
# NOW: Earth Gravity, Water boiling, from Dhir 2001.
#
# Options for microscale model:
# 1. the null model:
#   ns.microlayer_size=0.0 ... 0.0
#   ns.yblob3>0.0  (initial thermal layer)
#   ns.solidheat_flag=1 (dirichlet temperature BC at fluid/solid interface)
# 2. triple point model:
#   ns.macrolayer_size>ns.microlayer_size>0.0, ns.microlayer_substrate and
#   ns.microlayer_angle set accordingly.
# 3. the smoothed temperature model:
#   ns.microlayer_size=0.0 ... 0.0
#   ns.yblob3=1.0e-10 (initial thermal layer size very close to zero)
#   ns.solidheat_flag=0 (diffuse in solid)
#   ns.initial_temperature=saturation temperature in the solid
#   ns.initial_temperature_diffuse_duration>0.0 (artificial time to
#    solve just the heat equation at t=0.0)
#   Mehdi's scaling:
#   LENGTH=2.503E-3 meters
#   TIME=1.598E-2 seconds
max_step  =  99999999    # maximum timestep
# stop_time=3.0 #dimensionless
stop_time = 4.794e-2 #dimensional (seconds)

geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
# geometry.prob_hi   =  1.5978E+00 2.3967E+00 # dimensionless
geometry.prob_hi   =  4.0e-3 6.0e-3   # dimensional (meters)
ns.EILE_flag=-1
ns.continuous_mof=2
ns.MOFITERMAX=15
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=3
ns.initial_cg_cycles=3
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0e+6  # dimensional?
#ns.projection_pressure_scale=1.0  # dimensionless?
ns.num_materials=3 # 1: liquid 2: vapor 3: solid
ns.num_species_var=0
ns.post_init_pressure_solve=1
ns.output_drop_distribution=1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0

amr.plotfile_on_restart=1
#ns.visual_revolve=32
ns.visual_tessellate_vfrac=1

amr.n_cell    = 64 96
amr.max_level =  1
ns.ns_tiling=false
fabarray.mfiter_tile_size=16 16
#amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.n_error_buf     = 2 2 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4 4 4 4 4 4 4    # block factor in grid generation
amr.space_blocking_factor = 1 1 1 1 1 1
amr.time_blocking_factor=1
ns.num_SDC_outer_sweeps=1
ns.enable_spectral=0
ns.diffusion_enable_spectral=0
amr.regrid_int      = 1       # how often to regrid
amr.check_int       = 400    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
amr.plot_int        = 100    # 100
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = ch64k1000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max     = 1.1    # scale back initial timestep
# viscous force term: rho u_t = visc_coef * div ( 2 mu D)
# mu corresponds to "viscconst"
ns.visc_coef      = 1.0  
mac.visc_abs_tol   = 1.0e-10
#ns.gravity        = -1.0 #  dimensionless
ns.gravity        = -9.8 #  dimensional  MKS
# rhohydro+fort_denconst(im)*DrhoDT(im)*(T-fort_tempconst(im))
# Temperature not scaled, so this value is the same regardless of
# dimensionless or dimensional
ns.DrhoDT = -0.0007 0.0 0.0   # units: 1/degree K
# override_density=1 => rho=rho(T,z)
# "default_hydrostatic_pressure_density" called if override_density=1.
# gravity force is grad (-|g| denconst(1) y)/denconst(1) = -|g| 
# rho_liq=denconst(1)+denconst(1)*DrhoDT(1)*(T-tempconst(1))
ns.override_density=1 0 0
# sigma_{SV}-sigma_{SL}=sigma_{LV}cos(theta)
# sigma_{SL}=sigma_{LV}
# sigma_{SV}=(1+cos(theta)) sigma_{LV}
# theta=80 sigma_{SV}/sigma_{LV}=1.17  
# theta=140 sigma_{SV}/sigma{LV}=0.23
# theta=45 sigma_{SV}/sigma_{LV}=1+1/sqrt{2}
# 12 13 23  (LV SL SV)
# N/m
#ns.tension=9.9937E-01 9.9937E-01 1.5868E+00  # 54 degrees, dimensionless 
ns.tension=58.8e-3 58.8e-3 93.362e-3  # 54 degrees, dimensional, MKS
# Joule/(kg Kelvin)
# ns.stiffCP= 1.7189E+05 8.2704E+04 1.7189E+05 # dimensionless
ns.stiffCP=4217.0 2029.0 4217.0 # dimensional, MKS
# 12 13 23 21 31 32  (12 liquid->vapor (boiling) 21 vapor->liquid condensate)
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]
# Joule/kg
# ns.latent_heat=9.1998E+07 0.0 0.0 0.0 0.0 0.0  # dimensionless
ns.latent_heat=2257e+3 0.0 0.0 0.0 0.0 0.0  # dimensional, MKS
# if latent_heat<>0,
# if nucleation_period==0.0, only nucleate one bubble, 
# if nucleation_period>0.0, periodically nucleate bubbles.
ns.nucleation_period=0.0
ns.saturation_temp=373.0 0.0 0.0 0.0 0.0 0.0
#ns.fixed_dt	  = 0.1     # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass 

# 6 instead of 5 signals nucleate boiling
ns.axis_dir=6
ns.xblob3=0.0  # unused
# see subroutine outside_temperature in PROB.F90
ns.yblob3=1.0e-10  # initial thermal layer (meters)
# see subroutine get_internal_heat_source in PROB.F90
# see subroutine microcell_heat_model in PROB.F90
# if zblob3>0, heatcoeff=heatcoeff*dx/zblob3 (where LS_SOLID changes sign)
# if zblob3<0, then heat source in solid cells that adjoin fluid.
# if zblob3<0, then solidheat_flag should be 0. (diffuse in solid)
# if zblob3=0, then Dirichlet BC at z=zlo (no internal heat flux or 
#  other internal BC)
#  solidheat_flag=1 (dirichlet in solid),zblob3>0:
#  microlayer flux is (T-TSOLID)/zblob3 
#
# heat flux in the solid cells that adjoin a fluid cell:
# page 30, Sato Niceno (2015): "heater power maintained at 30kW/m^2"
# rho cp DT/dt=-div q + Q
# Q=(area) * |zblob3|/(volume)=(m^2)(W/m^2)/(m^3)=W/m^3
# for Tryggvason problem: T=383 degrees at the wall.
ns.zblob3=0.0
ns.vorterr=0.0 0.0 0.0
ns.rgasinlet=1.57 # not used
ns.vinletgas=0.0
ns.twall=0.0  # not used
ns.advbot=0.0 # initial falling (downward) speed of liquid drop (always 0)
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=2 # adv_dir=1 x direction  adv_dir=2 y direction
ns.pressure_error_cutoff=0.0 0.0 0.0 
ns.material_type=0 0 999
# thermal conductivity: Watts/(meter Kelvin)
# ns.heatviscconst=7.3787E+01 2.6911E+00 7.3787E+01 # dimensionless
ns.heatviscconst=0.680 0.0248 0.680 # dimensional MKS
# liquid-vapor, liquid-solid, vapor-solid
# 0.0 means do not use.
ns.heatviscconst_interface=0.0 0.0 0.0
# dynamic viscosity Pa * s = N s / m^2
# ns.viscconst=7.4273E-04 3.1999E-05 7.4273E-04 # dimensionless
ns.viscconst=279E-6 12.02e-6 279E-6 # dimensional MKS
# density: kg/m^3
# ns.denconst=1.0000E+00 6.2171E-04 1.0438E+00 # dimensionless
ns.denconst=958 0.5956 1000.0 # dimensional MKS
ns.FSI_flag=0 0 1
# 0=diffuse in solid, 1=dirichlet, 2=neumann
# if solidheat_flag=2, then "tempfluxsolid" is called.
ns.solidheat_flag=1

# February 21, 2018: parameters for new microlayer model:
# material id for the substrate material that neighbors the thin film
# microlayer liquid:
ns.microlayer_substrate=3 0 0

# microlayer contact angle (radians): 54 degrees? 50 degress?
# microscopic contact angle between liquid and substrate    
ns.microlayer_angle=0.8727 0.0 0.0 # 50 degrees

# minimum thickness of thin liquid film (MKS)
# make this zero in order to disable the microlayer model.
# diameter of water molecule is about 2.9e-10
# 2.9e-10/l_0
# ns.microlayer_size=1.0e-9  0.0 0.0                      # dimensional
#ns.microlayer_size=  1.157e-7 0.0 0.0                    # dimensionless
#size of thin liquid film (size of a few liquid molecules)
# ns.microlayer_size=3.9946E-07  0.0 0.0 # dimensionless
ns.microlayer_size=  1.0e-9 0.0 0.0   # dimensional MKS

# resolvable scale size (2 * dx for a representative dx):
# dx_coarse=4.0e-3/128=3.125e-5
ns.macrolayer_size=6.25e-5 0.0 0.0 #dimensional

ns.tempconst=373.0 373.0 380.0
ns.tempcutoff=373.0 373.0 373.0 
ns.tempcutoffmax=380.0 380.0 380.0 
#(xblob,yblob)=center of vapor bubble
ns.xblob=0.0  
# yblob=yblob2+R * cos( contact angle )=12.5e-5+1.502e-4 * cos(54)=2.1328e-4
ns.yblob=2.132e-4  # dimensional  
ns.zblob=0.0
# ns.radblob=0.06  # dimensionless
ns.radblob=1.502e-4  # dimensional meters

ns.n_sites=1
ns.pos_sites=0.0 2.132e-4 0.0 1.502e-4

# x,y center of surface of HOT plate (xblob2,yblob2) (inclined)
ns.xblob2=0.0 
ns.yblob2=12.5e-5 # 4 * dxcoarse=4 * 3.125e-5 = 12.5e-5
ns.zblob2=0.0
ns.radblob2=0.0 # zero degrees incline (radians)
ns.radblob3=0.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=3

#ns.lo_bc          = 3 3  # this option if heat source
ns.lo_bc          = 3 5
ns.hi_bc          = 3 2
ns.temperature_lo_bc          = 3 2
ns.temperature_hi_bc          = 3 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

