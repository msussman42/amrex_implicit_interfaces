# Hnat and Buckmaster Phys of fluid 19(2) 182-194 1976
# 1 Liter=1000 cm^3  1 mLiter=1cm^3
# Bubble A  0.939 cm^3=0.939 ml
# D=12.15 mm  radius=6.075 mm
# density=0.8755 g/ml
# viscosity = 1.18 P cgs units
# surface tension=32.2 dyn/cm
# rise velocity=21.5 cm/s
# Re=0.8755 1.215 21.5/1.18=19.4
# Fr=U^2/(L g)=(21.5^2)/(1.215 980)=0.388
# We=rho L U^2/sigma=0.8755 1.215 21.5^2/32.2=15.27

# D=12.15
# experiment 19.4
# Re=rho_L L U/eta_L=19.4 = 1/0.0516
# C=4 rho g L^2/(3 eta_L U)=4.95
# We=rho_L L U^2/sigma=1/0.06549=15.27
# Fr=U^2/(L g) =1/2.576=0.388
# L=12.15 ?  g=980 cm/s^2
#
# if nondimensionalize by radius:
# Fr=0.78
# Re=9.7
# mu_L/mu_G=6667
# rho_L/rho_G=714
# We=7.6
# R=12.15  5x20 domain used in Sussman and Puckett.

max_step  = 99999     # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  20.0  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  8.0 24.0  # 8 8 FRAME 8 24 NO FRAME
geometry.is_periodic=0 0

ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.minimum_relative_error=1.0e-18
ns.initial_project_cycles=10
ns.initial_cg_cycles=10 

ns.num_materials=2
ns.num_species_var=0

ns.post_init_pressure_solve=0 # 1=INCOMP 0=COMPRESSIBLE


amr.plotfile_on_restart=1

# multigrid class
#mg.verbose = 1
#cg.verbose = 1
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 200
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
#Lp.v = 1

# 128 128 FRAME
# 128 384 NO FRAME   (3*128=384)
amr.n_cell    = 128 384
amr.max_level = 2
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 8 8 8 8   # number of buffer cells in error est
amr.grid_eff        = 0.60   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 8       # block factor in grid generation
amr.check_int       = 200     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 100    # CHANGE TO 100
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 64
#amr.restart         = chk80000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 0.000005  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10


ns.cfl            = 0.5     # 0.5 INCOMP  0.5 COMPRESSIBLE
ns.init_shrink    = 0.1      # 0.1 INCOMP  .1 COMPRESSIBLE
ns.change_max=1.01      # scale back initial timestep
ns.visc_coef      = 0.05160    # coef of viscosity
mac.visc_abs_tol   = 1.0e-8
ns.gravity        = -2.576   # body force  (gravity in MKS units)
ns.gravityangle = 0.0
ns.tension        = 0.06549    # interfacial tension force
#ns.fixed_dt	  = 0.0025   # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

ns.axis_dir=0
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
# -1.0 FRAME
# 0.0 NO FRAME
ns.adv_vel=0.0 
ns.adv_dir=2
ns.viscconst=1.0 1.525E-4
ns.denconst=1.0 1.439E-3
ns.heatviscconst=0.0 0.0 0.0
ns.tempconst=293.0 293.0 293.0
# shock_timestep=2 2 option => never consider sound speed.
ns.shock_timestep=2 2  # 0 0 INCOMP; 2 2 if COMPRESSIBLE (shrink=0.1)
ns.material_type=13 14 0   # 0 0 if INCOMP;  13 14 if COMPRESSIBLE
ns.pressure_error_cutoff=0.0 0.0 0.0
ns.tcenter=-1.0
ns.xblob=0.0
# 4.2 FRAME
# 1.0 NO FRAME
ns.yblob=1.0
ns.zblob=0.0
ns.radblob=0.5
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=36

proj.bogus_value = 5.0e+5
proj.Pcode = 0
#proj.Pcode = 2

#ns.mem_debug = 1
ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 3 2  # 
ns.hi_bc          = 2 2  # 2 1 FRAME, 2 2 NO FRAME

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

