

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  99999    # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  6.0  # maximum problem time
thickness = 0.1

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   = -0.04 -0.04
geometry.prob_hi   = 0.04 0.04
geometry.is_periodic = 0 0

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.bot_atol = 1.0e-10
mg.rtol_b = -0.01
Lp.v = 0
ns.be_cn_theta=1.0
ns.rk_theta=1.0

ns.pcav=0.0
ns.dencav=0.0000001
ns.pchopp=0.0
ns.denchopp=0.00000001
ns.soundchopp=1500.0
ns.bubble_pressure=0.0
ns.bubble_density=5.0  # density for bubble if "is_phasechange"

ns.hydrostatic_pressure=1.0
# bjwl*((rho/rho0)^gamma - 1) + ajwl
ns.bjwl=1.0
ns.ajwl=1.0
ns.rho0gas=5.0

ns.visual_lo = 0 0
ns.visual_hi = 512 512
ns.visual_side_max = 512

amr.n_cell    = 32 32
amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 2 2 2 2 2   # number of buffer cells in error est
amr.grid_eff        = 0.75   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 500      # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 0 
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 256
#amr.restart         = chk2000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_tol        = 1.0e-8   # tolerence for mac projections
mac.mac_abs_tol    = 1.0e-8

ns.edgeextraptype=0
ns.overlap=1.0
ns.conserve_vof=0
ns.is_compressible=0
ns.icompvapor=0
ns.is_phasechange=1
ns.is_twophase=1
ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max     = 1.1    # scale back initial timestep
ns.visc_coef      = 1.0     # coef of viscosity 1.0
mac.visc_abs_tol   = 1.0e-8
ns.visc_tol = -1.0
ns.gravity        = 0.0    # -9.81
ns.gravityangle = 0.0
ns.tension        = 0.005   # was 0.1
#ns.fixed_dt	  = 0.01     # hardwire dt
ns.sum_interval   = 1        # timesteps between computing mass 

ns.axis_dir=6
ns.vorterr=1.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=0.0
ns.adv_vel=0.0
ns.adv_dir=2
ns.viscunburn=0.1
ns.viscburn=0.005
ns.viscvapor=0.005
ns.tcenter=-1.0
ns.denspread=1.0
ns.denwater=200.0
ns.denair=5.0
ns.denvapor=5.0
ns.mapspread=1.0E+10
ns.xblob9=0.0
ns.yblob9=0.0
ns.xblob=0.0
ns.yblob=0.0
ns.zblob=0.0
ns.radblob=0.02  # 0.02 should end up about 0.01625 at t=6?
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55
ns.walltemp=10.0
ns.tsatdef=0.0  
ns.twater=0.0
ns.tvapor=10.0  
ns.cpwater=400.0
ns.cvwater=400.0
ns.kwater=40.0
ns.cpvapor=200.0
ns.cvvapor=200.0
ns.kvapor=1.0  # was 1.0
ns.latentheat=1000.0  # 10^3 according to Gibou's paper
ns.gammavapor=1.4

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 2 2
ns.hi_bc          = 2 2
ns.livepressureoverride=0

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

# --------------------------------------------------------------------
# -----       CONTOUR PLOTTING ONLY AVAILABLE IN 2-D           -------
# --------------------------------------------------------------------
# uncomment the next line to set a default level for contour plotting
#contour.level = 0
#
# These variables control interactive contour plotting on UNIX systems
# file_name   = root name of postscript file (will be appended with ".ps")
# var_name    = name of thermodynamic variable to plot
# device      = 1  => XWINDOW, 2 = POSTSCRIPT, 3 = both
# freq        = intervals between plots (-1 = off)
# n_cont      = number of contour lines per plot
# sho_grd     = 0 => don't show grid placement, 1 => show grid placement
#               2 => show grid placement and overlay velocity vector plot
#               3 => same as 2 except show Up and not Ud
# win_siz     = number of pixels in max window direction
#
#file_name  var_name   device  freq  n_cont  sho_grd win_siz sval sdir sstr
contour.verbose = 1
contour.plot = triple triple 1  10    -1         2      400   -1   -1   0
#contour.plot = sound sound  1 1 10      2      400   1.0e-10 0 r
#contour.plot = vsound vsound  1 1 10    2      400   1.0e-10 0 r
#contour.plot = presliquid presliquid 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vpresliquid vpresliquid 1 1 10    2      400   1.0e-10 0 r
#contour.plot = denliquid denliquid 1 1 10      2      400   1.0e-10 0 r
#contour.plot = vdenliquid vdenliquid 1 1 10    2      400   1.0e-10 0 r
#contour.plot = temperature temperature 1 10 10      2      400   1.0e-10 0 r
#contour.plot = vtemperature vtemperature 1 1 10    2      400   1.0e-10 0 r
#contour.plot = yvelcombine yvelcombine 1 1 10    2      400   1.0e-10 0 r
#contour.plot = pcombine pcombine 1 1 40      2      400   1.0e-10 0 r
contour.plot = tcombine tcombine 1 10  10      2      400   0.04 0 r
#contour.plot = dencombine dencombine 1 1 10  2      400   1.0e-10 0 r

