

# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# CHANGES FROM PAST VERSION:
# no more raster stuff (hdf), add mac.mac_abs_tol
# blob.* now becomes ns.*
#
max_step  =  999999   # maximum timestep
#max_step  =  2    # maximum timestep
stop_time =  1.0  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0 
geometry.prob_hi   =  10.0 50.0  # units of cm
geometry.is_periodic = 0 0 

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-9
mg.rtol_b = -0.01
Lp.v = 0


amr.n_cell    = 40 200  # originally 32 32 MS
amr.max_level =  3       # originally 3 MS
# 0- 1 level 1- 2 levels  2- 3 levels
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 500     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 10
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 256
#amr.restart         = chk0300
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
mac.mac_abs_tol    = 1.0e-7

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max=1.01      # scale back initial timestep
ns.visc_coef      = 1.0      # coef of viscosityx10^-3=1.0e-3 MS
ns.gravity        = -980.0   # body force  (gravity in MKS units)
ns.tension        = 72.8 0.0 0.0 0.0 0.0 0.0  # cgsx10^-6 (scale vel by 10^-3)
#ns.fixed_dt	  = 0.02     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

ns.axis_dir=1  # set to 1 for a curved nozzle
ns.vorterr=999999.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=0.1
ns.advbot=300.0 # inflow velocity at nozzle at the bottom (cm/s)x10^-3
ns.adv_vel=0.0 # inflow of air from the side x10^-3  = 13.8 
ns.adv_dir=1       # inflow in x-direction
ns.material_type=0 0 0 0
ns.viscconst=0.013 0.0002 0.0 0.0  # g/(cm s)
ns.denconst=1.0 0.001225 1.0 1.0
ns.tcenter=-1.0
ns.xblob=5.0 # cm
ns.yblob=0.0  # 5.0 in 3D ??
ns.zblob=0.0  # base of initial jet location (2d or 3d)
ns.radblob=0.127  # cm  radius of jet and initial hieght of jet from base.
ns.xblob2=7.0
ns.yblob2=0.0
ns.radblob3=1.873
ns.radblob2=2.127
ns.radblob4=0.127
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=53

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 5 1 
ns.hi_bc          = 5 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

