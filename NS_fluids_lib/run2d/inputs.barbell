# radius of cylinder is 1 cm
# water/air interface: yblob2=6.75
# gravity=1000
# V=gt  X=g t^2/2 =1/2  t^2=1/1000  t=0.0316
# V=1000 * 0.0316=31.6 

max_step  =  5000  # maximum timestep
stop_time =  10.0  # maximum problem time

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 0        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0  0.0
geometry.prob_hi   =  1.0  1.0
geometry.is_periodic = 0 0 

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 9000
mg.bot_atol = 1.0e-10
mg.visc_bot_atol = 1.0e-10
mg.rtol_b = -0.01
Lp.v = 1

ns.num_materials=3
ns.num_species_var=0

amr.n_cell    = 64 64
amr.max_level =  1   

#ns.elastic_time=0.0 0.0 5.0
#ns.elastic_viscosity=0.0 0.0 1.0e+3
#ns.polymer_factor=0.0 0.0 0.0   # lambda(1-trace(A)*polymer_factor**2) 0.1


ns.MOFITERMAX=15


ns.minimum_relative_error=1.0e-13
ns.initial_cg_cycles=10
ns.initial_project_cycles=10
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
# 0=GSRB 1=ICRB 2=ILU
Lp.smooth_type=2
Lp.bottom_smooth_type=2


amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 4 4 4 4 4   # number of buffer cells in error est
amr.grid_eff        = 0.8   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4       # block factor in grid generation
amr.check_int       = 100     # number of timesteps between checkpoints
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 20 
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 256
#amr.restart         = chk0500
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 4.0e-6  # level 0 timestep below which we halt

mac.visc_abs_tol    = 1.0e-8
mac.mac_abs_tol    = 1.0e-8

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.1      # scale back initial timestep
ns.change_max=1.01      # scale back initial timestep
ns.visc_coef      = 1.0
ns.gravity        = 0.0   
ns.gravityangle = 0.0
# 12, 13, 23
# sigma_12 cos theta_12 + sigma_23=sigma_13
ns.tension        = 0.0 0.0 0.0  
#ns.fixed_dt	  = 5.0e-5   # hardwire dt
ns.sum_interval   = 10       # timesteps between computing mass 
ns.twall=0.0

# 0 - falling sphere  
# 1 - falling high viscosity drop
# 2 - falling high viscosity crystal, falling inside water.
# 3 - barbell.
ns.axis_dir=3
ns.vorterr=999999.0
ns.rgasinlet=0.0
ns.vinletgas=0.0
ns.advbot=0.0  # -1 falling sphere  0 - high density or viscosity drop
ns.adv_vel=0.0
ns.adv_dir=1       # inflow in x-direction
ns.xblob=0.5
ns.yblob=0.5  
ns.zblob=0.0
ns.radblob=0.025  # radius of sphere ends of barbell .25 mm
ns.radblob2=0.25  # distance between centers
ns.radblob3=0.023  # radius of connecting rod
ns.radblob4=2.8  # freq (hertz)
# 1 cycle is 180 degrees so 2.8 * pi radians/s
# velocity=r theta_dot=pi * radblob4 * radblob2
ns.min_velocity_for_dt=9.0    # 3.14*2.8*.25
ns.yblob2=0.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=531
ns.material_type=0 0 0
ns.FSI_flag=0 0 1
ns.viscconst=0.01 0.0001 999.0
ns.denconst=1.0 0.001226 0.9       # material 3 is falling drop.
ns.heatviscconst=0.0 0.0 0.0
ns.tempconst=293.0 293.0 293.0
ns.pressure_error_cutoff=0.0 0.0 0.0
ns.v=1

# ----------------  PROBLEM DEPENDENT INPUTS
ns.lo_bc          = 4 4
ns.hi_bc          = 4 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE
