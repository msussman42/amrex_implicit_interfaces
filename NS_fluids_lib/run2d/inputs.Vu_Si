#TEMPLATE: Hui Hu and Zheyan Jin, IJMF 2010
#radius: 400 microns, height: 250 microns
#THIS FILE: (Silicon freezing, Figure 6)
#Vu, Tryggvason, Homma, Wells, Takakura, J. Chem. Eng. of Japan, Vol 46(11)
#pages 726-731, 2013.
max_step  =  9999999    # maximum timestep

stop_time = 4.0 # tau=1.2 tau_c=1.4  time=1.2 x 1.4 = 1.7 seconds

# ------------------  INPUTS TO CLASS AMR ---------------------
# set up for bubble
geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
# R=1 => corresponds to drop base radius at initial time.
# R_dimensional=(1)(9.5D-3 meters)=9.5 mm=0.95 cm
geometry.prob_hi=2.0 2.0  # centimeters
ns.slice_dir=1
ns.xslice=0.0 0.0
ns.EILE_flag=-1
ns.truncate_thickness=2.0

ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=5
ns.initial_cg_cycles=10
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
#SUSSMAN JAN20 2023: Important that "project_option= 0 error0=" be O(1)
ns.projection_pressure_scale=1.0
ns.num_materials=4 # 1: liquid 2: air 3: ice 4: solid
ns.num_species_var=0
ns.post_init_pressure_solve=1 
ns.MOFITERMAX=15
ns.MOF_TURN_OFF_LS=0
ns.MOF_DEBUG_RECON=0
ns.continuous_mof=1
ns.vof_height_function=1
ns.mof_decision_tree_learning=100 # default: 40000
ns.MOFITERMAX_AFTER_PREDICT=15
# 0 - centroid furthest from uncaptured centroid
# 1 - use MOF error
ns.mof_error_ordering=0
# water,air,ice,solid
ns.mof_ordering=3 1 2 1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle

ns.multilevel_maxcycle=200
ns.multilevel_restart_period=25
cg.restart_period=25
cg.maxiter = 200
mg.bot_atol = 1.0e-14
mg.rtol_b = -0.01
Lp.v = 0

amr.plotfile_on_restart=1
#ns.visual_revolve=32

amr.n_cell=64 64
amr.max_level = 0
# water, gas, ice, substrate
amr.regrid_int      = 1       # how often to regrid
amr.n_error_buf     = 4 4 4 4 # number of buffer cells in error est
amr.grid_eff        = 0.8     # what constitutes an efficient grid
ns.ns_tiling=false
amr.blocking_factor = 8 8 8 8  # block factor in grid generation
amr.check_int       = 200
#amr.check_int       = 10000  # static freezing test 10 
amr.check_file      = chk     # root name of checkpoint file
amr.plot_int        = 200 # 200
#amr.plot_int        = 500 # static freezing test 10
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 1024
amr.file_name_digits=7
#amr.restart         = chk0027800
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-13

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 1.0      # scale back initial timestep
ns.change_max     = 1.01 
ns.visc_coef      = 1.0
mac.visc_abs_tol  = 1.0e-10
#ns.gravity        = 0.0 # thermal effects only
ns.gravity        = -980.0  
ns.incremental_gravity_flag=1
ns.segregated_gravity_flag=0

# 12,13,14,23,24,34
# LG,LI,LS,IG,GS,SI  
#initial theta_liquid (CL_tensions_from_angles.f):
# sigma_{SG}-sigma_{SL}=sigma_{LG}cos(theta_L_initial)
#    let sigma_{SG}=sigma_{LG} =>
# 1-sigma_{SL}/sigma_{LG}=cos(theta_L_initial)
# sigma_SL = sigma_LG * (1-cos(theta_L))
#
#contact line: theta_L_initial=70 degrees
# LG,LI,LS,IG,GS,SI  (SI used)
# for Vu_Si:
# sigma_sg-sigma_sl=sigma_lg cos(theta_L)
# 1740-281=1740 cos(theta)  theta=acos(0.839)=33 degrees
#thermal effects only
#surface tension algorithm treats liquid and ice as just one liquid:
#Lyu, S., Wang, K., Zhang, Z., Pedrono, A., Sun, C., & 
#Legendre, D. (2021). A hybrid VOF-IBM method for the simulation of 
#freezing liquid films and freezing drops. Journal of Computational 
#Physics, 432, 110160.
#SUSSMAN JAN20 2023 Lyu et al surface tension model assumes that
#liquid and ice are one in the same.  Since the ice surface tension
#values are never used, the code requires that all ice surface tension
#values are 0.0.  Therefore sigma_{LI}=sigma_{IG}=sigma_{SI}=0.0
#(not sigma_{LI}=203.7,sigma_{IG}=920.8)
#scale of capillary wave speed:
#PROB.F90 "capillary_wave_speed": 
#k=2 pi/dx
#omega=k^(3/2)sqrt(tension/(2 * den_interface))
#u_{phasechange}=k * (TDIFF/dx) /(L rho)
# arccos((1740-281)/1740)=33 degrees
# arccos((1740-870)/1740)=60 degrees
ns.tension= 1740.0      0.0 870.0 0.0 1740.0  0.0
ns.tension_init= 1740.0 0.0 870.0 0.0 1740.0  0.0
# triple point condition from Vu et al (SI):
#  water      | 
#   90+18    |  air 180-18 degrees
#  ---------|          n_air_ice=(1 0)
#   ice 90  |          n_water_ice=(0 1)  
#           |          n_air_water dot n_air_ice = cos(18deg)
#                      n_air_water=(cos(18deg)  -sin(18deg)) =
#                       cos(theta)*n_air_ice-sin(theta)*n_water_ice
# notes: theta=180 deg  => n_air_water=-n_air_ice (not allowed)
# notes: theta=-180 deg => n_air_water=-n_air_ice (not allowed)
# notes: theta=90  deg  => n_air_water=-n_water_ice (not allowed)
# notes: theta=-90  deg => n_air_water=+n_water_ice (not allowed)
# ice corner angle=270 degrees
# pinning_angle=18 deg
ns.pinning_angle=0.314 0.0 0.0 0.0 0.0 0.0 

# 1 J/kg = 10^4 erg/g
# specific heat of glass: 0.84E+3 J/(kg K)
# specific heat of water: 4.186E+3 J/(kg K)
# specific heat of ice: 2.05E+3 J/(kg K)
# material 1=liquid 2=gas  3=ice 4=solid  
# Cp_s/Cp_l=0.48
# Pr=Cp_l mu_l/k_l=4.2e+3 * 1.7e-3 / 0.55 = 13.0
ns.stiffCP = 9.10e+6 9.10e+6 9.10e+6 9.10e+6 # dimensional erg/(g K)
# units of latent_heat: 1 J/kg=10^7 erg/(1000 g)=10^4 erg/g
# L=334 J/g=3.34E+9 erg/g=334 J/(kg/1000)=3.34E+5 J/kg
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]
#12 13 14 23 24 34 then reverse
# dimensional J/kg:
# St=Cp_l(T_m - T_c)/L=4.2e+3 * 2/3.34e+5 = 0.025
#ns.latent_heat = 0.0 -3.34e+9 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
ns.latent_heat = 0.0 -18.05e+9 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
#default: Stefan model
ns.freezing_model = 0 0 0 0 0 0 0 0 0 0 0 0 
# 1->2 liquid-> gas
# 1->3 liquid->ice 
# ....
#12 13 14 23 24 34 then reverse
ns.saturation_temp = 0.0 1683.4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
# 
ns.temperature_primitive_variable=1 1 1 1
#ns.fixed_dt	  = 0.01     # hardwire dt
ns.sum_interval   = 10        # timesteps between computing mass 

# initial droplet with small layer of ice at its bottom, on a solid substrate.
# probtype=55 (GENERAL_PHASE_CHANGE.F90)
ns.axis_dir=5   
ns.vorterr=0.0 0.0 0.0 0.0
ns.rgasinlet=1.57
ns.vinletgas=0.0
ns.twall=263  # not used
ns.advbot=0.0  # initial falling (downward) speed of liquid drop if axis_dir=1
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=1 # adv_dir=1 x direction  adv_dir=2 y direction   
ns.pressure_error_cutoff=0.0 0.0 0.0 0.0
# material 1=liquid 2=gas  3=ice 4=solid
ns.material_type=0 0 0 999
# Latent heat: 1 J/kg = 10^7 erg/kg=10^4 erg/g
# 1 Watt=10^7 ERG/S
# 1 W/(M K)=10^5 ERG/(S CM K)
# 1 ERG= 1 (gram cm^2/s^2)
# air: k=0.024 W/(M K)
# water: k=0.58 W/(M K)
# MKS: cp=4.1855 J/((kg/1000)K)=4.1855E+3 J/(kg K)
# k_s/k_l=2.2/0.55=4.0
ns.heatviscconst=152.3e+5 1.52e+5 76.2e+5 76.2e+5 # erg/(s cm K)
# 12 13 14 23 24 34  
ns.heatviscconst_interface=0.0 0.0 0.0 0.0 1.0e-10 76.2e+5
# 1 Pa = 10 CGS


ns.viscconst=21.8e-3 1.08e-3 10.0 1000.0 # derive CGS:  CGS= Pa s x 10
#ns.denconst=1.0 0.00129 1.0 10.0 #thermal effects only
#SUSSMAN JAN20 2023: replaced 2.290. with 2.290
ns.denconst=2.583 0.129 2.350 10.0 #physical values of denconst
#ns.denconst=1.0 0.00129 0.850 10.0 
#added mass 
ns.denconst_interface_added=1.0e+2 1.0e+2 1.0e+2 1.0e+2 1.0e+2 1.0e+2
ns.material_thickness=0.0 0.0 0.0 0.0
ns.FSI_flag=0 0 9 1 #FSI_ICE_STATIC=9 FSI_PRESCRIBED_PROBF90=1
ns.recalesce_flag=0 0 0 0
# solidheat_flag=0=>diffuse in solid 
# solidheat_flag=1=>dirichlet  (must have heatvisc(im_solid)>0)
# solidheat_flag=2=>neumann
ns.solidheat_flag=1
#instead of T=271.0 (-2 test plate), try -3,-4,-5,-6
ns.tempconst=          1683.4 1683.4 1453.0 1453.0
ns.initial_temperature=1683.4 1683.4 1453.0 1453.0
ns.xblob3=1683.4 #force ambient temperature condition on all walls except the
                #bottom wall (axis_dir=5)
ns.xblob=0.0  # center of water drop
ns.yblob=0.125 # 4 * dxcoarse = 4 * 2 /64=1/8
ns.zblob=0.0
ns.xblob2=0.0 # center of surface of cold plate (xblob2,yblob2) (inclined)  
ns.yblob2=0.125
ns.zblob2=0.0
ns.radblob2=0.0 # zero degrees incline (radians)
# thickness of underside of droplet that is already frozen
# 0.0625 = 0.125/2
ns.radblob3=0.0625 #dimensionless 2*dxcoarse=4/64=1/16
# volume of initial water+ice drop: volume=(1/2)  (4/3)pi r^3=
# (1/2) (4/3)pi(6x10^{-1})^3=4 x 36 x pi x 10^{-3} = 0.452cm^3
#ns.zblob4=0.25
#transitional substrate temperature
ns.zblob4=0.0 #substrate temperature=wall temperature(atylo)
#Hui Hu and Zheyan Jin, IJMF 2010
#r_{base}: 400 microns, height: 250 microns
#Vu et al: r_{base} = 9.5D-3 meters=0.95 cm
ns.radblob=0.6 # centimeters(radblob is effective hemispherical radius)
               # r_base=0.95cm
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55

#ns.mem_debug = 1
#ns.v = 2
ns.output_drop_distribution=1
#ns.show_mem=1
#ns.d = 1

# ----------------  PROBLEM DEPENDENT INPUTS
# boundary conditions 
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=0
ns.lo_bc          = 3 2
ns.hi_bc          = 3 2
ns.temperature_lo_bc=3 1
ns.temperature_hi_bc=1 1

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

